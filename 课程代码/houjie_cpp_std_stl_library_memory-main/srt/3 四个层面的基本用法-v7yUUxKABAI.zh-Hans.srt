1
00:00:04,864 --> 00:00:07,424
现在我们就把这四个东西

2
00:00:07,936 --> 00:00:08,960
用电影院

3
00:00:10,496 --> 00:00:11,520
前两行

4
00:00:12,032 --> 00:00:13,056
Madoff工福利

5
00:00:13,312 --> 00:00:15,616
你再说我想大家熟悉了

6
00:00:16,128 --> 00:00:22,016
OK关内存释放掉分配的时候获得一个指针

7
00:00:23,040 --> 00:00:24,320
要分配多大的

8
00:00:25,088 --> 00:00:26,112
这个可以指定

9
00:00:26,368 --> 00:00:32,512
这样的意思是512个孩子就是自己自己就是罪

10
00:00:32,768 --> 00:00:36,608
1G很第1节的动作

11
00:00:38,912 --> 00:00:40,192
第4行的第5好

12
00:00:40,960 --> 00:00:42,752
使用六根据列车

13
00:00:44,544 --> 00:00:46,592
令后面要接Class名称

14
00:00:47,872 --> 00:00:49,152
得到了一根指针

15
00:00:49,664 --> 00:00:50,688
什么类型

16
00:00:50,944 --> 00:00:51,712
确定了

17
00:00:52,224 --> 00:00:58,112
因为你6416某一个类的类型所以得到了指针式一定要吃下哪种类型

18
00:00:58,368 --> 00:01:02,208
我现在这个背景显示不足标准库提供的一个负数

19
00:01:04,768 --> 00:01:05,792
开行吗

20
00:01:06,048 --> 00:01:12,192
帮我不要他的时候我把他比例的这个内存就收回去就还还了还给

21
00:01:12,448 --> 00:01:18,336
给谁我们现在简单的讲还给操作系统好了其实不是反正就是玩掉了

22
00:01:20,384 --> 00:01:21,408
绝大部分的人

23
00:01:23,200 --> 00:01:25,248
只收取一根二汉四行

24
00:01:27,040 --> 00:01:28,832
接下来就比较陌生了

25
00:01:29,856 --> 00:01:30,880
下面是两行

26
00:01:31,136 --> 00:01:33,184
就是调用特殊的函数

27
00:01:33,440 --> 00:01:36,512
这个特殊函数在上夜我们再看一眼这个

28
00:01:37,792 --> 00:01:39,840
我是刚给了他其实就是

29
00:01:40,096 --> 00:01:41,888
一个函数而

30
00:01:42,400 --> 00:01:43,424
这是一个函数

31
00:01:44,192 --> 00:01:45,984
这是一个全局的函数

32
00:01:46,240 --> 00:01:48,032
我们来看看怎么用

33
00:01:48,800 --> 00:01:52,640
这么写后面加512得到了一个指针

34
00:01:52,896 --> 00:01:54,432
然后还得时候呢

35
00:01:54,944 --> 00:01:56,480
还得这个指针

36
00:01:56,992 --> 00:02:03,136
这次点行的写法和12的写法78的取法有些方式完全1

37
00:02:03,392 --> 00:02:07,232
只是函数的名称换

38
00:02:10,304 --> 00:02:15,424
我现在可以告诉你其实17行的这个东西

39
00:02:15,680 --> 00:02:17,984
里头就是调用没了

40
00:02:18,240 --> 00:02:21,568
18行这个东西里头就是各种辐射

41
00:02:24,640 --> 00:02:29,504
里头是什么意思我怎么知道呢因为我看过源代码

42
00:02:29,760 --> 00:02:32,064
等下我们就拿出来让你看看

43
00:02:34,368 --> 00:02:35,648
好在我家

44
00:02:36,160 --> 00:02:40,000
肺上叶这个表格里面的前三种东西我们都用过了

45
00:02:40,512 --> 00:02:43,072
第4种东西分配器

46
00:02:44,096 --> 00:02:44,864
配信

47
00:02:46,144 --> 00:02:48,192
这个地方我写的段子

48
00:02:48,960 --> 00:02:50,496
定义选项

49
00:02:50,752 --> 00:02:52,544
这是我要根据是

50
00:02:53,056 --> 00:02:55,104
我现在是运作在

51
00:02:55,872 --> 00:03:02,016
微信身上还是在不论是身上还是在着陆器身上我有不同的

52
00:03:02,272 --> 00:03:04,576
大同小异但是有一点点小

53
00:03:05,088 --> 00:03:05,600
差评

54
00:03:06,368 --> 00:03:07,904
为什么需要这样呢

55
00:03:09,952 --> 00:03:15,072
因为这个分配器虽然是标准库所制定下来的

56
00:03:15,840 --> 00:03:21,984
它的接口岸不管它里头时做个家可以做法完全不一样无所谓但是他的妻

57
00:03:22,240 --> 00:03:22,752
接口

58
00:03:23,520 --> 00:03:27,104
对于我使用者的接口应该药一样

59
00:03:27,872 --> 00:03:29,408
那是很不幸呢

60
00:03:30,432 --> 00:03:31,456
就不太一样

61
00:03:31,968 --> 00:03:33,248
存在那么一点点

62
00:03:33,504 --> 00:03:34,272
茶艺

63
00:03:34,528 --> 00:03:40,672
所以我必须检测我现在是在用什么样的编译器来决定我要怎么写

64
00:03:42,720 --> 00:03:44,256
这是这三段的原因

65
00:03:45,792 --> 00:03:47,840
我们先看玻璃的家家

66
00:03:49,376 --> 00:03:55,520
当然我已经确知了在这三种兵器上面的他们都已经有定义一个

67
00:03:55,776 --> 00:03:57,824
你把家常凉好了

68
00:03:58,336 --> 00:04:00,384
其实也不能算常亮

69
00:04:01,152 --> 00:04:02,944
好朋友这样的一个符号所以

70
00:04:03,456 --> 00:04:04,480
我可以去

71
00:04:04,736 --> 00:04:07,808
曾测我现在到底是在哪一个冰一品牌下

72
00:04:08,576 --> 00:04:10,112
Competency家家

73
00:04:11,392 --> 00:04:17,536
帮我要使用分配器直接使用了前面提过我如果用容器70倍后容易

74
00:04:17,791 --> 00:04:22,911
像这样子再用分配器那我现在让我开容许我直接用

75
00:04:23,935 --> 00:04:26,239
这个就是分配器的名称

76
00:04:27,519 --> 00:04:32,639
用的时候必须告诉他我现在要分配的每个单元是什么

77
00:04:33,151 --> 00:04:34,943
我现在说我要走去

78
00:04:35,967 --> 00:04:38,015
这样就形成了一个type

79
00:04:38,271 --> 00:04:39,039
背景

80
00:04:39,807 --> 00:04:45,183
他曾练后面直接加小括号这就形成了一个临时对象

81
00:04:45,695 --> 00:04:47,743
建立了一个对象没有名称

82
00:04:48,511 --> 00:04:50,559
将这个临时对象

83
00:04:50,815 --> 00:04:54,655
他的生命了他生命的这一行这个语句

84
00:04:55,167 --> 00:04:58,751
结束之后到下一行这个生命就结束了

85
00:04:59,519 --> 00:05:01,055
只存在于最好

86
00:05:01,823 --> 00:05:04,639
中国是只是示范那个做法

87
00:05:05,407 --> 00:05:11,551
我我我总之我是为了要得到一个对象为什么那我要调用这个

88
00:05:13,599 --> 00:05:18,463
他的下一行人我又建立一个对象为这是我要调用这个函数

89
00:05:21,279 --> 00:05:27,423
当然我也可以在这两个字上我建立一个对象给一个名称然后在下面这两行

90
00:05:27,679 --> 00:05:32,031
就用那个名称来调用这两个函数也可以

91
00:05:32,799 --> 00:05:34,079
这个无所谓

92
00:05:35,871 --> 00:05:36,383
好

93
00:05:36,639 --> 00:05:38,687
所以我们现在正是到了

94
00:05:38,943 --> 00:05:42,527
分配器直接要用的话是这么用的

95
00:05:43,295 --> 00:05:48,415
哈里头有两个最重要的函数一个叫Lp的一个叫clk

96
00:05:50,463 --> 00:05:56,607
怎么去用它那这边我指定如果没有注解说这样我的意思是要五个整数

97
00:05:57,119 --> 00:06:01,727
不是五个字一个字节不是这个整数因为这里已经讲了

98
00:06:02,751 --> 00:06:04,287
他分配的发硬是怎么说

99
00:06:05,567 --> 00:06:09,151
下一行那再行就把上银行了这个指针

100
00:06:09,407 --> 00:06:10,687
打进去

101
00:06:10,943 --> 00:06:12,735
Allocate规划

102
00:06:12,991 --> 00:06:14,015
还给谁

103
00:06:14,271 --> 00:06:17,343
这个后面再说了反正就是玩掉了

104
00:06:19,903 --> 00:06:24,511
好这里出现一个让人让人头痛的事情

105
00:06:26,559 --> 00:06:30,399
这个规划的时候不但是玩了一根指针

106
00:06:30,655 --> 00:06:33,727
还要把彭出到底是要几个

107
00:06:33,983 --> 00:06:35,007
你要告诉他

108
00:06:36,287 --> 00:06:38,079
这个让人很困惑

109
00:06:39,871 --> 00:06:41,919
这个舞就是下面这个舞

110
00:06:42,431 --> 00:06:48,575
如果给错了那你上面是分配五个下面是说要还期的整个就错乱掉了

111
00:06:50,111 --> 00:06:54,975
也就是说使用分配器带来一种困扰

112
00:06:55,487 --> 00:07:01,119
你得记住每一次你拿的是几个一定将来给我玩

113
00:07:01,375 --> 00:07:02,399
正确的话

114
00:07:04,703 --> 00:07:07,007
这种事情只有容器做的到

115
00:07:08,543 --> 00:07:09,823
为什么我这样讲呢

116
00:07:10,079 --> 00:07:12,895
我们后面再慢慢把这事情弄清楚

117
00:07:13,663 --> 00:07:14,687
所以我的意思是

118
00:07:15,199 --> 00:07:21,343
容器的话它自己非常清楚他这两个会搭配这个动物或气跟期

119
00:07:21,599 --> 00:07:27,743
10000个10000他会自己会搭配我们像现在这样用的话那对我们困扰就很高

120
00:07:29,535 --> 00:07:35,679
所以一般人是不会通过分配器直接来拿内存像这样的还是不会

121
00:07:35,935 --> 00:07:37,727
这里只是试一下

122
00:07:39,007 --> 00:07:40,543
这个是不认识

123
00:07:42,847 --> 00:07:45,663
Microsoft Windows

124
00:07:46,175 --> 00:07:48,223
这个两段的写写法

125
00:07:48,735 --> 00:07:50,783
仔细比较一下上跟下

126
00:07:53,343 --> 00:07:55,391
他的差别

127
00:07:56,415 --> 00:07:57,439
在于

128
00:07:57,695 --> 00:08:00,767
这里的Locate有第2个参数

129
00:08:02,047 --> 00:08:05,375
而且这个参数又很奇怪我真的还标明是没有应用

130
00:08:06,399 --> 00:08:12,543
这个按照道理讲你要分配一块内存你只要告诉他

131
00:08:12,799 --> 00:08:18,175
他说我要多大就可以了1234实在不知道他要做什么

132
00:08:19,455 --> 00:08:23,551
他们是有作用的我们现在就不必去吉他

133
00:08:24,575 --> 00:08:30,719
而上跟下这个地方我不会感觉下面是一个玻璃的这个设计比较

134
00:08:30,975 --> 00:08:31,743
较合理

135
00:08:32,511 --> 00:08:38,655
不应该让我们指定一个我们其实不搞不清楚的第2参数我们根本不知道它的意义是什么

136
00:08:39,679 --> 00:08:42,239
JVC的正接口比较糟糕

137
00:08:44,543 --> 00:08:45,823
但其实

138
00:08:46,847 --> 00:08:50,687
标准库在设计在描述分配器的时候

139
00:08:50,943 --> 00:08:53,247
本来就有这个第2层数

140
00:08:54,015 --> 00:08:58,879
我刚刚讲过其他的设计是有作用只是我们现在不必去理解

141
00:09:00,415 --> 00:09:03,743
Ss18也有第2个实参

142
00:09:04,767 --> 00:09:06,559
20它有默认值

143
00:09:06,815 --> 00:09:08,095
所以你就不必给了

144
00:09:08,351 --> 00:09:09,887
这对我们就合理多了

145
00:09:10,655 --> 00:09:14,495
而VC没有默认值所以你得这么写

146
00:09:15,519 --> 00:09:18,335
两者的差别

147
00:09:20,639 --> 00:09:25,247
Extends second UC一下我们看到有什么差别

148
00:09:26,527 --> 00:09:27,807
他比较多一些了

149
00:09:29,343 --> 00:09:31,647
这个allocated名字换了

150
00:09:32,415 --> 00:09:34,207
Aria2c

151
00:09:35,743 --> 00:09:36,767
另外呢

152
00:09:37,535 --> 00:09:41,631
放进去的512x512个字节

153
00:09:42,143 --> 00:09:48,287
而不是512个什么单元因为这里根本就没有让你要求你放什么单元静

154
00:09:48,543 --> 00:09:50,847
我想上面要告诉他子

155
00:09:53,919 --> 00:09:55,711
这就是他们的差别

156
00:09:58,015 --> 00:10:04,159
调用的方式都不一样因此我必须分三个选项来洗

157
00:10:07,231 --> 00:10:13,375
这样我们就初步的获得了直接调用分配器的一个做法

158
00:10:15,679 --> 00:10:18,751
他说我给你的代码不是这样写

159
00:10:19,007 --> 00:10:25,151
因为下面这一个是比较早期的版本是当时

160
00:10:25,407 --> 00:10:29,759
我再次给莫2.9版时候

161
00:10:30,783 --> 00:10:36,927
也就是说2.98那个比较早期的版本了我2.52年反正我手上是20集

162
00:10:37,183 --> 00:10:37,695
9

163
00:10:38,207 --> 00:10:41,279
他却是带着一个分配器叫这种名称

164
00:10:43,327 --> 00:10:44,351
可是现在

165
00:10:45,375 --> 00:10:48,959
后面比较新标从哪一版开始这个东西不见

166
00:10:50,239 --> 00:10:51,263
换了一个名称了

167
00:10:51,519 --> 00:10:55,103
这个名称以及这个标准方式跟上面这个人完全一样

168
00:10:55,871 --> 00:10:58,687
有一点他回归到政府来了

169
00:10:59,711 --> 00:11:01,503
那他过去是不正统咯

170
00:11:02,783 --> 00:11:08,159
正是身上这个这个东西非常的巧妙

171
00:11:08,415 --> 00:11:10,975
我们后面要分析分配器

172
00:11:11,487 --> 00:11:15,071
就是拿这个来做目标来分析

173
00:11:43,487 --> 00:11:44,511
换了个名字了

174
00:11:44,767 --> 00:11:45,791
这个是

175
00:11:46,047 --> 00:11:48,607
我在跟UC 4.9版

176
00:11:51,167 --> 00:11:54,239
搜索编译过来一个程序

177
00:11:54,751 --> 00:11:56,799
所以你跟上业来比较

178
00:11:57,055 --> 00:11:58,847
分配器换了个名字

179
00:12:01,919 --> 00:12:08,063
那么这个换那个名字不但是名字换了它的用法也换了换了跟回归到

180
00:12:08,319 --> 00:12:09,343
向标准

181
00:12:09,855 --> 00:12:11,135
为何看起

182
00:12:12,159 --> 00:12:15,743
所以你把商业跟这也拿来比对这个用法

183
00:12:16,255 --> 00:12:22,399
好汉坡Nancy上音乐这边的用法就完全一样用Microsoft完全一样

184
00:12:23,167 --> 00:12:28,031
多了一个第234什么讨厌一点但其他都一样

185
00:12:28,543 --> 00:12:30,079
培养液比对一下

186
00:12:31,103 --> 00:12:33,151
这时候由于

187
00:12:33,407 --> 00:12:38,783
都一样吗所以这个你就很熟悉了你指定一个单元

188
00:12:39,551 --> 00:12:45,439
这边的你要七个只是七个单元不再是七个字节

189
00:12:49,279 --> 00:12:51,071
帮我刚刚提到

190
00:12:51,839 --> 00:12:57,983
以前这个早期版本这个arch1是非常重要它里面的动作非常的巧妙

191
00:13:00,287 --> 00:13:02,079
这个巧妙的东西

192
00:13:03,103 --> 00:13:06,175
后来比较新的版本的换了个名字

193
00:13:06,687 --> 00:13:07,455
这个

194
00:13:08,735 --> 00:13:11,295
这个名字叫作Locate

195
00:13:11,807 --> 00:13:16,159
是我就是一个内存池我们很习惯用这个字眼

196
00:13:16,415 --> 00:13:22,559
内存的时候他们就是一个池塘为什么当初会叫做内存池一个词

197
00:13:22,815 --> 00:13:24,351
我也没有去深究

198
00:13:26,655 --> 00:13:32,799
到底内存池一个是一个什么东西后面慢慢你就会很清楚我们做内存管理都是

199
00:13:33,055 --> 00:13:35,871
我是用内存池的概念的做管理

200
00:13:36,895 --> 00:13:39,199
这两页整理一下

201
00:13:39,455 --> 00:13:42,271
上夜的这一个东西

202
00:13:42,527 --> 00:13:45,343
现在换了一个名字叫这一个

203
00:13:45,599 --> 00:13:47,647
这里的东西非常棒

204
00:13:47,903 --> 00:13:49,695
是我们后面要探讨的

205
00:13:53,279 --> 00:13:57,631
怎么办个东西为什么它不是放在这个要从库

206
00:13:58,399 --> 00:14:00,959
微镜的这个这个之下呢

207
00:14:01,471 --> 00:14:04,031
把这些细节的后面再说了

208
00:14:04,543 --> 00:14:07,359
现在你知道的路线以下有两个分配器

209
00:14:08,383 --> 00:14:10,943
智障可能是底下有七八个分配器

210
00:14:12,223 --> 00:14:18,367
所以我们这个课程也可以让他在理解如果你是用革命思议的话我选哪一个分配器可以提

211
00:14:18,623 --> 00:14:19,647
提升我的效率

212
00:14:19,903 --> 00:14:24,511
如果我不是用克隆C的话经过这么客们这门课程之后

213
00:14:25,023 --> 00:14:31,167
我知道到了61整个编译源代码做爱会出来分析他把它改装到VC的改革

214
00:14:31,423 --> 00:14:32,703
台中到BC

215
00:14:33,983 --> 00:14:35,775
你可以获得这样的一个

216
00:14:36,287 --> 00:14:38,591
记住观念了一个方向

217
00:14:41,663 --> 00:14:42,943
这是我们对

218
00:14:43,455 --> 00:14:44,223
四个

219
00:14:45,759 --> 00:14:49,087
四个什么东西primitive

220
00:14:50,367 --> 00:14:53,183
使用方式做一个示范

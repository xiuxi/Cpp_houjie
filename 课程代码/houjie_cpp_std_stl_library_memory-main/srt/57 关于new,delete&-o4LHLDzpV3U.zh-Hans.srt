1
00:00:18,176 --> 00:00:21,504
因此都变得比较小这是当时的样子

2
00:00:26,624 --> 00:00:27,392
宁

3
00:00:28,416 --> 00:00:30,464
令分解动作

4
00:01:15,264 --> 00:01:20,128
这是分解下去之后坐标的那个函数可以重载

5
00:01:20,640 --> 00:01:22,176
这个先前都提过了

6
00:01:23,968 --> 00:01:24,992
而这一页呢

7
00:01:26,528 --> 00:01:28,064
被约谈的事

8
00:01:28,576 --> 00:01:32,160
这些operator new和operator delete

9
00:01:32,928 --> 00:01:38,560
Operator delete的成绩只是调用malloc

10
00:01:39,072 --> 00:01:40,608
而malloc的

11
00:01:40,864 --> 00:01:44,448
分配到的区块长什么样子

12
00:01:44,704 --> 00:01:46,240
这已经告诉大家了

13
00:01:47,264 --> 00:01:53,408
这部分在我的定位课程将内存管理就谈得更深入更深了

14
00:01:53,664 --> 00:01:55,968
在这边

15
00:01:56,480 --> 00:02:02,112
我们这个part one这么基础的课程这个图已经足够让大家知道

16
00:02:02,624 --> 00:02:05,184
一个区块的结构

17
00:02:07,488 --> 00:02:09,280
今晚还有这一张投影片

18
00:02:10,304 --> 00:02:11,840
我们已经谈到了

19
00:02:12,352 --> 00:02:18,496
中括号的怒汉的例子这个术语叫做A renewed journalist

20
00:02:23,104 --> 00:02:24,896
而这些都是先前谈过的

21
00:02:25,152 --> 00:02:28,224
他是先前没有告诉你

22
00:02:30,784 --> 00:02:32,320
告诉你什么

23
00:02:32,576 --> 00:02:34,880
你的一个Class可其实可以

24
00:02:35,392 --> 00:02:37,952
重载这些函数

25
00:02:39,488 --> 00:02:40,512
做什么用呢

26
00:02:41,024 --> 00:02:47,168
作为可以拿来做一些内存管理一些内存池设计内存

27
00:02:47,424 --> 00:02:52,032
实是一个大的话题该怎么设计都不是这门课程要讲

28
00:02:52,544 --> 00:02:53,568
不是这边

29
00:02:53,824 --> 00:02:59,968
属于C加加语言的部分我要告诉你的是这些函数的

30
00:03:00,480 --> 00:03:02,272
重载的气势

31
00:03:06,624 --> 00:03:08,928
所以我现在要补充了就从这里开始

32
00:03:10,464 --> 00:03:13,536
针叶我要告诉你如何重返

33
00:03:14,560 --> 00:03:16,864
我加了这个符号是表示全

34
00:03:17,120 --> 00:03:17,888
钱柜娱乐

35
00:03:18,144 --> 00:03:19,168
Global

36
00:03:20,448 --> 00:03:23,776
Operator new representative of a new product

37
00:03:26,080 --> 00:03:26,848
怎么从来呢

38
00:03:27,360 --> 00:03:28,640
这四个就是

39
00:03:28,896 --> 00:03:30,176
这里有四个吗

40
00:03:30,432 --> 00:03:31,456
就是这次的

41
00:03:32,736 --> 00:03:34,784
有86的部分

42
00:03:35,552 --> 00:03:38,368
一定要有一个参数就是大小

43
00:03:40,928 --> 00:03:47,072
这个函数是当年写好之后其实是不会是你调用然后提过了六个切成三个动作

44
00:03:47,328 --> 00:03:50,912
那个万人讲过了三个动作的一个动作

45
00:03:51,424 --> 00:03:56,544
当你有重载就跑到你这里来你没有重载就用全局的一个

46
00:03:58,080 --> 00:04:02,688
而这些函数当然要知道大小姐这是谁传进来的呢

47
00:04:02,944 --> 00:04:04,736
定义气转进来

48
00:04:04,992 --> 00:04:07,296
这个函数写出来这个编译器调用

49
00:04:09,088 --> 00:04:09,600
这是

50
00:04:09,856 --> 00:04:11,392
这个你看这个妞

51
00:04:20,351 --> 00:04:23,679
Original

52
00:04:24,703 --> 00:04:27,775
要还吗你要还你会那个你会穿之间给他

53
00:04:28,543 --> 00:04:32,383
所以这就是他的格式它的形式它的接口

54
00:05:13,343 --> 00:05:17,695
调用上面

55
00:05:53,279 --> 00:05:54,047
下一页

56
00:05:56,863 --> 00:06:03,007
我也可以对一个Class里头的成员这个成员做成长我这个成员

57
00:06:03,775 --> 00:06:05,311
刚刚那个是全局哦

58
00:06:14,271 --> 00:06:17,599
这就呼应标题的member成员函数

59
00:06:19,647 --> 00:06:20,159
接口

60
00:06:21,695 --> 00:06:22,975
我刚刚的一次

61
00:06:25,023 --> 00:06:29,887
这边你的作为刚刚就是商业商业这个意思

62
00:06:30,399 --> 00:06:31,423
回到这里来

63
00:06:33,215 --> 00:06:34,495
所谓

64
00:06:35,519 --> 00:06:40,895
这边有一个options选项选择可有可无的

65
00:06:41,151 --> 00:06:44,991
就是当你写这一你要重载这个函数的时候

66
00:06:45,503 --> 00:06:48,319
写不写的二层数都无所谓

67
00:06:51,903 --> 00:06:53,183
有没有影响

68
00:06:54,463 --> 00:06:57,791
帮你写出这个东西

69
00:06:58,815 --> 00:07:00,351
使用者这么用

70
00:07:02,399 --> 00:07:03,167
宁

71
00:07:03,679 --> 00:07:05,983
分解为三个动作

72
00:07:06,495 --> 00:07:11,103
给力分解为两个动作分解出来的

73
00:07:11,871 --> 00:07:15,711
这一个和下面这个就各自跑到这里来了

74
00:07:19,807 --> 00:07:21,343
这样你就接管

75
00:07:22,111 --> 00:07:25,439
接管的内存的分配和释放的行为

76
00:07:28,767 --> 00:07:30,047
标题所说的

77
00:07:30,303 --> 00:07:32,607
成员函数重载

78
00:07:37,215 --> 00:07:39,263
我们接管的通常做什么事情呢

79
00:07:39,775 --> 00:07:43,359
设一个stringlist

80
00:07:46,175 --> 00:07:47,199
再看下一页

81
00:07:48,735 --> 00:07:50,783
我也可以重返

82
00:07:51,295 --> 00:07:54,623
成员函数里面的这一个这一个

83
00:07:59,231 --> 00:07:59,999
怎么写呢

84
00:08:00,767 --> 00:08:01,535
下面资料

85
00:08:06,655 --> 00:08:09,471
各位可以拿这射和散射的比对

86
00:08:11,007 --> 00:08:15,871
再发再一次比对就是有没有中括号不过是如此

87
00:08:16,639 --> 00:08:19,199
当然因此用户没有中国好的

88
00:08:19,455 --> 00:08:21,247
有着不好表示这个数吧

89
00:08:21,759 --> 00:08:23,551
传进来的这个

90
00:08:24,063 --> 00:08:24,831
大小

91
00:08:25,087 --> 00:08:26,111
肯定是

92
00:08:26,367 --> 00:08:29,951
和尚也是不一样的商业是一个对象这里的是一个

93
00:08:30,207 --> 00:08:30,975
数组

94
00:08:31,231 --> 00:08:33,535
大小不肯定不同

95
00:08:34,559 --> 00:08:37,887
帮你这么写字后

96
00:08:38,655 --> 00:08:40,447
使用者这么用

97
00:08:41,471 --> 00:08:44,031
这些动作又被分解成右边

98
00:08:44,799 --> 00:08:50,943
分解出来的动作这一个和这一个会分别调用下面因为你敢写的吗你不写了你从法

99
00:08:51,199 --> 00:08:51,711
买了

100
00:08:52,223 --> 00:08:54,527
你有你自己新的定义所以上面的

101
00:08:55,039 --> 00:08:56,063
来调用

102
00:08:57,343 --> 00:09:00,415
Cplusplus机构是怎么设计的

103
00:09:01,439 --> 00:09:04,511
让你得以接管使用者的行为

104
00:09:06,303 --> 00:09:08,607
这种内存分配和释放的行为

105
00:09:15,007 --> 00:09:16,287
这个是

106
00:09:16,543 --> 00:09:19,615
你到底上写作写的我们要做这个动作

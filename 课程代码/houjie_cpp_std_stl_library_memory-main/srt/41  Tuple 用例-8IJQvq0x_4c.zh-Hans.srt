1
00:00:07,680 --> 00:00:08,192
好

2
00:00:09,728 --> 00:00:11,008
继续讲下去

3
00:00:11,264 --> 00:00:13,056
前提的是这个

4
00:00:13,312 --> 00:00:14,592
惯用型的

5
00:00:15,360 --> 00:00:16,896
Table_cache方式

6
00:00:17,664 --> 00:00:19,200
接下来我要介绍的是

7
00:00:20,224 --> 00:00:20,992
这个东西

8
00:00:22,272 --> 00:00:25,856
这个字到底该怎么念呢请upl

9
00:00:26,112 --> 00:00:30,976
我一直很困惑因为在之前的那个字典是查不到这个词

10
00:00:32,000 --> 00:00:34,304
英文字其实都是

11
00:00:34,816 --> 00:00:37,888
成长每年每年可增加新的子

12
00:00:39,424 --> 00:00:41,472
再见我去查了查到了

13
00:00:42,240 --> 00:00:45,824
这个有这个概念清楚还是tuples

14
00:00:46,336 --> 00:00:47,872
我查到的结果是

15
00:00:48,896 --> 00:00:49,664
英语

16
00:00:50,176 --> 00:00:51,712
英语念秋风

17
00:00:51,968 --> 00:00:58,112
美女美国有美国的发音美念他自己置于他是什么意

18
00:00:58,368 --> 00:01:00,672
没意思了他的意思就是

19
00:01:00,928 --> 00:01:02,464
一堆东西的组

20
00:01:03,744 --> 00:01:05,280
一个东西的组合

21
00:01:05,792 --> 00:01:08,864
这个东西非常的神奇呀

22
00:01:09,376 --> 00:01:10,656
在

23
00:01:10,912 --> 00:01:14,496
这个是从PR万这个版本还加进来

24
00:01:14,752 --> 00:01:20,896
我现在打标准库这个第4讲坛的是标准库那是STL以外的是

25
00:01:21,152 --> 00:01:22,176
这些周边的东西

26
00:01:22,432 --> 00:01:28,576
这是不能不能说这个是STL但是标准库的一个东西是从西亚万字

27
00:01:28,832 --> 00:01:34,464
300块的都是2003年才开始的在这个之前是没有的

28
00:01:34,720 --> 00:01:40,864
那现在是到了现在加2.0也就是2011年当然就涵盖了

29
00:01:41,120 --> 00:01:44,448
过去的PR万这个就是变成标准的一部分

30
00:01:44,704 --> 00:01:45,984
M

31
00:01:47,264 --> 00:01:51,104
我那就不好了

32
00:01:51,872 --> 00:01:53,408
它允许你

33
00:01:54,432 --> 00:01:55,968
在声明的时候可以

34
00:01:56,224 --> 00:02:02,368
声明一个结构体我这朵讲的这个结构是我们口语的结构不是新加的class

35
00:02:04,160 --> 00:02:10,304
Struct不是那个东西你要一组东西你可以任意的指定

36
00:02:10,560 --> 00:02:12,864
要多少个元素进去

37
00:02:13,120 --> 00:02:16,448
那这些元素可以是任意的类型

38
00:02:16,704 --> 00:02:22,080
那你指定下去他就形成那个样子就是说你在用的时候能一你来指定

39
00:02:22,336 --> 00:02:28,480
把这个弹性太大了这个匪夷所思怎么可能有一种东西比如说你

40
00:02:28,736 --> 00:02:34,880
你使用rest你使用list链表您使用什么你使用你使用复数看

41
00:02:35,136 --> 00:02:40,512
你使用整数int他都是已经是一种特定的类型

42
00:02:41,280 --> 00:02:47,424
怎么会有这样的一种东西可以让你指定任意的元素而元素是任意的类型

43
00:02:47,680 --> 00:02:49,728
这到底是怎么做的呢

44
00:02:49,984 --> 00:02:52,288
我们现在先来看怎么用

45
00:02:53,312 --> 00:02:56,640
我真的是一个例子这边切成两块从这边看戏

46
00:02:57,152 --> 00:03:00,224
我现在不知道了做投影片的时候呢怎么样给一个小

47
00:03:00,736 --> 00:03:04,320
小小小人物让你知道从这里看去

48
00:03:04,832 --> 00:03:05,856
好

49
00:03:06,368 --> 00:03:09,952
我首先测试一些我们比较熟悉的类型

50
00:03:10,208 --> 00:03:11,488
大小

51
00:03:12,768 --> 00:03:15,840
为什么要这么做因为我等一下要用这些类型

52
00:03:16,096 --> 00:03:17,632
组合成一个tuple

53
00:03:18,656 --> 00:03:23,008
然后我要看看从我们的理解里面这个大小是不是合理

54
00:03:23,264 --> 00:03:25,056
我现在先测试的是

55
00:03:25,312 --> 00:03:26,592
String的大小

56
00:03:27,616 --> 00:03:29,408
虽然我在这整个

57
00:03:29,920 --> 00:03:34,016
这个整个这个标准库这里头没有去提到

58
00:03:34,272 --> 00:03:40,416
要从库里面有一个Class嚼碎的我们要去提它的结构不过我们一般在

59
00:03:40,672 --> 00:03:42,720
在学校里面可能那可能你写过

60
00:03:42,976 --> 00:03:44,256
字符串这种

61
00:03:44,512 --> 00:03:46,816
Class它里头就一根尺寸

62
00:03:47,072 --> 00:03:50,912
绝大部分的设计都是这样标准库里投的也

63
00:03:51,424 --> 00:03:56,032
也是这样说他的大小就是一根指针的大小

64
00:03:56,288 --> 00:04:02,432
至于他拉出去纸上什么字符串的那是另外的事情在这个string

65
00:04:02,688 --> 00:04:03,200
大人

66
00:04:03,712 --> 00:04:09,344
在32位的电脑上它的大小是一个执政440个自己

67
00:04:10,112 --> 00:04:11,648
第2个人是double

68
00:04:11,904 --> 00:04:13,440
阿宝十八个字节

69
00:04:13,696 --> 00:04:14,976
第3个float

70
00:04:15,232 --> 00:04:17,280
浮点数84个字节

71
00:04:17,536 --> 00:04:19,839
第4个整数他四个字节

72
00:04:20,863 --> 00:04:27,007
我就把它打印出来看一遍我还看了一下这个double complex复数

73
00:04:27,263 --> 00:04:30,335
负数也是C加加标准库提供的一个

74
00:04:30,591 --> 00:04:36,735
一个Class的复数就是大家在初中学到了这个什么工作负数那个负数有实不虚

75
00:04:36,991 --> 00:04:42,367
所以如果我指定服是我选择了辞不屈服他是否的话

76
00:04:43,647 --> 00:04:44,671
一个大包是吧

77
00:04:44,927 --> 00:04:48,767
一个double 18个字节这边能打印出来了所以

78
00:04:49,023 --> 00:04:55,167
复数只有时不需不两个答不答应该是两位老就是16没错这都是

79
00:04:55,423 --> 00:04:56,191
不是符合我们

80
00:04:57,471 --> 00:04:58,751
想象我们的理解

81
00:04:59,007 --> 00:04:59,775
且大小

82
00:05:01,311 --> 00:05:03,359
我要开始使用QQ了

83
00:05:04,383 --> 00:05:05,663
AV

84
00:05:05,919 --> 00:05:06,687
怎么用

85
00:05:07,199 --> 00:05:13,343
我是要用kubernetes入哪一个头文件是查一下可能就这个tuple我我没有

86
00:05:13,599 --> 00:05:15,647
记得那么多

87
00:05:16,671 --> 00:05:22,815
尖括号里面指定说我现在要放的是什么那一个字符串一个整数在

88
00:05:23,071 --> 00:05:26,655
在一个整数在一个负数负数里面的是不屈不知大不

89
00:05:27,167 --> 00:05:28,191
这就是我的意思

90
00:05:30,495 --> 00:05:31,519
这样的东西

91
00:05:32,031 --> 00:05:34,079
做成做成一个

92
00:05:34,335 --> 00:05:37,151
对象出来的after出来名字叫的

93
00:05:37,919 --> 00:05:39,455
这就是我最好的意思

94
00:05:42,271 --> 00:05:48,415
首先我个人都对于到底一个对象是多大很感兴趣这个可以让我们

95
00:05:48,671 --> 00:05:54,815
清楚你投的一些细节所以呢我现在sizeof这个题材做出来这个题

96
00:05:55,071 --> 00:05:57,631
打印出来看看大小是多少

97
00:05:57,887 --> 00:05:59,935
出来是三角儿

98
00:06:02,495 --> 00:06:08,639
我这边一个红色的字看来我大概不太满意这个叔叔为什么他是32或者是说我不能

99
00:06:08,895 --> 00:06:10,175
理解为什么他是32

100
00:06:11,455 --> 00:06:13,503
我为什么这样子讲的

101
00:06:14,015 --> 00:06:15,807
这个tuple它是

102
00:06:16,063 --> 00:06:19,647
字符串按整数和负数的整合

103
00:06:19,903 --> 00:06:22,719
那么它的大小就应该是这些东西的整合了

104
00:06:23,231 --> 00:06:29,375
那我们刚刚已经打印出来各个分布的大小所以呢按理说加起来应该是字符

105
00:06:29,631 --> 00:06:31,935
算是四个字解释

106
00:06:32,703 --> 00:06:33,983
两个整数值

107
00:06:34,239 --> 00:06:38,591
这两个是加上刚刚这个就三个试了3次就12了

108
00:06:39,103 --> 00:06:44,991
12加上这个负数负数刚刚打印出来是16所以12加16应该是28

109
00:06:45,503 --> 00:06:46,527
在我这边问

110
00:06:47,039 --> 00:06:49,343
Why not为什么不是28

111
00:06:49,855 --> 00:06:51,135
我是32呢

112
00:06:53,951 --> 00:07:00,095
好这只是我们的想象我们认为这是很基本的加起来应该是28把32是不是猪

113
00:07:00,351 --> 00:07:05,983
总结有什么新桥下我们去了解这个车到底怎么做的

114
00:07:06,751 --> 00:07:08,799
再来看看能不能解答这个问题

115
00:07:10,335 --> 00:07:12,895
我就去吃饭就不怎么用

116
00:07:13,919 --> 00:07:16,223
刚刚只是做出一个提出来

117
00:07:16,991 --> 00:07:18,015
现在呢

118
00:07:19,039 --> 00:07:24,159
我再做另外一个出口出来是一个整数一个浮点数和一个字符串

119
00:07:24,671 --> 00:07:25,695
这个替换

120
00:07:26,463 --> 00:07:29,535
我现在要是放的是可以这样直接给

121
00:07:29,791 --> 00:07:31,071
给初值

122
00:07:31,839 --> 00:07:37,983
当然你不能随便给因为你前面在浅括号里面已经定义的是总数浮点数跟字符串所以你一定要给总

123
00:07:38,239 --> 00:07:39,263
数字之一

124
00:07:39,519 --> 00:07:43,871
浮点数6.3字符串那你够这样子给下去

125
00:07:44,895 --> 00:07:48,223
如果你乱给了他那边有出错了

126
00:07:49,759 --> 00:07:53,855
好这是这个吃饭说这样子给初值

127
00:07:55,903 --> 00:07:56,671
再来呢

128
00:07:57,183 --> 00:07:59,743
我在打印这个大小再走

129
00:08:01,279 --> 00:08:07,423
这个大小是多少是整数加浮点数正数是四个字节浮点数四个字节字符串也是

130
00:08:07,679 --> 00:08:09,215
四个字节34 12

131
00:08:09,727 --> 00:08:12,287
大小应该是12周一次就对了

132
00:08:12,543 --> 00:08:14,591
符合我们的想象这一次并没有

133
00:08:14,847 --> 00:08:15,615
膨胀

134
00:08:16,639 --> 00:08:17,151
12

135
00:08:19,455 --> 00:08:23,039
好像是在吃饭如果我要拿出

136
00:08:23,295 --> 00:08:25,855
这个T1我现在已经给迟了

137
00:08:26,879 --> 00:08:32,511
拿出这里头的三个成分三个胖三个member成员

138
00:08:32,767 --> 00:08:33,535
那我

139
00:08:34,303 --> 00:08:35,327
工具是这样

140
00:08:35,583 --> 00:08:38,143
这很特别要用这样子的写法

141
00:08:38,399 --> 00:08:42,495
Get经过号01再出现牵挂号所以他都是在对

142
00:08:42,751 --> 00:08:44,031
类型作

143
00:08:44,543 --> 00:08:45,311
操作

144
00:08:47,103 --> 00:08:49,151
一定是大人用的模板

145
00:08:49,919 --> 00:08:50,687
好

146
00:08:50,943 --> 00:08:54,015
反正我们使用的方法是怎么用啊

147
00:08:54,271 --> 00:08:59,903
Cat links我要拿出几万的地灵个元素出来

148
00:09:00,159 --> 00:09:03,231
这个就是第1个元素就是第2个元素

149
00:09:03,487 --> 00:09:05,279
所以这边取出来呢

150
00:09:05,535 --> 00:09:08,095
我这里并没有把打印的结果

151
00:09:08,607 --> 00:09:14,751
印出来给你看这边取出来应该就是这个词是41这个取出来就是63

152
00:09:15,007 --> 00:09:17,823
6.3这个就是你靠这个字符串

153
00:09:18,847 --> 00:09:19,359
OK

154
00:09:19,871 --> 00:09:20,895
这是用法

155
00:09:21,919 --> 00:09:24,991
那如果你说我要我明明给的三个

156
00:09:25,247 --> 00:09:30,111
Part3个成分你却要去取第3个这里是从0开始算起

157
00:09:30,367 --> 00:09:31,647
这只有012

158
00:09:31,903 --> 00:09:38,047
我要去取第3个就没有第3个那怎么办呢那一定是出错了吧就你自己拿石头砸你自己

159
00:09:38,303 --> 00:09:40,863
这个人没有人能救得了你

160
00:09:43,167 --> 00:09:44,703
再往下我在吃饭

161
00:09:45,215 --> 00:09:46,495
也可以

162
00:09:48,287 --> 00:09:50,335
我们不要声明一个tuple

163
00:09:50,591 --> 00:09:55,199
我们直接用mex24这个工具就一个是一个辅助函数

164
00:09:55,455 --> 00:09:56,991
直接把纸放进去

165
00:09:57,759 --> 00:10:00,319
22 44个sexy这个啥

166
00:10:00,575 --> 00:10:01,855
这样的话

167
00:10:02,367 --> 00:10:05,695
编译器就会帮我们做出来家

168
00:10:05,951 --> 00:10:12,095
藉由这一个辅助工具它就会做出一个邱博因为现在叫Max求佛

169
00:10:12,351 --> 00:10:16,191
只是这样至于那个浅括号里面的类型是什么呢

170
00:10:17,727 --> 00:10:23,871
应该是三个类型的三个type R编译器就会坐视这个问题

171
00:10:24,127 --> 00:10:30,271
实参的推导他知道22是整数他知道44日走出他知道lz这个是字符串

172
00:10:30,783 --> 00:10:32,063
他就会推出来

173
00:10:33,599 --> 00:10:35,391
那我们还可以使用

174
00:10:35,647 --> 00:10:39,487
这个是要在2.0新的于一种语法要Auto

175
00:10:39,999 --> 00:10:40,511
说

176
00:10:40,767 --> 00:10:45,119
所以这个题主到底是什么类型的当然我们现在也知道我刚才已经讲过了

177
00:10:45,631 --> 00:10:51,775
Youtuber数整数跟字符串但是我不想写那么多我直接用户头像也可

178
00:10:53,823 --> 00:10:55,103
继续往下

179
00:10:55,615 --> 00:10:58,175
所以前面是饭的一些祝福的字

180
00:10:58,431 --> 00:11:01,503
制造方式以及取得每个成分

181
00:11:01,759 --> 00:11:02,527
房事

182
00:11:04,575 --> 00:11:06,111
这边还有一个

183
00:11:06,367 --> 00:11:08,415
一个一个示范

184
00:11:08,671 --> 00:11:13,535
我可以取出它的元素元素之后在其中的一个元素

185
00:11:14,559 --> 00:11:19,423
对于70000取出第1个元素和对其中取出的一个元素比大小

186
00:11:20,703 --> 00:11:24,543
这个到是根据Uber本身无关因为你取出来的是什么是整数

187
00:11:25,055 --> 00:11:31,199
你刚刚的例子看这个tuple的第1个元素这个州的总令算起

188
00:11:31,455 --> 00:11:37,087
要特别注意刚刚演了一个饭这个小错误所以从0到1

189
00:11:37,343 --> 00:11:39,391
一个取出来应该是一个

190
00:11:39,647 --> 00:11:40,159
楼价

191
00:11:42,975 --> 00:11:44,511
回到这里来就是

192
00:11:45,279 --> 00:11:51,423
我这两个龟破了我都要去第1个元素的一个元素它一定是个基本的成分的拿来比

193
00:11:51,679 --> 00:11:53,215
好了就可以了

194
00:11:55,263 --> 00:11:56,799
比较特别的是这一个

195
00:11:58,591 --> 00:12:02,431
希望根据处他都是从否我直接拿它来

196
00:12:04,479 --> 00:12:04,991
可以

197
00:12:05,247 --> 00:12:08,575
看谁比较小也可以赋值

198
00:12:09,343 --> 00:12:10,111
负值

199
00:12:12,927 --> 00:12:15,999
甚至于可以把这个东西直接给我给吃药

200
00:12:17,535 --> 00:12:18,815
我们来解释一下

201
00:12:19,839 --> 00:12:22,911
也就是说邱本身本身的有

202
00:12:23,935 --> 00:12:25,727
重新定义这个小括号

203
00:12:27,775 --> 00:12:28,287
子

204
00:12:28,543 --> 00:12:31,359
如果这个两个就不是完全一样的

205
00:12:31,871 --> 00:12:32,895
兴时

206
00:12:33,151 --> 00:12:39,295
那他们会怎么比你就比如说都是三个成分看三个成分的那就一个成分一个成份拿出来

207
00:12:41,855 --> 00:12:45,439
那这个比数值就有数值的比法

208
00:12:45,695 --> 00:12:51,839
方大于20大于小于七这个字一定的如果是字符串的字符串有他字符串

209
00:12:52,095 --> 00:12:53,887
特定的比较方式

210
00:12:54,143 --> 00:13:00,287
前面不知道在哪一哪一个哪一讲让我提过字符串的比较方式就是一种字典形式的

211
00:13:00,543 --> 00:13:01,567
是一定的

212
00:13:01,823 --> 00:13:02,591
WiFi

213
00:13:03,871 --> 00:13:05,919
C一定比A大

214
00:13:06,175 --> 00:13:07,967
就那种比较好吃

215
00:13:08,735 --> 00:13:11,039
最后一个成一个什么呢

216
00:13:11,807 --> 00:13:16,415
如果他本身不是相同的类型比如说

217
00:13:18,463 --> 00:13:21,791
习惯是三个成分是四个成分

218
00:13:22,559 --> 00:13:24,863
你硬要把它拿来比的话

219
00:13:25,119 --> 00:13:27,167
这样要怎么比这个这个

220
00:13:27,935 --> 00:13:34,079
我在我无法记下了他的规则这个可以去查这四个成人的三个成分仍然是

221
00:13:34,335 --> 00:13:36,383
拿钱三个来比呢

222
00:13:36,639 --> 00:13:39,967
还是怎么样这个去就得

223
00:13:40,223 --> 00:13:42,527
我会读书上网去看一下了

224
00:13:43,039 --> 00:13:44,575
它可以比大小

225
00:13:45,599 --> 00:13:47,391
他也可以赋值

226
00:13:47,647 --> 00:13:48,671
打开复制

227
00:13:50,463 --> 00:13:51,487
至于这一个

228
00:13:52,511 --> 00:13:54,815
Stupid直接丢给crt

229
00:13:55,839 --> 00:13:57,119
那就得看一下

230
00:13:57,631 --> 00:14:03,775
这个是要着你你有没有去为Cuba设计一个操作符重载是这个操作

231
00:14:04,031 --> 00:14:04,799
我的重返

232
00:14:05,055 --> 00:14:06,591
那就得看了我这个例子有

233
00:14:07,359 --> 00:14:09,407
不过我没有我没有

234
00:14:09,663 --> 00:14:11,711
呈现出来

235
00:14:12,479 --> 00:14:14,015
你会拿到这个

236
00:14:14,527 --> 00:14:15,551
吃饭的例子

237
00:14:16,063 --> 00:14:18,367
说到时候你就可以看看我是怎么去

238
00:14:18,879 --> 00:14:20,159
定义这一个

239
00:14:20,927 --> 00:14:21,695
好的

240
00:14:22,207 --> 00:14:23,999
其实定义这个符号就是

241
00:14:24,511 --> 00:14:25,023
这边

242
00:14:25,279 --> 00:14:26,047
像这样子

243
00:14:26,559 --> 00:14:29,375
逐一的拿出每个成分来丢出去

244
00:14:30,399 --> 00:14:33,215
然后把这样整个动作现在一个函数就是这个

245
00:14:33,471 --> 00:14:34,495
并不困难

246
00:14:38,847 --> 00:14:42,175
我再继续介绍下去就怕还有些什么样的用法呢

247
00:14:44,735 --> 00:14:46,783
这边有一个动作较大

248
00:14:48,063 --> 00:14:50,367
Hi就是绑定的意思绑住

249
00:14:51,391 --> 00:14:52,671
防住什么东西

250
00:14:52,927 --> 00:14:55,999
能看这一行为应该用蓝色的这个

251
00:14:56,511 --> 00:14:59,583
我要介绍的旺季用蓝色的

252
00:15:00,095 --> 00:15:01,631
这个意思是说

253
00:15:03,423 --> 00:15:04,447
73

254
00:15:04,959 --> 00:15:08,799
G3又是一个tuple在前面有出现在这里有出现

255
00:15:09,567 --> 00:15:10,591
这个tuple

256
00:15:10,847 --> 00:15:11,359
要

257
00:15:11,615 --> 00:15:12,383
绑定

258
00:15:13,407 --> 00:15:18,527
要绑住挡住什么了用用这个函数帮助帮助这三个东西

259
00:15:19,295 --> 00:15:21,343
这三个东西在上面至3号

260
00:15:22,879 --> 00:15:24,415
这三个类型

261
00:15:24,927 --> 00:15:30,815
整数浮点数根是谁就是这个T3的这个整数浮点数根是谁

262
00:15:31,071 --> 00:15:36,191
随意思就是说要把P3的三个成分拿出来一次性地拿出来

263
00:15:36,703 --> 00:15:37,215
把他

264
00:15:37,471 --> 00:15:41,311
把它附着到附着绑定季节

265
00:15:41,567 --> 00:15:42,591
连结到

266
00:15:42,847 --> 00:15:43,615
这些

267
00:15:44,639 --> 00:15:45,407
变量取

268
00:15:46,687 --> 00:15:48,479
最好

269
00:15:48,991 --> 00:15:52,319
这等于把G3的77 1.1跟这个

270
00:15:52,575 --> 00:15:54,111
这个这个这个字符串

271
00:15:54,367 --> 00:15:56,927
拿出来放到这三个变量的一次

272
00:15:58,975 --> 00:16:05,119
哎呀这样啊这样就够了我们就知道我可以任意的组成一个任意大小任意

273
00:16:05,375 --> 00:16:10,495
一类型的一个就跑然后刚刚的这些示范的可以让你知道吗

274
00:16:10,751 --> 00:16:11,263
可以去

275
00:16:11,519 --> 00:16:17,151
人力的取出里面的每一个成分我可以把QQ彼此但是要赋值还是要

276
00:16:17,407 --> 00:16:18,687
比较大小

277
00:16:19,199 --> 00:16:19,967
搜索得到

278
00:16:21,247 --> 00:16:27,135
这边最后还是饭的两个函数这个不能叫函数

279
00:16:27,391 --> 00:16:28,927
这是一个

280
00:16:29,439 --> 00:16:34,815
一个一个一个这种东西我不知道怎么去形容它一个tuple size

281
00:16:36,095 --> 00:16:36,863
M

282
00:16:38,655 --> 00:16:44,287
这个尖括号里头了放哪个类型这个类型既然我选的是

283
00:16:44,799 --> 00:16:50,175
我使用的是kubernetes所以我这里都当然必须是个挺好的结果是什么

284
00:16:50,687 --> 00:16:54,015
吃饭是这样在刚刚上这个的上衣好

285
00:16:54,527 --> 00:16:55,039
What

286
00:16:55,295 --> 00:16:57,343
定义的这样的一个突破

287
00:16:59,391 --> 00:17:00,927
换了一个名称叫祝福

288
00:17:01,183 --> 00:17:01,695
Type

289
00:17:01,951 --> 00:17:06,047
然后我把这个就不太可能放到这个就不在里面去

290
00:17:06,559 --> 00:17:09,119
我去问这个是一个问的方式

291
00:17:10,143 --> 00:17:10,655
想必

292
00:17:10,911 --> 00:17:13,727
在kubernetes上一定有个telephone

293
00:17:14,751 --> 00:17:16,799
这个技巧我们已经看过很多次了

294
00:17:17,055 --> 00:17:23,199
在在整个这个前面的几讲里面整个标准库自己里头的10座里呢

295
00:17:23,455 --> 00:17:25,759
运用了很多这一种技巧

296
00:17:26,271 --> 00:17:27,807
好在这个地方

297
00:17:28,063 --> 00:17:29,855
就可以知道什么

298
00:17:30,111 --> 00:17:33,183
这个叫就不是最知道的事

299
00:17:33,439 --> 00:17:34,463
苏州市三

300
00:17:36,255 --> 00:17:42,143
就是说这个突破了她有三个part三个成分三个member

301
00:17:44,703 --> 00:17:47,519
所以如果你在程序的模拟过程是

302
00:17:47,775 --> 00:17:48,287
中

303
00:18:26,431 --> 00:18:28,735
这个技巧我们前面看到好几次

304
00:18:29,247 --> 00:18:30,527
这个结果

305
00:18:32,575 --> 00:18:36,415
这一航蓝色飞行就是结果这个结果的

306
00:18:36,671 --> 00:18:40,767
换了个名字叫体接下来我就可以拿出来用

307
00:18:41,535 --> 00:18:46,399
这是个太饱饱了就可以拿来声明一个对象声明一个变量等等等

308
00:18:50,495 --> 00:18:54,847
差不多求破的最重要的用途用法那只能够

309
00:18:55,359 --> 00:18:56,895
做了一个是吃饭

310
00:19:00,479 --> 00:19:01,503
好用的东西

311
00:19:05,087 --> 00:19:08,671
这个东西是怎么做的我们刚刚说啥

312
00:19:08,927 --> 00:19:10,207
锁死了

313
00:19:10,975 --> 00:19:12,511
奥迪怎么做呢

314
00:19:15,839 --> 00:19:17,119
看看这张图

315
00:19:19,167 --> 00:19:21,215
这里出现了一些点点点

316
00:19:21,471 --> 00:19:22,239
点点点

317
00:19:22,495 --> 00:19:24,287
这里又有间括号模板

318
00:19:25,823 --> 00:19:27,871
在之前

319
00:19:29,151 --> 00:19:31,711
我提过了这一个语法交到

320
00:19:31,967 --> 00:19:34,527
Various eccentric

321
00:19:34,783 --> 00:19:38,367
参数量数量可变的一种模仿

322
00:19:38,623 --> 00:19:44,767
我个人认为这个事是一家家2.0的语法带来的一个非常重要的

323
00:19:45,023 --> 00:19:46,303
语法特性

324
00:19:46,815 --> 00:19:48,863
那这边躺着呢

325
00:19:49,375 --> 00:19:54,495
但是它应用到现在这个龟和这个标准库这个东西里头来

326
00:19:54,751 --> 00:19:55,263
他是

327
00:19:55,519 --> 00:19:57,823
怎么利用这个东西来做主题

328
00:19:59,615 --> 00:20:02,431
也等于是借由这个机会呢我们

329
00:20:03,967 --> 00:20:10,111
先前已经认识过一次看过一次very active temperate现在再一次在改

330
00:20:14,975 --> 00:20:17,791
前面谈variadic template

331
00:20:18,303 --> 00:20:19,327
意思是说

332
00:20:20,351 --> 00:20:21,631
这个语法

333
00:20:22,399 --> 00:20:24,703
他帮你自动的吧

334
00:20:25,727 --> 00:20:27,263
风格参数

335
00:20:28,031 --> 00:20:29,055
分解为

336
00:20:30,591 --> 00:20:31,103
汉

337
00:20:31,359 --> 00:20:32,383
风景

338
00:20:33,663 --> 00:20:35,711
然后再把这个N减一

339
00:20:35,967 --> 00:20:37,503
在分解为1

340
00:20:37,759 --> 00:20:40,319
汉情校医

341
00:20:40,575 --> 00:20:42,367
值得的跪下去

342
00:20:44,159 --> 00:20:47,487
所以所以那个就变成一家四

343
00:20:47,743 --> 00:20:53,887
那个是那又继续下去变成一家33就被人一加二儿就变成一家依然后最后变成一家

344
00:20:54,143 --> 00:20:54,911
嘉玲

345
00:20:55,679 --> 00:21:01,823
一加零的时候你就要写出一个中子的一个一个一个终止条件出来

346
00:21:02,079 --> 00:21:04,895
所以这种berryessa template

347
00:21:05,151 --> 00:21:07,967
他一定是怎么样呢有一个主题

348
00:21:08,479 --> 00:21:10,015
还有一个终止条件

349
00:21:10,783 --> 00:21:12,063
你一定会看到这样

350
00:21:14,879 --> 00:21:15,903
我们先前

351
00:21:16,416 --> 00:21:20,256
看到这个parasitic temperate是在上一个主题

352
00:21:20,512 --> 00:21:22,304
再讲万用的

353
00:21:22,560 --> 00:21:23,072
Hash

354
00:21:23,328 --> 00:21:24,352
方选手

355
00:21:24,608 --> 00:21:26,144
也是用到这个技巧

356
00:21:26,400 --> 00:21:29,472
好

357
00:21:29,984 --> 00:21:32,800
现在我们来看看这一会就是主体

358
00:21:33,568 --> 00:21:36,384
上面这一个就是一个结束条件

359
00:21:37,664 --> 00:21:42,272
这个是从个2c 4.8节路并简化得到的

360
00:21:42,784 --> 00:21:46,368
这本来比较大但是没有需要讲那么多

361
00:21:46,880 --> 00:21:50,720
并简化了有些东西也没有必要深入因为

362
00:21:50,976 --> 00:21:57,120
对我我要讲的重点没帮助所以你如果真的去看的话那会比这样的多但是这一张

363
00:21:57,376 --> 00:21:59,680
张足够让你理解它的原理

364
00:22:01,216 --> 00:22:01,984
我前面

365
00:22:02,496 --> 00:22:08,640
公司谈到更6412间久了4.9这里怎么冒出一个4.8那没有什么特殊意义因为他

366
00:22:08,896 --> 00:22:09,408
当时在

367
00:22:09,664 --> 00:22:14,528
我有一阵子看的是4.81就把它看懂了就抓出来

368
00:22:14,784 --> 00:22:17,856
但我也不想再去看4.9这个不会再改变了

369
00:22:20,160 --> 00:22:25,280
好吧我还是要告诉你这个是4点半我在讲源代码一天要告诉你是什么版本

370
00:22:26,304 --> 00:22:27,328
好

371
00:22:27,584 --> 00:22:29,888
这块我先看主体的部分

372
00:22:31,168 --> 00:22:32,192
这个就是突破

373
00:22:34,496 --> 00:22:35,776
它的设计上了

374
00:22:36,288 --> 00:22:36,800
他

375
00:22:37,056 --> 00:22:43,200
你开始设计的时候他就放了一个根一个cell就是一个投给一个纬度

376
00:22:43,456 --> 00:22:44,736
这个喂不是点点点

377
00:22:44,992 --> 00:22:47,296
我讲过了这是语法的一部分

378
00:22:47,552 --> 00:22:50,624
不是我结了然后写点甜点是

379
00:22:51,904 --> 00:22:53,696
测试代码就是这么写

380
00:22:53,952 --> 00:23:00,096
猴跟维护这个头和尾部它的类型是什么上面这个模板

381
00:23:00,352 --> 00:23:02,912
侯是什么类型呢

382
00:23:03,680 --> 00:23:05,216
把任意类型

383
00:23:06,496 --> 00:23:09,312
我要看你指定的时候是什么它就是什么

384
00:23:09,824 --> 00:23:12,640
这又是什么类型的朋友有很多个

385
00:23:12,896 --> 00:23:14,176
是什么类型呢

386
00:23:44,384 --> 00:23:50,528
你自己也要写一个这种代码的话那我在哪一个范例出来你就照着写

387
00:23:50,784 --> 00:23:51,296
就习惯

388
00:23:52,576 --> 00:23:54,112
好所以

389
00:23:55,904 --> 00:23:57,184
我们看这个例子

390
00:23:58,720 --> 00:24:03,584
如果我使用是否指定我的就不是这样三个

391
00:24:04,864 --> 00:24:11,008
天气看到这一行的时候他就要去找谁能够呼应你写的这样子呢

392
00:24:11,264 --> 00:24:12,800
找到这个可以呼应

393
00:24:14,592 --> 00:24:15,104
因为

394
00:24:15,616 --> 00:24:18,944
他接受热力的头跟任意多的尾巴

395
00:24:19,200 --> 00:24:22,016
这所以它这个一定可以吃下这个东西

396
00:24:23,040 --> 00:24:25,600
所以这个int就是这里的

397
00:24:27,136 --> 00:24:31,744
Frozen countryman这两个合起来就是最美的确

398
00:24:35,328 --> 00:24:41,472
进去之后我现在要点出这个tuple最神秘的关键点

399
00:24:44,800 --> 00:24:45,824
哈里头有个技巧

400
00:24:49,152 --> 00:24:50,176
继承谁呢

401
00:24:51,456 --> 00:24:52,992
继承他自己

402
00:24:55,296 --> 00:24:58,368
不过这个他自己是他一部分的自己

403
00:24:59,136 --> 00:25:02,976
这个浅括号里面有个这个tuple是尾巴这一部分形成的

404
00:25:04,256 --> 00:25:10,400
所以你说如果你指定格成分在这个球库里头

405
00:25:11,680 --> 00:25:14,752
他会去尽成一个四个成分的

406
00:25:15,008 --> 00:25:16,288
那四个成分呢

407
00:25:16,544 --> 00:25:22,432
他会一个递归吗会计成三个成分三个继承两个就会形成这个图

408
00:25:24,992 --> 00:25:26,016
太漂亮了

409
00:25:28,320 --> 00:25:29,088
原来

410
00:25:29,856 --> 00:25:31,648
原来呀这个是假的

411
00:25:32,416 --> 00:25:37,792
Very active templates可以自动的帮我们把一个

412
00:25:38,048 --> 00:25:41,120
类变成这种继承关系

413
00:25:43,168 --> 00:25:44,960
怎么写的

414
00:25:49,056 --> 00:25:49,824
鱿鱼

415
00:25:51,104 --> 00:25:52,896
Very active temperate

416
00:25:53,408 --> 00:25:58,016
它会自动的递归所以就会自动自动的一再一再的继承

417
00:26:00,320 --> 00:26:02,112
我们上一个大主题谈到

418
00:26:02,368 --> 00:26:04,160
万用的hash方去的时候

419
00:26:04,416 --> 00:26:09,024
他也是一再一再的递归有时那个递归不是继承而是调用

420
00:26:09,280 --> 00:26:10,304
调用的函数

421
00:26:10,560 --> 00:26:14,144
你可以回到前面的再把在咱们那一部分的

422
00:26:14,656 --> 00:26:17,728
再停留在外面仔细的看一看它跟着的差别

423
00:26:17,984 --> 00:26:23,360
这里是用骑乘一再一再的继承那边那一再一再的调用

424
00:26:25,152 --> 00:26:26,432
好

425
00:26:28,224 --> 00:26:29,504
我们继续往下看

426
00:26:29,760 --> 00:26:31,296
那这个的是

427
00:26:32,576 --> 00:26:35,136
继承了他尾部这部分

428
00:26:35,904 --> 00:26:38,720
那头的那一部分那就这里的

429
00:26:40,000 --> 00:26:41,536
这边是有一个Beta

430
00:26:43,840 --> 00:26:45,632
头的部分这个类型了

431
00:26:45,888 --> 00:26:48,448
就声明出一个变量出来

432
00:26:52,288 --> 00:26:53,312
所以

433
00:26:54,080 --> 00:26:55,360
关键就在这里了

434
00:26:57,408 --> 00:26:59,200
所以看这张图

435
00:27:01,248 --> 00:27:02,528
如果

436
00:27:02,784 --> 00:27:03,552
你

437
00:27:03,808 --> 00:27:06,112
使用的时候你声明这样子

438
00:27:08,672 --> 00:27:11,232
在这个代码里面刚刚分析过了

439
00:27:11,488 --> 00:27:15,584
这个int就是这个head就是这个

440
00:27:16,096 --> 00:27:17,376
就建立了一个

441
00:27:17,888 --> 00:27:18,656
电量

442
00:27:19,680 --> 00:27:23,008
这个变量等下我再带你去看他在哪里吃屎

443
00:27:24,032 --> 00:27:26,848
因此华盛顿就是这个class

444
00:27:28,128 --> 00:27:29,152
你写最好吗

445
00:27:30,176 --> 00:27:31,456
那就是这个Class了

446
00:27:31,712 --> 00:27:33,248
他里头就有变量

447
00:27:35,808 --> 00:27:36,832
这个变量吗

448
00:27:37,088 --> 00:27:43,232
你这个设置来讲这里是41它的只是11我还没有带你去看这41在哪里

449
00:27:43,488 --> 00:27:44,768
剩下就看

450
00:27:46,560 --> 00:27:51,168
那这个Class由于递归的关系他继承了

451
00:27:51,424 --> 00:27:54,240
他继承了的尾部这块所以

452
00:27:54,496 --> 00:27:55,008
继承

453
00:27:55,520 --> 00:27:58,848
它的尾部是什么就是floating on Street

454
00:27:59,616 --> 00:28:02,176
所以早上来protein跟水

455
00:28:03,456 --> 00:28:08,832
而这两个东西又落到这个主题他又是一个tuple又落亲

456
00:28:09,600 --> 00:28:12,416
于是又分出他要继承了

457
00:28:12,672 --> 00:28:14,208
跑步数

458
00:28:15,232 --> 00:28:19,072
计生委不好刚是在讲继承伟不伟不是谁

459
00:28:19,328 --> 00:28:20,096
跑上来

460
00:28:20,352 --> 00:28:22,656
这更上一层的基层

461
00:28:23,424 --> 00:28:24,704
这一个进程呢

462
00:28:25,216 --> 00:28:27,776
刚刚说他这个头部

463
00:28:29,056 --> 00:28:30,848
就拿来声明一个变量

464
00:28:31,360 --> 00:28:34,688
所以这个float in拿来声明一个变量

465
00:28:37,760 --> 00:28:43,904
这个图是出自于这个用途这个用法所以这个6.3就是这个变量

466
00:28:46,976 --> 00:28:53,120
这样子的龟一再一再的一次少一个一次少一个这个例子是三个所以

467
00:28:53,376 --> 00:28:55,168
302

468
00:28:55,424 --> 00:29:01,056
2.1这个意义的就一个字符串了

469
00:29:01,568 --> 00:29:03,360
再上去就变成0了

470
00:29:04,896 --> 00:29:06,944
令就不符合这个主题了

471
00:29:07,712 --> 00:29:09,760
这个主体要求至少是

472
00:29:10,016 --> 00:29:10,784
1

473
00:29:11,808 --> 00:29:14,624
加上尾巴最长要有一个

474
00:29:15,136 --> 00:29:16,672
最令怎么办呢

475
00:29:17,952 --> 00:29:18,976
截个屏的话

476
00:29:19,232 --> 00:29:20,256
一个

477
00:29:21,280 --> 00:29:25,888
一个片子花一个一个一个一个终止条件这就是0啊

478
00:29:26,656 --> 00:29:27,424
这个tuple

479
00:29:28,448 --> 00:29:30,752
爱就没有任何的我把参数了

480
00:29:32,032 --> 00:29:34,848
他做什么事情

481
00:29:35,872 --> 00:29:42,016
在我们还是把这一个也画上来他是空了克拉斯他仍然是个傻子还是要花上来

482
00:29:43,296 --> 00:29:46,880
那这一个空的这个片特化版本

483
00:29:47,136 --> 00:29:48,928
策划还是片刻画呢

484
00:29:49,440 --> 00:29:51,488
不要把它拉反正

485
00:29:52,512 --> 00:29:54,048
反正有这么一个

486
00:29:54,816 --> 00:30:00,960
细想才会确定我讲得到的是一个拳头还是扁的话他不管这里来

487
00:30:01,216 --> 00:30:02,752
看大小势力

488
00:30:06,592 --> 00:30:07,616
所以

489
00:30:08,384 --> 00:30:09,664
这一个的大小

490
00:30:10,432 --> 00:30:11,456
应该怎么计算

491
00:30:12,992 --> 00:30:16,832
我们在面向对象里面有继承关系的时候一定知道了

492
00:30:17,344 --> 00:30:22,976
富勒子遗址内的大小一定是自己的data再加上腹内的大小

493
00:30:26,048 --> 00:30:26,560
所以

494
00:30:26,816 --> 00:30:28,096
这个大小

495
00:30:28,352 --> 00:30:29,888
这是一个整数

496
00:30:30,400 --> 00:30:31,424
加上上面

497
00:30:32,192 --> 00:30:36,288
上面这个大小的是一个楼梯再加上上面

498
00:30:36,800 --> 00:30:39,872
它的大小是谁在家很上面

499
00:30:40,384 --> 00:30:41,664
上面视频

500
00:30:43,200 --> 00:30:46,016
所以整个QQ的大小就是

501
00:30:46,272 --> 00:30:49,600
总数加5.4加字符串

502
00:30:53,184 --> 00:30:55,744
回到刚刚的例子

503
00:30:58,048 --> 00:30:59,072
这边有一个

504
00:31:00,608 --> 00:31:01,376
火车

505
00:31:01,888 --> 00:31:04,960
另一个出口出来是一个字符串加

506
00:31:06,240 --> 00:31:07,520
等一下

507
00:31:07,776 --> 00:31:08,544
这这个

508
00:31:09,056 --> 00:31:13,408
我这边有个祝福他是总数家属楼的家训

509
00:31:14,176 --> 00:31:19,552
按照刚刚的理解整块的大小应该是把它大小成分的大小降价

510
00:31:20,064 --> 00:31:21,344
所以就是

511
00:31:21,600 --> 00:31:22,368
加四

512
00:31:22,624 --> 00:31:23,648
大家还是

513
00:31:23,904 --> 00:31:24,672
32

514
00:31:25,696 --> 00:31:26,976
你的叔叔是谁

515
00:31:27,488 --> 00:31:28,256
非常好

516
00:31:28,768 --> 00:31:29,536
非常好

517
00:31:31,584 --> 00:31:32,864
但是这个地址呢

518
00:31:34,400 --> 00:31:37,216
他是成分是这样这样这样这样是个

519
00:31:37,728 --> 00:31:40,032
应该把这四个大小相加了

520
00:31:40,288 --> 00:31:43,104
这个是40 14是14

521
00:31:43,616 --> 00:31:44,128
这个

522
00:31:44,384 --> 00:31:45,152
步数

523
00:31:46,688 --> 00:31:48,224
是不是不是他不

524
00:31:48,992 --> 00:31:50,784
你是两个double是16

525
00:31:52,576 --> 00:31:55,392
所以14加10加10加16

526
00:31:56,672 --> 00:31:58,464
按理说应该是28

527
00:32:00,256 --> 00:32:01,792
20输出是32

528
00:32:02,304 --> 00:32:06,656
为什么不是28是32那这个我就无法理解了

529
00:32:09,472 --> 00:32:11,008
无法理解这个

530
00:32:11,520 --> 00:32:12,288
有毒

531
00:32:12,800 --> 00:32:15,104
有待查查验到底是怎么回事

532
00:32:16,896 --> 00:32:19,968
从理论上这样子来看的应该是28

533
00:32:22,272 --> 00:32:23,552
他会不会是这一个

534
00:32:23,808 --> 00:32:25,344
在上面这个空的

535
00:32:25,856 --> 00:32:27,392
暂没有说

536
00:32:28,160 --> 00:32:33,280
哄的Class不是应该赞罗理论上是令那个逻辑上是11吗

537
00:32:34,560 --> 00:32:39,936
这样是不是说的通那刚刚这里是28呀

538
00:32:40,448 --> 00:32:46,336
28加一不是29月29号应该调到四的倍数不就是32了吗

539
00:32:46,848 --> 00:32:48,128
看看这里啦

540
00:32:48,384 --> 00:32:51,456
这个理论上是28

541
00:32:52,224 --> 00:32:58,368
加上最上面那个空的一间29 29日调试的编辑这里是32位是这个原因

542
00:32:58,624 --> 00:32:59,136
原因呢

543
00:33:00,160 --> 00:33:01,440
并开始

544
00:33:02,976 --> 00:33:03,744
不应该

545
00:33:04,512 --> 00:33:10,144
因为这一种东西它当他独自存在的时候它的大小是

546
00:33:10,400 --> 00:33:13,472
由于10座上的限制它是一

547
00:33:13,984 --> 00:33:19,360
可是他是他单独存在的时候但是如果他是被继承的

548
00:33:19,616 --> 00:33:20,640
那么他就是0

549
00:33:21,152 --> 00:33:22,432
这是回到理论值

550
00:33:24,992 --> 00:33:28,320
所以刚刚这个例子这个32我真的无法解释

551
00:33:29,856 --> 00:33:31,392
未解之谜

552
00:33:34,720 --> 00:33:36,768
我们继续把这个细节可以看

553
00:33:37,792 --> 00:33:40,864
这刚刚是重点是这边有继承

554
00:33:41,376 --> 00:33:45,728
然后这边有头部有一个data member成成员数据

555
00:33:47,776 --> 00:33:48,544
另外

556
00:33:49,056 --> 00:33:52,384
这边有一些东西有一个函数叫做

557
00:33:52,896 --> 00:33:54,432
一个函数叫tel

558
00:33:56,480 --> 00:34:01,856
这个是Cuba有展现出来的两个开放出来的两个函数

559
00:34:02,368 --> 00:34:08,256
你可以去查查规格看看他穿回来给你什么我现在要去解释

560
00:34:08,512 --> 00:34:10,816
他怎么能传回那个东西

561
00:34:12,096 --> 00:34:13,376
费的床为什么

562
00:34:14,144 --> 00:34:18,752
源代码只能看得出来他就是传回的一个成分值

563
00:34:21,824 --> 00:34:24,128
在这个例子里头

564
00:34:25,664 --> 00:34:27,456
这个成分就是怎么出了

565
00:34:28,992 --> 00:34:30,784
也就是我们这里给的41

566
00:34:33,344 --> 00:34:36,928
从这边缘代码城回来的是这个东西是谁

567
00:34:39,744 --> 00:34:41,024
这样就实现出来了

568
00:34:41,536 --> 00:34:46,912
你去查还在这个规格她告诉你她会成为第1个成分值没错

569
00:34:47,680 --> 00:34:49,216
我要在哪看出来是这样

570
00:34:52,800 --> 00:34:53,824
我这边有个例子

571
00:34:54,592 --> 00:34:58,688
我这边建立了一个龟壳之后我调用head

572
00:34:59,456 --> 00:35:00,480
你把他输出

573
00:35:00,736 --> 00:35:03,296
打印到屏幕上确实获得41

574
00:35:09,696 --> 00:35:10,976
为何告诉你

575
00:35:11,488 --> 00:35:15,072
你调用它你会得到尾部的那一边

576
00:35:15,328 --> 00:35:16,352
在那块

577
00:35:16,608 --> 00:35:17,632
叫做

578
00:35:18,144 --> 00:35:24,288
我们说此类之类比较大值那对象比较大那里头有一个父类的part

579
00:35:24,544 --> 00:35:28,384
一个成分这一个那儿就是会得到

580
00:35:28,896 --> 00:35:31,456
富勒那个成分歧点

581
00:35:34,272 --> 00:35:37,856
怎么能做到的源代码是这样

582
00:35:40,160 --> 00:35:42,208
他传回来的其实是自己

583
00:35:43,488 --> 00:35:48,352
你这个例子求和三个成分所以自己在哪里自己

584
00:35:49,120 --> 00:35:50,400
这是一个disappointed

585
00:35:52,448 --> 00:35:53,472
自己就是罪

586
00:35:56,800 --> 00:35:58,336
但是自己

587
00:35:59,616 --> 00:36:05,760
经过有转型动作传回来之后这个payload return type是这个

588
00:36:08,320 --> 00:36:09,344
Utility

589
00:36:10,368 --> 00:36:11,904
这是什么东西呀

590
00:36:12,416 --> 00:36:14,976
这个是上面的一个

591
00:36:19,328 --> 00:36:25,472
这个差别说什么说Siri是什么呢就是尾部所形成的

592
00:36:29,312 --> 00:36:30,336
打开日历

593
00:36:31,104 --> 00:36:32,896
这个例子有3块

594
00:36:33,920 --> 00:36:35,456
尾部就是这样快

595
00:36:38,016 --> 00:36:41,088
我们到老是这样子画吗这个子类

596
00:36:41,344 --> 00:36:42,880
对象

597
00:36:43,136 --> 00:36:44,160
里头呢

598
00:36:44,416 --> 00:36:46,976
服务类的那个成分

599
00:36:47,232 --> 00:36:50,304
不是这样子去的画法记得在这里

600
00:36:51,584 --> 00:36:52,608
自由在这里

601
00:36:52,864 --> 00:36:53,888
往上走

602
00:36:54,912 --> 00:36:57,728
所以刚刚旅程的时候

603
00:36:59,520 --> 00:37:00,544
指针

604
00:37:01,056 --> 00:37:02,080
看我这一句话

605
00:37:02,336 --> 00:37:03,616
指针

606
00:37:05,152 --> 00:37:06,944
就是指向这个头

607
00:37:07,200 --> 00:37:08,480
可是经过一个

608
00:37:09,248 --> 00:37:10,784
转型的动作

609
00:37:11,040 --> 00:37:12,832
转为什么呢

610
00:37:13,344 --> 00:37:19,488
转为这个尾部形成的这一部分为不这个是头后掉的头

611
00:37:19,744 --> 00:37:21,024
头尾部就是最快

612
00:37:21,536 --> 00:37:23,072
出现调整

613
00:37:23,840 --> 00:37:25,632
指针还是指正

614
00:37:26,144 --> 00:37:30,496
但是这行已经变了救他变成指的是这一款

615
00:37:32,544 --> 00:37:34,592
本来历史指的是这三块

616
00:37:34,848 --> 00:37:37,152
现在转型你会变成只能这两块

617
00:37:41,248 --> 00:37:43,040
这就是胎儿的用意啊

618
00:37:44,832 --> 00:37:50,976
委托书上说他会穿这样的东西给你怎么是做的呢现在告诉你就这样实现出来

619
00:37:52,768 --> 00:37:53,792
所以

620
00:37:54,048 --> 00:37:55,072
回到这个例子

621
00:37:55,328 --> 00:37:56,608
如果通

622
00:37:56,864 --> 00:37:58,912
通过这一个qubit

623
00:37:59,424 --> 00:38:01,472
要用head得到41

624
00:38:01,728 --> 00:38:04,544
调用telnet变换器

625
00:38:05,824 --> 00:38:11,200
会得到这个指针就是我拿到这里来也许更好一些通常都是通常都画在

626
00:38:11,456 --> 00:38:12,736
左上角这里

627
00:38:12,992 --> 00:38:14,528
我的意思是这样子

628
00:38:15,552 --> 00:38:16,576
Help others

629
00:38:18,112 --> 00:38:18,880
如果

630
00:38:19,136 --> 00:38:21,440
调用kill里头的CAD

631
00:38:21,952 --> 00:38:28,096
我不能讲里头的我再讲一次我通过这个对象去调用却要之后再将CAD

632
00:38:28,352 --> 00:38:30,144
那就是这一个咯

633
00:38:30,656 --> 00:38:35,008
里头的黑的那就是这个6.3的输出结果就是有点傻

634
00:38:38,592 --> 00:38:41,408
这个是故意这么显示范一次

635
00:38:41,920 --> 00:38:45,504
我也可以一个一个的去拿我还可以继续下去了

636
00:38:47,296 --> 00:38:52,416
通常我们可能在一次禁用上实际写代码应用代码是不会显示亮了

637
00:38:52,672 --> 00:38:54,720
你要对内部

638
00:38:54,976 --> 00:38:57,024
相当有把握相当

639
00:38:57,280 --> 00:39:03,424
理解你才会这么写那也没有必要这么写为什么呢因为刚刚的例子里面

640
00:39:03,680 --> 00:39:04,448
已经

641
00:39:04,704 --> 00:39:08,288
给你的很多有用的工具实在不需要想这样写

642
00:39:08,544 --> 00:39:10,080
这里是几个市

643
00:39:12,128 --> 00:39:18,272
所以说一个结论我们知道就不很好用它可以任意的让你放任意的东西

644
00:39:18,528 --> 00:39:21,600
类型任意的成分类的个数

645
00:39:22,112 --> 00:39:28,256
那他是怎么做出来的借由这个variadic templates这个语言本身可以

646
00:39:28,512 --> 00:39:29,536
逐一的

647
00:39:30,304 --> 00:39:31,584
递归的

648
00:39:31,840 --> 00:39:34,144
一次一次的帮你做

649
00:39:34,912 --> 00:39:39,520
那我们就利用这个机会在这里是用帮我做什么呢帮我继承

650
00:39:40,544 --> 00:39:42,848
而得到这一个结果

651
00:39:43,616 --> 00:39:49,760
现在你胸中自有丘和你心头一张图了当我使用QQ的时候其实就是这

652
00:39:50,016 --> 00:39:50,784
这一样

653
00:39:53,856 --> 00:39:56,416
我这边打出这本书的封面

654
00:39:57,952 --> 00:40:01,280
这个叫什么

655
00:40:01,792 --> 00:40:03,328
这个是吗

656
00:40:03,584 --> 00:40:06,144
早的是200

657
00:40:07,680 --> 00:40:10,752
云顶和01左右的书籍

658
00:40:11,264 --> 00:40:14,080
当时这本书就提出这种观念

659
00:40:15,616 --> 00:40:19,968
但是当时的语言时间在语言的没有

660
00:40:20,992 --> 00:40:21,504
没

661
00:40:21,760 --> 00:40:24,064
发给支撑这种观念

662
00:40:24,832 --> 00:40:28,160
什么语法就是现在再讲的very active templates

663
00:40:28,672 --> 00:40:29,952
自动的递归

664
00:40:30,464 --> 00:40:33,024
自的方式是一家家还没有这种语法

665
00:40:34,304 --> 00:40:40,448
所以这个书里面要实做这一种东西它就用另外一个比较图

666
00:40:40,704 --> 00:40:43,264
股票分别要出粗暴的方式

667
00:40:45,056 --> 00:40:47,872
然后来加上了temperate

668
00:40:48,384 --> 00:40:54,016
这个tuple的写法就变成现在你看到这样非常的漂亮非常的简短

669
00:40:57,088 --> 00:41:00,416
这个是我查到4点他的q q现在有这个字了

670
00:41:00,672 --> 00:41:02,208
意思

671
00:41:02,464 --> 00:41:03,488
元氏

672
00:41:03,744 --> 00:41:04,512
组合

673
00:41:04,768 --> 00:41:06,048
树

674
00:41:07,072 --> 00:41:07,584
综合

675
00:41:08,608 --> 00:41:11,680
你把正义的东西组合在一起就像那个出口

676
00:41:12,960 --> 00:41:14,496
这个是我的粗暴的

677
00:41:15,264 --> 00:41:16,544
引导

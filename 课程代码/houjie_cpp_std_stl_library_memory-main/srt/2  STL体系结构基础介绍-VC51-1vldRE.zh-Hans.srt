1
00:00:06,656 --> 00:00:07,168
猫

2
00:00:07,424 --> 00:00:11,520
我们要开始来谈一谈开始技术性的东西了

3
00:00:14,848 --> 00:00:20,992
刚刚有提到标准库涵盖了splatoon2占70%

4
00:00:21,248 --> 00:00:23,040
其实我随便这样讲好了

5
00:00:23,296 --> 00:00:26,368
今天是第1讲主要集中在

6
00:00:26,880 --> 00:00:28,672
STL

7
00:00:29,696 --> 00:00:35,584
Str分为六大不见有大组件也可以六大零件也可以看普通人

8
00:00:35,840 --> 00:00:36,864
行为什么呢

9
00:00:37,632 --> 00:00:42,752
容器分配器算法迭代器适配器反函数

10
00:00:43,008 --> 00:00:44,544
他的英文都在这个地方

11
00:00:49,152 --> 00:00:54,272
过去曾经有一句话有一本书书名叫做

12
00:00:54,784 --> 00:00:56,064
Data structure

13
00:00:56,576 --> 00:00:59,904
加加上f s加m

14
00:01:00,160 --> 00:01:00,672
犯法

15
00:01:01,696 --> 00:01:02,720
等于

16
00:01:03,232 --> 00:01:04,256
Covid

17
00:01:04,512 --> 00:01:07,584
也就是说一个程序是由

18
00:01:07,840 --> 00:01:09,120
主体自由

19
00:01:09,376 --> 00:01:10,400
数据结构

20
00:01:10,656 --> 00:01:11,168
Hi

21
00:01:11,424 --> 00:01:13,216
算法做成

22
00:01:15,264 --> 00:01:21,408
现在哪在大学里面开的课程那这两门课也是非常非常的重要数据结构和算法

23
00:01:21,664 --> 00:01:25,248
打开得到了很大不但非常非常重要的英文课

24
00:01:27,296 --> 00:01:28,320
我们很幸运的

25
00:01:29,088 --> 00:01:30,624
Cplusplus标准库

26
00:01:31,136 --> 00:01:37,024
放非常重要的一些算法和非常重要的一些容器容器就是数据结构

27
00:01:37,280 --> 00:01:38,560
我做出来了

28
00:01:40,096 --> 00:01:45,728
所以这个对于现在求学的学子来讲也是一个大好消息

29
00:01:46,752 --> 00:01:52,640
全世界最棒的团队提出了标准库而且我们可以看到他的说出口他的源代码

30
00:01:53,408 --> 00:01:55,456
非常好的一个学习对象

31
00:01:56,224 --> 00:02:02,368
就算没有进去深入王子使用也已经让我们如鱼得水其实是非常的简单

32
00:02:02,624 --> 00:02:04,928
变得非常的相对的简单多

33
00:02:05,952 --> 00:02:12,096
这就是这个六大部件里面的容器和算法这两

34
00:02:12,352 --> 00:02:15,936
大部分这也是六大组件的最重要的两个

35
00:02:16,704 --> 00:02:18,496
现在我们来看看这张图

36
00:02:21,824 --> 00:02:27,456
我把这六个部件这个组件的画成这样子来看看它的关系

37
00:02:29,760 --> 00:02:31,552
通常你会接触到的

38
00:02:33,088 --> 00:02:36,672
第1个你要用的就是勇气

39
00:02:38,720 --> 00:02:40,768
容器要放东西

40
00:02:41,280 --> 00:02:44,096
东西要占用内存

41
00:02:44,608 --> 00:02:50,752
这个容器那他非常好的是帮我们把内存的问题全部解决

42
00:02:51,008 --> 00:02:51,520
学校

43
00:02:52,032 --> 00:02:54,336
你看不到内存这件事情

44
00:02:54,592 --> 00:02:58,176
你只要把东西一再一再的放进去

45
00:02:58,432 --> 00:03:02,016
或者把它取出来就好了这内存的事情你不必过

46
00:03:03,552 --> 00:03:07,648
所以他的背后要有另外一个部件去支持它

47
00:03:07,904 --> 00:03:09,952
分配器allocate

48
00:03:10,976 --> 00:03:12,256
我在花了个箭头

49
00:03:13,280 --> 00:03:14,048
哈

50
00:03:14,304 --> 00:03:17,120
分配器是来支持容器

51
00:03:19,168 --> 00:03:22,240
在容器里头你把东西

52
00:03:22,496 --> 00:03:26,592
百万的数据保持够多了放到这里面去

53
00:03:26,848 --> 00:03:28,384
你要不要他操作呀

54
00:03:29,408 --> 00:03:35,552
操作是有一些事情是容器容器会是一个Class是一个类似一个模板类

55
00:03:35,808 --> 00:03:39,136
有一些操作是在容器本身做

56
00:03:40,416 --> 00:03:46,304
但是还有更多的一些东西那位独立出来变成一个一个的函数

57
00:03:47,328 --> 00:03:49,120
其实不是单纯的函数是

58
00:03:49,376 --> 00:03:51,424
模板函数放在

59
00:03:51,680 --> 00:03:55,008
在这一部分叫做算法

60
00:03:55,264 --> 00:04:01,408
大家想听到想到算法那可能就会想到你可能在大学里面

61
00:04:01,664 --> 00:04:02,432
学过的

62
00:04:02,688 --> 00:04:05,760
Java这门课程里面学过soft

63
00:04:06,016 --> 00:04:07,296
Opposite

64
00:04:07,808 --> 00:04:08,832
Quicksort

65
00:04:09,088 --> 00:04:10,880
Shell sort排序

66
00:04:11,648 --> 00:04:13,184
Search

67
00:04:13,696 --> 00:04:14,208
查找

68
00:04:14,464 --> 00:04:18,047
阿什么breather期二分查找法

69
00:04:18,303 --> 00:04:22,143
气泡茶找法等等等等等

70
00:04:23,167 --> 00:04:23,935
OK

71
00:04:24,703 --> 00:04:27,007
那就是这里的算了

72
00:04:28,799 --> 00:04:32,127
我们这边就看到一个观念很特别

73
00:04:35,199 --> 00:04:36,735
在面向对象

74
00:04:37,503 --> 00:04:39,551
这种编程技巧以后

75
00:04:39,807 --> 00:04:45,951
我们是吧不鼓励我们那这个面向对象都叫人体的就鼓励我们说要把

76
00:04:46,207 --> 00:04:46,975
数据

77
00:04:47,231 --> 00:04:47,999
放在

78
00:04:48,255 --> 00:04:49,279
放在那里头

79
00:04:49,535 --> 00:04:54,143
把处理数据的函数也放在那个形成一个类一个class

80
00:04:55,167 --> 00:04:57,215
现在你看到了却不一样啊

81
00:04:57,471 --> 00:04:59,519
数据在容器里面

82
00:05:00,543 --> 00:05:05,919
操作这些数据的动作算法是在另外一组

83
00:05:06,175 --> 00:05:07,455
不在这个克拉斯里

84
00:05:08,735 --> 00:05:10,783
说它的设计方式跟

85
00:05:12,575 --> 00:05:14,111
没事

86
00:05:14,623 --> 00:05:20,767
不一样的基础观念上就不一样分成两条路在此这个世界著作权alloc

87
00:05:21,023 --> 00:05:23,071
无法变成

88
00:05:23,583 --> 00:05:25,887
我们就在这部分先讲到这里

89
00:05:26,399 --> 00:05:27,423
再分成这两个

90
00:05:27,679 --> 00:05:29,983
这里有两个这个算法

91
00:05:30,239 --> 00:05:35,359
要去处理容器的数据他要处理他他手上必须有东西呀

92
00:05:35,615 --> 00:05:41,759
我可能我这个算法比如说我现在这个数排序我要处理的这一个一个容器叫做

93
00:05:42,015 --> 00:05:45,599
我叫做链表list里头有100万个元素

94
00:05:47,135 --> 00:05:48,671
让我这个算法应该

95
00:05:48,927 --> 00:05:52,255
手上要掌握什么我才可以去去

96
00:05:52,511 --> 00:05:56,095
存取去访问到这100万个元素呢

97
00:05:56,607 --> 00:06:02,751
在他们中间的桥梁的左手边是数据右左边是操作中间的桥

98
00:06:03,007 --> 00:06:05,567
无良药作为正邪大气

99
00:06:06,335 --> 00:06:07,871
迭代器的

100
00:06:08,127 --> 00:06:11,455
就好像是一种泛化的指针

101
00:06:12,479 --> 00:06:18,623
我相信这个你选的这种可能在这个之前你应该已经有41的基础现在家里头呢

102
00:06:18,879 --> 00:06:25,023
我也是一样由此正式都有之间你因为指针已经了不陌生了而已

103
00:06:25,279 --> 00:06:31,423
这里的迭代器就是一种泛化的支撑他想象自己正好了但是

104
00:06:31,679 --> 00:06:32,191
是这么理解

105
00:06:33,215 --> 00:06:39,359
所以这个六大部件里头啊我们就已经介绍了容器算法更迭代器了

106
00:06:39,615 --> 00:06:42,175
他真正怎么用当然就是后面要讲的啊

107
00:06:42,431 --> 00:06:44,223
给我还有三个东西

108
00:06:44,991 --> 00:06:47,039
一个叫做

109
00:06:47,807 --> 00:06:50,367
后天分配器也提过来刚刚也提过

110
00:06:50,623 --> 00:06:52,671
所以我每天提到四个

111
00:06:53,183 --> 00:06:57,791
六大部件还有两个是什么那一个叫反函数

112
00:06:58,815 --> 00:07:04,959
Center for the function Object业界有两种名称都没有关系

113
00:07:05,215 --> 00:07:10,079
反函数呢

114
00:07:10,335 --> 00:07:12,127
它的作用相似一个函数

115
00:07:13,919 --> 00:07:20,063
暂时这么理解就可以了因为你还没有看到真正的用法对你来讲都很臭

116
00:07:20,319 --> 00:07:20,831
抽象

117
00:07:21,343 --> 00:07:22,111
树

118
00:07:23,391 --> 00:07:26,719
比如说你要把两个东西加起来然后去相亲

119
00:07:26,975 --> 00:07:32,095
这个东西不是数值可能是两颗石头两栋房子两个人

120
00:07:32,351 --> 00:07:37,471
祝你所创造的这些类这些Class你要把它们相加相减

121
00:07:37,727 --> 00:07:41,055
干什么的呢你就可以写一些反函数

122
00:07:41,823 --> 00:07:42,847
好像是这样

123
00:07:43,359 --> 00:07:45,407
水六个讲了五个啦

124
00:07:45,663 --> 00:07:48,735
还有一个叫做适配器

125
00:07:48,991 --> 00:07:50,527
4h adapter

126
00:07:50,783 --> 00:07:56,159
其实在英文里面就是变压器你看我们现在用一个部电脑

127
00:07:57,951 --> 00:08:02,303
欧亚插上一个变压器为什么呢因为

128
00:08:03,071 --> 00:08:04,607
你这个电脑所用的

129
00:08:04,863 --> 00:08:05,631
电压

130
00:08:06,143 --> 00:08:06,655
汉

131
00:08:06,911 --> 00:08:08,191
想必出来的电压

132
00:08:08,447 --> 00:08:11,007
电源电压对不一样

133
00:08:11,263 --> 00:08:13,567
谁呀中价格转换的东西

134
00:08:13,823 --> 00:08:15,103
在这里也是一样

135
00:08:15,359 --> 00:08:17,919
这个可以帮

136
00:08:18,175 --> 00:08:18,943
我们

137
00:08:19,455 --> 00:08:20,479
转换

138
00:08:20,735 --> 00:08:24,831
这里面大概已经介绍了五种东西能转换一些东西

139
00:08:25,599 --> 00:08:26,623
你看什么

140
00:08:27,391 --> 00:08:29,695
这边有一个容器的

141
00:08:30,719 --> 00:08:36,863
他可以把容器做一些转换当然目前这个饭拍出像啊你还不知道转换成什么

142
00:08:37,887 --> 00:08:39,167
容器做转盘

143
00:08:39,679 --> 00:08:43,007
对于反函数方程也可以做转换

144
00:08:44,543 --> 00:08:47,615
对于迭代器也可以做转化这些转换

145
00:08:49,151 --> 00:08:50,175
有些会让你

146
00:08:50,431 --> 00:08:51,455
目瞪口呆

147
00:08:51,967 --> 00:08:54,783
这个技巧上的是非常的

148
00:08:55,551 --> 00:08:57,343
有趣有趣

149
00:08:58,367 --> 00:09:04,511
好像我们就把六大部件的关系那么这张图做一个交代

150
00:09:12,447 --> 00:09:17,823
很快的我们就要进入我们的程序的部分就会把这些东西都用一次给你看

151
00:09:27,295 --> 00:09:28,831
好继续下去

152
00:09:30,879 --> 00:09:34,463
这还是刚刚的那张图缩小一点放在这个地方

153
00:09:35,487 --> 00:09:41,631
现在我们来看看我写的这个程序这个程序非常的软件是7行六个东西都用一个给你看

154
00:09:42,655 --> 00:09:43,423
17号

155
00:09:47,263 --> 00:09:52,383
我要使用容器在这里的第11行这边出现一个不干

156
00:09:54,431 --> 00:09:58,783
由于我要使用它所以我必须去查手册看看我该

157
00:09:59,295 --> 00:10:03,647
Include该寒露什么样的头文件

158
00:10:04,415 --> 00:10:09,023
标准库对于这个头文件的规划是相当的

159
00:10:09,535 --> 00:10:11,327
秩序就是说

160
00:10:12,095 --> 00:10:13,887
跟大概跟你讲一下你就可以

161
00:10:14,143 --> 00:10:16,447
你就可以举一反三了

162
00:10:16,703 --> 00:10:17,727
什么呢

163
00:10:17,983 --> 00:10:20,031
比如说他有10种容器

164
00:10:20,799 --> 00:10:25,151
你要用任何一个容器你就引出对应的头文件和你看

165
00:10:25,407 --> 00:10:29,503
这边的11号我要用到factor所以我在11号

166
00:10:29,759 --> 00:10:32,319
321行库了呗

167
00:10:33,343 --> 00:10:35,903
这个没有点h

168
00:10:37,183 --> 00:10:39,487
我怎么使用这个容器呢

169
00:10:41,279 --> 00:10:47,423
我必须在这个这个有间括号表示这是一个模仿所以如果你从来没接触过模板这就是模板的用

170
00:10:47,679 --> 00:10:50,239
用法就是在emacs后面加上金挂号

171
00:10:50,751 --> 00:10:53,311
里面去指定指定什么呢

172
00:10:53,567 --> 00:10:57,663
这个容器的设计是让我们指定元素的

173
00:10:58,431 --> 00:10:59,455
类型

174
00:10:59,967 --> 00:11:01,759
我现在决定放手术

175
00:11:02,015 --> 00:11:08,159
所以我在第11行这边呢那个后面我就放了一个爱我的指令我要放陈述问题

176
00:11:11,231 --> 00:11:13,791
第2个参数我这边写的

177
00:11:14,559 --> 00:11:17,119
是允许你放一个分配器

178
00:11:17,375 --> 00:11:23,519
刚刚这个图里头你看到了容器是要有分配器在背后支持他

179
00:11:23,775 --> 00:11:25,055
帮他分配内存

180
00:11:26,335 --> 00:11:28,639
所以你需要选择一个分配器

181
00:11:29,151 --> 00:11:30,431
你可以不洗

182
00:11:31,711 --> 00:11:32,991
你不写的话呢

183
00:11:33,759 --> 00:11:37,599
在他的源代码里面会有一个默认所使用的分配器

184
00:11:38,111 --> 00:11:41,951
我们在这第1讲最后面会让你看到

185
00:11:42,207 --> 00:11:47,071
各种容器的源代码的这一个地方到底是使用什么分配器

186
00:11:47,327 --> 00:11:53,471
这也是按理说的分配其实不太需要你去操心所以基本上大部分人都不会

187
00:11:53,727 --> 00:11:55,775
开启这个第2个模板参数

188
00:11:57,055 --> 00:12:01,663
你不写就有默认值那现在呢我就明白了写出来让你更清楚一些

189
00:12:02,175 --> 00:12:08,319
那我就选了arkit要查一查手册标准雇有一个分配机制就叫做

190
00:12:08,575 --> 00:12:10,367
你这个名字我就选它

191
00:12:10,879 --> 00:12:13,951
那这个分频器本身也是一个模板

192
00:12:14,207 --> 00:12:17,791
你必须告诉他每次他分配的是什么东西

193
00:12:18,303 --> 00:12:19,327
我现在告诉他

194
00:12:20,351 --> 00:12:21,887
分配的是一个int

195
00:12:23,679 --> 00:12:24,703
这样就

196
00:12:24,959 --> 00:12:26,495
在这第11行呢

197
00:12:26,751 --> 00:12:32,127
我就正式的声明了我要一个容器里面放的是int

198
00:12:32,639 --> 00:12:38,783
我使用的分配器帮我分配内存的视觉这个东西这个东西

199
00:12:39,039 --> 00:12:41,855
中心每一次分配的内存是一个int

200
00:12:42,367 --> 00:12:44,159
11行的意义

201
00:12:47,743 --> 00:12:49,023
注意

202
00:12:49,279 --> 00:12:55,423
如果你的容器后面放int你指明你的元素是int但是你的分配器

203
00:12:55,679 --> 00:12:57,471
去后面指明的元素

204
00:12:57,983 --> 00:12:59,263
却是弄

205
00:12:59,519 --> 00:13:05,663
或者是是是什么奇怪的东西两者不匹配的话那你就是拿石头砸自己的脚

206
00:13:08,479 --> 00:13:11,039
你所当然没给你根本就不

207
00:13:11,551 --> 00:13:14,879
不搭配了

208
00:13:15,135 --> 00:13:19,743
好然后呢后面我就要声明我的一个变量

209
00:13:19,999 --> 00:13:23,839
当然在现在我们都觉得会下option

210
00:13:25,375 --> 00:13:26,911
非给初值

211
00:13:27,423 --> 00:13:31,519
好了翻一翻手册呃我可以怎么给朱子可以出自的方法有很多种

212
00:13:32,031 --> 00:13:38,175
在这个地方我是这么给的我在的执行那放一个睿智

213
00:13:38,431 --> 00:13:39,967
大家都会用数组

214
00:13:40,223 --> 00:13:42,015
放六个元素进去

215
00:13:42,783 --> 00:13:48,927
然后再下一行这个地址银行那我就把数组的头跟尾当成这个出子放进来

216
00:13:49,951 --> 00:13:53,791
所以现在这个外壳里头就带有了这六个元素了

217
00:13:54,559 --> 00:14:00,703
关于这个射出子那有很多种我刚刚行也讲得很快这个你再回去

218
00:14:00,959 --> 00:14:03,263
测首测就知道

219
00:14:05,311 --> 00:14:11,455
所以现在的11号我们用了两个东西我正在示范使用六大步

220
00:14:11,711 --> 00:14:15,039
固件现在用了容器分配器

221
00:14:22,207 --> 00:14:22,975
接下来

222
00:14:23,999 --> 00:14:25,791
我要去操作它

223
00:14:26,559 --> 00:14:28,095
我选那个算法

224
00:14:28,351 --> 00:14:30,655
13行叫康义

225
00:14:31,935 --> 00:14:34,495
这个算法到底有多少个呢

226
00:14:35,519 --> 00:14:41,663
我印象中过去早期的版本有80个那到了是一家以never 2011年的这个

227
00:14:41,919 --> 00:14:45,247
新标准的更多正确的数据

228
00:14:45,503 --> 00:14:50,623
不知道了其中有一个叫汤顾名思义怎么意思

229
00:14:50,879 --> 00:14:56,511
看看这就是在计量计算多少个衣服就表示一个条件

230
00:14:56,767 --> 00:15:02,911
所以这个算法能够帮我们计算出我给他的条件之下

231
00:15:03,167 --> 00:15:05,983
符合这个条件的元素有几个

232
00:15:06,239 --> 00:15:10,591
这个家康的意思可以回去查刚刚有介绍三个网站

233
00:15:10,847 --> 00:15:13,151
你都可以去查他的整个

234
00:15:13,407 --> 00:15:14,175
描述

235
00:15:15,967 --> 00:15:18,015
好我现在选择一个算法

236
00:15:18,271 --> 00:15:19,295
我要告诉他

237
00:15:20,319 --> 00:15:21,855
他要去操作的

238
00:15:22,879 --> 00:15:25,183
元素在哪里范围在哪里

239
00:15:25,695 --> 00:15:28,255
我就把刚刚那个vector

240
00:15:28,511 --> 00:15:29,791
名字叫vi

241
00:15:30,303 --> 00:15:32,095
他的头跟尾

242
00:15:32,351 --> 00:15:33,375
指定进去

243
00:15:34,143 --> 00:15:39,007
所有的元素是不是所有的98%和95

244
00:15:40,287 --> 00:15:44,127
都带着这两个函数一个叫北京的表现

245
00:15:44,383 --> 00:15:50,527
所以你可以把元素放现在是放六个元素进去你放100万个元素进去好了我等一下就用的是

246
00:15:50,783 --> 00:15:55,903
100万这样的数量啊不是学校里面的玩具城市啊100万个元素

247
00:15:57,951 --> 00:15:59,999
侯根伟到底在哪里

248
00:16:00,767 --> 00:16:06,655
这个容器所有的容器好还是99人有15的容器能够带的这两个函数叫病人

249
00:16:07,167 --> 00:16:08,447
所以我就呼叫了

250
00:16:09,471 --> 00:16:11,775
得到什么得到成为的

251
00:16:12,031 --> 00:16:17,151
这好像在戏里头有一个数组你的头跟尾是两根指针

252
00:16:17,663 --> 00:16:18,943
完全一样的意思

253
00:16:19,455 --> 00:16:25,599
现在不是指针示范化的指针也就是所谓的所以的13号呢

254
00:16:25,855 --> 00:16:27,903
我要选择康live

255
00:16:28,927 --> 00:16:29,695
来用

256
00:16:29,951 --> 00:16:35,327
我告诉他说你要去处理的事情试验到这个and中间所有的元素

257
00:16:35,583 --> 00:16:36,351
帮我处理

258
00:16:38,399 --> 00:16:42,751
处理的处理什么呢这个衣服表示带一个条件

259
00:16:43,263 --> 00:16:49,407
这个从名称来看表示它要求放一个条件进去不要放什么条件呢

260
00:16:49,663 --> 00:16:51,199
我决定去

261
00:16:51,711 --> 00:16:53,247
请他帮我算出来

262
00:16:53,503 --> 00:16:58,111
小于40的数有几个我们先用眼睛看一下

263
00:16:58,623 --> 00:17:02,463
这里有272 10 12 47 10983

264
00:17:02,975 --> 00:17:07,583
所以我们用眼睛看的话那小于40的应该是27

265
00:17:07,839 --> 00:17:08,607
12

266
00:17:08,863 --> 00:17:09,375
这两个

267
00:17:10,399 --> 00:17:12,191
好的我们刚眼睛是这样看的

268
00:17:12,959 --> 00:17:14,495
现在我要城市去做

269
00:17:15,007 --> 00:17:21,151
我就选择了小鱼是什么OK再查一查标准雇有一个东西一个反函数将x

270
00:17:21,407 --> 00:17:22,175
比大小

271
00:17:23,199 --> 00:17:23,711
Sex

272
00:17:24,223 --> 00:17:26,015
Embassy大笑

273
00:17:27,295 --> 00:17:33,439
可是我是要算小于45不是要拿NBA我要拿每一个元素根

274
00:17:33,695 --> 00:17:34,463
40

275
00:17:34,719 --> 00:17:38,815
那这个家这个接口有点不怪怪不太符合

276
00:17:41,887 --> 00:17:44,191
标准库又提供了一个

277
00:17:44,447 --> 00:17:46,239
刚介绍过是什么呢

278
00:17:46,751 --> 00:17:52,383
变压器不过在这个地方就是一个桥梁一个转换器

279
00:17:53,407 --> 00:17:59,295
16c就是要绑定的212什么第2参数

280
00:17:59,551 --> 00:18:02,879
所以本来是NBA有没有小于B

281
00:18:03,135 --> 00:18:06,207
现在变成有没有小于40

282
00:18:06,719 --> 00:18:07,999
这才是我所要的

283
00:18:09,279 --> 00:18:15,167
现在看起来很复杂啊但是你可以感觉到现在的标准库的这些东西的

284
00:18:15,423 --> 00:18:16,447
妙用

285
00:18:17,215 --> 00:18:19,263
打给泡泡用

286
00:18:19,519 --> 00:18:25,663
好接着让我们穿外套一件一件穿上去或者像乐高积木一样一个一个的跑鞋上去

287
00:18:25,919 --> 00:18:28,991
在技术上这是一个很重要的一个

288
00:18:29,247 --> 00:18:30,015
一个进步

289
00:18:31,039 --> 00:18:36,415
而得到后面我们讲第2讲讲第3讲的时候就会去谈到为什么要设计成这样

290
00:18:37,183 --> 00:18:41,023
以及它是怎么设计好再来一次

291
00:18:41,279 --> 00:18:44,095
我现在要那每个元素为要跟40来比

292
00:18:44,351 --> 00:18:47,423
所以我选择了一个next小鱼

293
00:18:47,935 --> 00:18:50,751
而且把第2参数绑定为40

294
00:18:51,007 --> 00:18:52,287
好像非常好

295
00:18:53,055 --> 00:18:54,847
而我坏透了

296
00:18:55,103 --> 00:19:01,247
右脚为了释放期间我又加了一个条件加50000 not就是

297
00:19:01,503 --> 00:19:03,295
那就是否定的意思

298
00:19:03,551 --> 00:19:07,903
所以刚刚本来是小依次是加上这个否定以后这个条件

299
00:19:08,159 --> 00:19:08,671
就变成

300
00:19:09,439 --> 00:19:10,719
大于等于40

301
00:19:11,487 --> 00:19:13,023
大于等于40

302
00:19:13,535 --> 00:19:15,839
请看这个地址是这一条曲线

303
00:19:17,887 --> 00:19:21,983
这整个就代表一个动作一个条件

304
00:19:23,775 --> 00:19:29,919
脏东西我们在标准库里面有个名称叫做project predicate如果

305
00:19:30,175 --> 00:19:32,479
我去查字典他嘉宾语语

306
00:19:33,503 --> 00:19:36,831
不过我不太能够望文生义在这个地方

307
00:19:37,599 --> 00:19:41,183
最快的在这里就是判断是否

308
00:19:41,695 --> 00:19:47,839
判断一个东西真会讲我现在这一行那整个这么一行这样的意思就是

309
00:19:48,607 --> 00:19:50,143
大于等于40

310
00:19:50,655 --> 00:19:55,007
这是一个判断是这个条件是他会传为真

311
00:19:55,263 --> 00:19:56,287
我讲出

312
00:20:01,407 --> 00:20:02,943
好什么搭配起来

313
00:20:03,455 --> 00:20:05,503
我要用compass

314
00:20:06,271 --> 00:20:09,343
去操作整个容器的头到尾

315
00:20:10,879 --> 00:20:17,023
由于这个康德意思就跟衣服吗他的他就是这个名称就告诉你说你要给他一个条件我现在调

316
00:20:17,279 --> 00:20:23,167
条件是什么呢我经过种种的搭配之后我这个条件叫作大于等于40

317
00:20:23,935 --> 00:20:26,239
其实就是小于40的否定

318
00:20:27,263 --> 00:20:28,799
那就是大雨的词

319
00:20:30,335 --> 00:20:32,639
像我们又到这种东西了我们来算一算

320
00:20:32,895 --> 00:20:37,247
51行有一个容器每个分配器让两个

321
00:20:38,015 --> 00:20:40,831
13行康利服是一个算法

322
00:20:41,087 --> 00:20:41,599
第3个

323
00:20:42,623 --> 00:20:47,743
后面有病根and被传为一直围着这是第4个部件

324
00:20:49,023 --> 00:20:55,167
上面这一行很长的这样的les就是方均也就是方程第5节出来

325
00:20:56,959 --> 00:21:02,079
这个趴在外头他的左手边外头操了一个东西就这个

326
00:21:02,335 --> 00:21:05,407
16所有东西都用过一次给你看

327
00:21:06,431 --> 00:21:07,199
你问一下

328
00:21:28,704 --> 00:21:34,848
我刻意的写一个很小很小的程序吧这六大部件的有用一次给各位看

329
00:21:40,736 --> 00:21:44,064
我们谈到了算法谈到的容器

330
00:21:44,576 --> 00:21:49,440
免不了就会想到竟然它提供我这么多的

331
00:21:50,720 --> 00:21:56,864
算法跟容器算法是一个一个都不一样所以你当然你要做什么事情你就行了一个这个

332
00:21:57,120 --> 00:21:58,144
没有可以挑的

333
00:21:58,400 --> 00:22:01,984
容器能容器都是在放元素的地方

334
00:22:02,496 --> 00:22:06,336
那这时候就有问题了我到底选哪一个比较好

335
00:22:06,848 --> 00:22:08,384
哪个效率比较高

336
00:22:10,176 --> 00:22:12,224
如果这个有答案那就奇怪

337
00:22:12,992 --> 00:22:19,136
如果这个有答案的话那他只要提供最好的那个给你用他为什么要提供10个八个给你用呢所以这什么

338
00:22:19,392 --> 00:22:20,160
没有答案的

339
00:22:20,416 --> 00:22:25,536
Python取决于你的数据的分布

340
00:22:26,304 --> 00:22:27,840
你的数据的特性

341
00:22:28,096 --> 00:22:30,400
比如说你有些人100万个数据

342
00:22:30,656 --> 00:22:36,800
你是从来会在中间安插一个地方一个人数吗你如果中天然差就要往旁边哭

343
00:22:37,056 --> 00:22:38,336
扩展出去哦

344
00:22:38,848 --> 00:22:40,640
这个是不是会很慢的

345
00:22:40,896 --> 00:22:45,504
你会常常从尾巴放元素进去还是会常常从头部放元素进去

346
00:22:47,040 --> 00:22:49,600
如果他们要找一个元素然后把他杀掉吗

347
00:22:49,856 --> 00:22:50,624
这些都

348
00:22:50,880 --> 00:22:53,952
是你的使用的现实状况

349
00:22:54,720 --> 00:22:59,072
根据这些状况下来选择最适合你的人气

350
00:23:00,864 --> 00:23:03,680
所以才会提供了这么84个东西给你用

351
00:23:04,704 --> 00:23:08,032
好那我们在谈到算法谈到容器的时候

352
00:23:08,544 --> 00:23:10,080
免不了要有

353
00:23:10,592 --> 00:23:12,896
看到一个观念叫做

354
00:23:13,920 --> 00:23:14,688
复杂度

355
00:23:16,224 --> 00:23:17,504
复杂度

356
00:23:18,272 --> 00:23:19,552
在这个

357
00:23:20,064 --> 00:23:22,624
古典的计算机

358
00:23:22,880 --> 00:23:24,672
询问你头啊

359
00:23:24,928 --> 00:23:25,440
不用

360
00:23:26,464 --> 00:23:31,072
后来表示就是一个大区要的给大侯

361
00:23:31,328 --> 00:23:35,936
后面括号那就像这样12345678这是常见的一些复杂度

362
00:23:37,216 --> 00:23:40,032
要常数的常数时间的复杂度

363
00:23:40,288 --> 00:23:41,568
线性的

364
00:23:41,824 --> 00:23:44,128
有什么指数的

365
00:23:44,384 --> 00:23:47,200
还有这个log对数的等等等

366
00:23:48,480 --> 00:23:54,624
这个很复杂了这不是我们的一讲要讲了我只是告诉你说有这些东西而且这些东西查得到

367
00:23:54,880 --> 00:23:57,184
帮我刚刚例子选的是bat

368
00:23:58,464 --> 00:24:04,608
在那个网站上或者在这些书籍上我就可以查到master他要从中间放了一个元素进去他的

369
00:24:04,864 --> 00:24:05,888
那个复杂度是多少

370
00:24:06,912 --> 00:24:09,472
如果我选是list它的复杂度是多少

371
00:24:10,240 --> 00:24:11,520
这个复杂度就可以

372
00:24:11,776 --> 00:24:13,312
再给我一个概念

373
00:24:13,568 --> 00:24:16,896
什么东西吃可能比较快什么会比较慢

374
00:24:17,408 --> 00:24:18,688
在什么情况下

375
00:24:19,968 --> 00:24:23,552
是一个表示法但不是今天的一讲

376
00:24:25,600 --> 00:24:26,368
在后面

377
00:24:26,624 --> 00:24:27,648
会感到

378
00:24:29,184 --> 00:24:34,816
当然要记住一件事情哦请问要注记住一件事情在复杂度

379
00:24:35,840 --> 00:24:37,120
里面那个恩

380
00:24:37,376 --> 00:24:39,168
你看这个地方都有分吗

381
00:24:40,448 --> 00:24:43,520
必须是一个很大的数量它才有意义

382
00:24:44,032 --> 00:24:48,640
学校写的那些玩具城是什么放100个元素到容器

383
00:24:48,896 --> 00:24:50,432
就算1000好了

384
00:24:51,456 --> 00:24:52,736
那都是玩具

385
00:24:53,248 --> 00:24:54,528
微不足道

386
00:24:55,808 --> 00:24:56,576
这个

387
00:24:57,856 --> 00:25:01,184
这个复杂度要能够成立呢那个人要很大

388
00:25:01,696 --> 00:25:04,768
100000 500000 1000000工业级的

389
00:25:06,048 --> 00:25:11,168
它才是会呈现出它的精准呈现出它的复杂度的那个11出来

390
00:25:13,984 --> 00:25:14,496
好

391
00:25:15,008 --> 00:25:18,336
你就只是介绍这个概念那么其他的

392
00:25:18,848 --> 00:25:24,992
有关于这个西部的这个古典的计算机科学里面的这些

393
00:25:25,248 --> 00:25:27,552
东西了就后面的几讲再来烦他

394
00:25:33,440 --> 00:25:37,024
在我们后面要开始进行程序之前呢

395
00:25:39,584 --> 00:25:42,656
由企业我们就可以进入我们的程序了

396
00:25:43,424 --> 00:25:46,752
介绍一个观念叫钱的后台区间

397
00:25:48,032 --> 00:25:54,176
今天的这个范围吗英文就任距来表示啊你把你的一堆数据放到容器

398
00:25:54,432 --> 00:25:54,944
低头

399
00:25:55,200 --> 00:26:01,344
这种气动有头有尾像刚刚我们一起过了所有容器的多提供电焊

400
00:26:01,600 --> 00:26:03,136
And这两个函数

401
00:26:03,392 --> 00:26:08,512
传出来东西指向头更为但是头大概是没有疑虑

402
00:26:09,024 --> 00:26:11,840
喂那我的表示法有

403
00:26:12,352 --> 00:26:13,120
好几种

404
00:26:14,144 --> 00:26:19,520
我现在看我这个图上画了12345677个元素

405
00:26:20,288 --> 00:26:26,432
后背这个灰色的不是灰色就表示他不是我这个人书容器我看不到这个回答

406
00:26:28,480 --> 00:26:31,040
所谓的钱比后开车间是说

407
00:26:32,320 --> 00:26:33,856
标准库规定

408
00:26:34,112 --> 00:26:38,208
我所有的容器要表现头跟尾是这样来表现的

409
00:26:39,744 --> 00:26:42,560
你就是下一个元素的起点

410
00:26:43,584 --> 00:26:44,352
好一律

411
00:26:46,912 --> 00:26:53,056
我们不是不叫过这个函数吗要用Grand这个函数吗

412
00:26:53,312 --> 00:26:59,456
那个iterator那个泛化指针指的是主意识最后一个元素

413
00:26:59,712 --> 00:27:01,504
下一个位置

414
00:27:03,808 --> 00:27:05,600
不是指向最后一个元素

415
00:27:09,952 --> 00:27:16,096
这点中表示法有诱惑力和有什么差别为什么重要性可以分区分的吗

416
00:27:17,376 --> 00:27:23,520
都可以但是标准库说我决定用这一切在你看到的这种表示方

417
00:27:25,056 --> 00:27:27,616
他说的东西都遵循这个规则

418
00:27:28,128 --> 00:27:29,664
那这样子呢

419
00:27:29,920 --> 00:27:31,968
并指向第1个元素

420
00:27:32,224 --> 00:27:38,368
And确指向最后一个元素的下一个位置就叫做钱币

421
00:27:38,624 --> 00:27:40,160
后台取钱

422
00:27:40,928 --> 00:27:41,952
19世纪初

423
00:27:42,464 --> 00:27:46,048
这个数学符号用这个中括号来表示就涵盖

424
00:27:46,304 --> 00:27:47,328
China

425
00:27:48,608 --> 00:27:51,424
用圆圆括号来表示

426
00:27:53,728 --> 00:27:59,104
前臂后该区将涵盖的第1个但是不含钙最后一个意思

427
00:28:00,640 --> 00:28:01,920
注意我这个图

428
00:28:03,456 --> 00:28:09,088
这边有写了这些容器不一定是连续空间所以我特别好他隔开

429
00:28:09,856 --> 00:28:11,648
它可能是一个链表

430
00:28:11,904 --> 00:28:16,000
可能是一个数一个数可能是一个hashtable

431
00:28:17,792 --> 00:28:19,072
无所谓

432
00:28:20,608 --> 00:28:25,216
不管是什么容器它在内存里面长的是什么样子

433
00:28:25,728 --> 00:28:31,360
有没有关系他都会提供一个begin

434
00:28:31,616 --> 00:28:34,688
而finger and所传回来的

435
00:28:34,944 --> 00:28:39,040
泛化指征意义就是前臂后台

436
00:28:39,808 --> 00:28:40,832
一定要注意

437
00:28:41,344 --> 00:28:44,672
所以你看我这边呢红色打一个叉是什么意思

438
00:28:47,232 --> 00:28:49,280
这一个容器叫做c

439
00:28:51,072 --> 00:28:54,912
通过C调用end得到了是一个iterator

440
00:28:55,168 --> 00:28:56,192
泛化指针

441
00:28:56,960 --> 00:29:00,032
把这个指针要去节引用比如Friends

442
00:29:01,312 --> 00:29:03,872
那得到的就是这个灰色这一块哦

443
00:29:04,640 --> 00:29:07,968
这一块根本就不是这个容器里面的一部分

444
00:29:08,224 --> 00:29:11,296
所以你这样去哪会达到什么呢我知道

445
00:29:12,064 --> 00:29:13,344
曾是会当掉

446
00:29:13,600 --> 00:29:16,928
可能会拿到一个根本就不是你心头所想的东西

447
00:29:17,184 --> 00:29:20,768
这是一个危险动作我这边打擦这是不行的

448
00:29:25,888 --> 00:29:29,728
有这个钱的后开区间这个概念之后的所以我们

449
00:29:29,984 --> 00:29:31,776
如果要把整个容器

450
00:29:32,288 --> 00:29:33,312
走访医院

451
00:29:33,568 --> 00:29:34,336
建立它

452
00:29:36,128 --> 00:29:37,408
可以怎么写

453
00:29:37,664 --> 00:29:38,944
那你那个那个

454
00:29:39,200 --> 00:29:39,968
Forest

455
00:29:41,248 --> 00:29:45,856
和循环通常大家都用复

456
00:29:46,368 --> 00:29:48,928
副非常有弹性的自己

457
00:29:49,696 --> 00:29:55,840
R的行那我建立了一个容器一个斜体字表示你选用什么都可以

458
00:29:57,120 --> 00:29:58,400
只要这个容器都可以

459
00:29:58,656 --> 00:30:01,472
人间点给我放的很多元素进去

460
00:30:03,008 --> 00:30:04,544
第三行这边

461
00:30:05,568 --> 00:30:08,384
我需要一个iterator

462
00:30:09,664 --> 00:30:15,808
这iterator类型太不要怎么写了要这样写这个容器

463
00:30:16,064 --> 00:30:18,624
理头发好慢好的规则

464
00:30:19,136 --> 00:30:23,488
所有的容器都有他专属的一种一条微克的形象

465
00:30:24,512 --> 00:30:25,280
所以

466
00:30:25,792 --> 00:30:27,840
当我需要一个为科威特的时候

467
00:30:28,096 --> 00:30:31,680
我要从这个容器里头

468
00:30:31,936 --> 00:30:36,544
请问你的iterator是什么那是这个蓝色的这一种

469
00:30:37,312 --> 00:30:38,592
Type这个类型

470
00:30:39,104 --> 00:30:41,408
我才能够定义出生明珠

471
00:30:42,688 --> 00:30:43,712
再出来

472
00:30:46,016 --> 00:30:49,600
好然后我让他等一会就此向投落

473
00:30:50,368 --> 00:30:51,392
现在我要把它

474
00:30:52,416 --> 00:30:53,184
建立它

475
00:30:53,440 --> 00:30:54,208
Followed

476
00:30:54,976 --> 00:30:57,792
当这个iterator不懂英伟的时候

477
00:30:58,560 --> 00:31:00,096
去做你的事要做的事情

478
00:31:00,864 --> 00:31:03,168
然后做完之后呢会的佳佳

479
00:31:03,680 --> 00:31:05,984
他首先提供一职位的是什么呢

480
00:31:06,752 --> 00:31:12,896
概念上讲就是一个泛化的指针的指针可以做的事情发通通可以做

481
00:31:13,408 --> 00:31:15,712
你可以在指针身上做什么事情呢

482
00:31:15,968 --> 00:31:16,736
型号

483
00:31:18,016 --> 00:31:19,040
箭头符号

484
00:31:19,808 --> 00:31:20,576
佳佳

485
00:31:21,088 --> 00:31:21,856
剪剪

486
00:31:22,624 --> 00:31:23,648
等等等

487
00:31:23,904 --> 00:31:25,696
他也都能够接受

488
00:31:29,024 --> 00:31:35,168
所以再看一次follow我们从头的地方开始加加加加加加加加到什么地方呢

489
00:31:35,424 --> 00:31:36,960
加到他

490
00:31:37,216 --> 00:31:38,752
等于n为耻

491
00:31:39,008 --> 00:31:45,152
在这里要注意前必后开机键在这里所以这个病就这个家家

492
00:31:45,408 --> 00:31:47,456
佳佳佳佳佳

493
00:31:47,712 --> 00:31:50,784
当家家到这里的时候就停止

494
00:31:51,552 --> 00:31:53,088
讲就把整个

495
00:31:55,392 --> 00:31:56,416
走过了一遍

496
00:31:56,672 --> 00:31:57,952
大家都是

497
00:31:58,464 --> 00:32:00,256
很习惯的写法都是怎么写

498
00:32:08,960 --> 00:32:14,336
这样子写字在过去的一个现在当然没有错

499
00:32:14,848 --> 00:32:16,384
培根做法

500
00:32:17,152 --> 00:32:18,944
介绍一个好东西

501
00:32:19,712 --> 00:32:25,856
Cplusplus 2011年的这个新版的说现在在2.0

502
00:32:26,112 --> 00:32:27,136
出来之后了

503
00:32:27,392 --> 00:32:31,744
有一个好东西要做range is for statement

504
00:32:33,280 --> 00:32:36,608
什么意思为他的语法是这样

505
00:32:37,120 --> 00:32:39,168
我现在解释这也是为了要

506
00:32:39,680 --> 00:32:45,824
取代过去以前那个商业险的那个写吧烦死了所以我们

507
00:32:46,080 --> 00:32:50,432
更推荐现在这样的写法但是之后才有

508
00:32:50,944 --> 00:32:53,248
他的语法是这样说了

509
00:32:55,040 --> 00:32:56,064
括号里面的

510
00:32:56,320 --> 00:32:57,344
这便是一个

511
00:32:57,600 --> 00:32:59,392
Creation就是一个声明

512
00:32:59,648 --> 00:33:03,232
然后一个冒号后面是一个collection的这个容器

513
00:33:05,280 --> 00:33:06,560
好直接看例子吧

514
00:33:07,584 --> 00:33:08,352
4

515
00:33:09,120 --> 00:33:11,424
我准备离头准备一个int

516
00:33:12,448 --> 00:33:13,216
冒号

517
00:33:13,984 --> 00:33:20,128
右手边的是容器任何容器for action就是几何体几何体就是勇气

518
00:33:20,640 --> 00:33:22,688
他是比较广泛的容性

519
00:33:22,944 --> 00:33:26,784
这个又是谁在家里人心的一个语法

520
00:33:27,040 --> 00:33:28,064
你可以放

521
00:33:29,344 --> 00:33:35,488
STL的所有容器或者是像这样也是形成一个几何体的直接给大括号里面

522
00:33:36,512 --> 00:33:38,048
任意写一些元素

523
00:33:38,816 --> 00:33:39,840
红色的这部分

524
00:33:42,656 --> 00:33:45,216
好像这么做呢这个疯了的

525
00:33:45,472 --> 00:33:47,264
语言便利他的时候

526
00:33:47,776 --> 00:33:49,312
就会把它

527
00:33:49,568 --> 00:33:52,128
一个一个的走过的所以这个爱

528
00:33:52,384 --> 00:33:53,152
就会

529
00:33:54,432 --> 00:33:57,248
作为一个手抓住每一个元素出来

530
00:33:59,808 --> 00:34:05,952
这个follower里面做的动作这里有唯一的动作是输出所以这一个form

531
00:34:06,208 --> 00:34:12,352
执行结果就会把2357 93 17 19全不打一处来

532
00:34:12,608 --> 00:34:13,888
写法就比前面

533
00:34:14,912 --> 00:34:16,192
方便太多了

534
00:34:19,008 --> 00:34:24,128
我们拿哪一个真正的容器来说好了现在在这边

535
00:34:24,384 --> 00:34:25,664
准备了一个Master

536
00:34:27,712 --> 00:34:31,552
然后呢我要把它全部打印一遍我可以用for

537
00:34:32,064 --> 00:34:36,416
Photo of又是一个新的好东西也是2014后的

538
00:34:37,952 --> 00:34:40,512
这什么意思是说我现在有一个

539
00:34:41,024 --> 00:34:43,328
变量叫做element

540
00:34:43,840 --> 00:34:45,120
他是什么类型呢

541
00:34:45,376 --> 00:34:48,192
其实我们知道它是什么类型它就是iterator

542
00:34:48,960 --> 00:34:50,240
回到上一页

543
00:34:51,776 --> 00:34:53,312
本来是要写成这样

544
00:34:55,616 --> 00:35:01,760
我们心里都还是要有这个基础这个技术基础我们知道是这种东西可是这写起来太太

545
00:35:02,016 --> 00:35:03,552
太强了

546
00:35:04,576 --> 00:35:05,856
我们改用Auto

547
00:35:06,880 --> 00:35:07,648
就是说

548
00:35:07,904 --> 00:35:14,048
你跟他这里说你帮我拖一下吧你你你明明很清楚吗这个这个要运作话它需要什么

549
00:35:14,304 --> 00:35:15,328
你就帮我倒

550
00:35:15,584 --> 00:35:16,608
推导出来

551
00:35:16,864 --> 00:35:18,144
走到头就好

552
00:35:19,936 --> 00:35:23,264
好这么写的话那这个elem2门

553
00:35:24,032 --> 00:35:24,800
就会

554
00:35:25,568 --> 00:35:31,200
取出本子就会取出后面这个容器的一次以后面的每一个元素出来

555
00:35:32,736 --> 00:35:34,016
我们就可以吧

556
00:35:34,528 --> 00:35:36,064
或者做任何你想做的事情

557
00:35:39,904 --> 00:35:46,048
让我们写程式的更方便很多是有人就是比较极端的说话

558
00:35:46,304 --> 00:35:48,352
以前的我就是为电量的

559
00:35:48,608 --> 00:35:50,144
类型所苦

560
00:35:50,912 --> 00:35:53,984
那现在既然有了所有的变量都用Moto

561
00:35:54,240 --> 00:35:56,800
作为它的类型可以吗

562
00:35:57,568 --> 00:35:58,848
不能说错

563
00:35:59,360 --> 00:36:05,504
反正看什么时候不能错了会告诉你你再解决了但是

564
00:36:05,760 --> 00:36:06,272
不是的

565
00:36:07,296 --> 00:36:09,088
不是一个好的技术养殖

566
00:36:09,344 --> 00:36:14,208
其实对于变量的类型也很清楚他是

567
00:36:14,464 --> 00:36:16,768
一个好的程序员的一个

568
00:36:17,280 --> 00:36:18,816
一个内功基本功

569
00:36:20,864 --> 00:36:27,008
只有在必要的时候像我要写很长啊那我改用Auto吧要我是你心头其实清楚

570
00:36:27,264 --> 00:36:29,568
如果不使用Auto变量的话

571
00:36:30,336 --> 00:36:31,104
我该怎么去

572
00:36:34,176 --> 00:36:38,528
我这边有一个变形也可以这个auto的加上一个应用

573
00:36:39,552 --> 00:36:41,600
你用了这是另外一种变形

574
00:36:41,856 --> 00:36:48,000
用的话他取出来的每一个元素就都是引用了所以这个例子把本身成

575
00:36:48,256 --> 00:36:49,024
3

576
00:36:49,280 --> 00:36:50,816
才能够再放回

577
00:36:51,072 --> 00:36:55,424
元素本身才会有变化如果你不是拿的是饮用的话

578
00:36:56,192 --> 00:36:57,472
不会变的

579
00:36:57,728 --> 00:37:01,568
一层以上就是你三并不会回到回返的话本身

580
00:37:03,872 --> 00:37:06,176
这个叫range Facebook

581
00:37:07,200 --> 00:37:08,480
很好用的一个东西

582
00:37:11,808 --> 00:37:14,624
对于刚刚说谈到这个关键词

583
00:37:15,904 --> 00:37:18,464
除了刚刚用在这个restful

584
00:37:18,720 --> 00:37:20,256
这个语法上面

585
00:37:20,768 --> 00:37:22,048
也可以这么用

586
00:37:23,072 --> 00:37:24,608
看着第1个方框

587
00:37:24,864 --> 00:37:26,400
我有一个容器

588
00:37:27,424 --> 00:37:32,288
我需要他的iterator所以我在写出浅蓝色这样好

589
00:37:35,360 --> 00:37:39,712
现在有了这个Auto这个关键字能我们可以选择下面这样

590
00:37:41,504 --> 00:37:44,320
这个iterator到底是什么类型呢

591
00:37:45,088 --> 00:37:45,600
吴子

592
00:37:46,112 --> 00:37:47,648
不必写出来了

593
00:37:48,416 --> 00:37:49,440
Moto

594
00:37:50,976 --> 00:37:57,120
因其便到处理由于这边有一个赋值动作他知道又等号的右手边这个是什么东西

595
00:37:57,376 --> 00:37:58,912
收到东西

596
00:37:59,424 --> 00:38:02,240
所以自然而然他就可以帮你推倒数着

597
00:38:02,496 --> 00:38:08,640
左手边刚刚讲的右手边吗他知道是什么所以等他的左手边也必须是哪

598
00:38:08,896 --> 00:38:09,408
东西

599
00:38:09,664 --> 00:38:10,944
会倒出来

600
00:38:14,272 --> 00:38:20,416
我刚刚提过了这个我们还是要很清楚你的每一个变量是什么类型的是为了写作方便

601
00:38:20,672 --> 00:38:21,184
恋上了

602
00:38:21,440 --> 00:38:23,744
我可以适度的使用Auto

603
00:38:28,352 --> 00:38:29,120
好

604
00:38:30,912 --> 00:38:32,192
很快的我们就啊

605
00:38:32,448 --> 00:38:33,472
开始

606
00:38:34,240 --> 00:38:36,800
我说准备了这一个例子

607
00:38:37,568 --> 00:38:43,200
使用所有的容器都用链给各位看并且在其中的用一些算法

608
00:38:43,968 --> 00:38:45,248
我们等下就回来

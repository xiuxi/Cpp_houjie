1
00:00:00,256 --> 00:00:06,400
现在我们来谈源代码

2
00:00:07,936 --> 00:00:09,472
Wework的市场

3
00:00:10,240 --> 00:00:12,288
前面提过还有三个class

4
00:00:12,800 --> 00:00:16,640
我们现在在谈的是最低一级的那个强

5
00:00:18,944 --> 00:00:25,088
这里是这个唱个我总共调了五个函数出来有没有其他的小细节其实我也已经忘了

6
00:00:25,344 --> 00:00:26,368
这个

7
00:00:26,880 --> 00:00:29,952
这是最重要的我们看这五个就够了

8
00:00:32,000 --> 00:00:33,792
第1个是initialization

9
00:00:34,560 --> 00:00:35,584
初始化

10
00:00:36,608 --> 00:00:38,400
要注意现在讲的是

11
00:00:38,656 --> 00:00:40,448
最低阶的那个class

12
00:00:40,960 --> 00:00:42,752
非这个insulation

13
00:00:43,008 --> 00:00:46,848
是被他更上层的那些Class去调用

14
00:00:47,104 --> 00:00:49,664
我们从来不会去这样到达我们应用端

15
00:00:50,176 --> 00:00:56,320
你看在最前面我在示范怎么去使用这个loader locator的时候我们只

16
00:00:56,832 --> 00:01:01,184
创建一个对象然后就调用

17
00:01:01,440 --> 00:01:04,000
这个这个对象这是第3层

18
00:01:04,512 --> 00:01:07,328
那个从底层开始12306 3

19
00:01:08,096 --> 00:01:10,144
然后就该任务分配

20
00:01:10,400 --> 00:01:11,424
我只是

21
00:01:11,680 --> 00:01:13,216
Silicate市场

22
00:01:14,496 --> 00:01:15,776
我们不会怕渠道

23
00:01:16,288 --> 00:01:17,056
养儿

24
00:01:17,312 --> 00:01:19,104
我们只怕渠道3

25
00:01:20,384 --> 00:01:22,176
但是我们现在看的是一

26
00:01:22,944 --> 00:01:25,248
这些还是我们其实不会这样到

27
00:01:25,760 --> 00:01:29,856
这里都有一个初始化的动作做什么事呢

28
00:01:30,624 --> 00:01:31,648
三陪大会

29
00:01:31,904 --> 00:01:38,048
这个呢我们在第1讲个谈过了基础工具通过它里头其实惠等等等等等

30
00:01:38,304 --> 00:01:41,632
最后它会分配到它会调用malloc

31
00:01:42,144 --> 00:01:45,216
所以就没了一块多大一会呢

32
00:01:45,472 --> 00:01:46,496
这个数字

33
00:01:46,752 --> 00:01:49,312
我们在使用的时候有指定

34
00:01:49,568 --> 00:01:50,848
一个唱个多大

35
00:01:52,896 --> 00:01:53,664
就是这个

36
00:01:54,688 --> 00:01:55,456
抱歉了

37
00:01:58,016 --> 00:01:59,040
这个惩罚

38
00:01:59,296 --> 00:02:04,928
你这个唱个多大不是一个区块多大然后总共有几个区块

39
00:02:06,976 --> 00:02:13,120
总共有几个曲目还记得吗我们在我们的例子里面我们指定4096那么大像个蛋

40
00:02:13,376 --> 00:02:14,656
但实际上4080

41
00:02:15,680 --> 00:02:21,824
所以这个他在这个之前要经过处一处调一条最后得到这些

42
00:02:22,080 --> 00:02:22,592
首次

43
00:02:22,848 --> 00:02:24,384
然后呢

44
00:02:25,920 --> 00:02:29,504
没有完事后调用下面这个reset

45
00:02:30,016 --> 00:02:32,320
With that做什么事

46
00:02:32,832 --> 00:02:35,904
卡特三格这三格

47
00:02:36,160 --> 00:02:38,464
就是要来管理这一大块的

48
00:02:39,488 --> 00:02:40,512
把设好

49
00:02:41,280 --> 00:02:42,304
这个指针

50
00:02:42,816 --> 00:02:46,912
这个指针在这里那个指针现在就已经指向头了

51
00:02:47,680 --> 00:02:50,240
然后这里面可以切多少个

52
00:02:51,264 --> 00:02:52,288
在这个地方

53
00:02:52,544 --> 00:02:54,080
切除64个

54
00:02:55,616 --> 00:02:56,896
第1个

55
00:02:57,152 --> 00:03:01,248
最优先要给出去的这是一开始所以当然是0

56
00:03:01,760 --> 00:03:04,576
随着你的动作图形表现出来

57
00:03:05,856 --> 00:03:09,184
完成了之后接下来一个疯了

58
00:03:10,208 --> 00:03:13,536
一个循环做什么事呢我这个东西

59
00:03:15,072 --> 00:03:16,864
把最前面的

60
00:03:17,632 --> 00:03:18,656
一个byte

61
00:03:19,168 --> 00:03:20,960
那个词

62
00:03:21,216 --> 00:03:26,080
被一个byte一个字节拿来帮音sex使用

63
00:03:27,616 --> 00:03:29,664
借他的一个牌子

64
00:03:30,176 --> 00:03:33,504
这个就很像前面的嵌入式指针

65
00:03:33,760 --> 00:03:37,856
完全一样的概念只不过这里是左眼不再是真的

66
00:03:38,624 --> 00:03:40,672
最开始是流水号码

67
00:03:41,952 --> 00:03:43,744
后来又怎么变化

68
00:03:44,000 --> 00:03:46,816
我们前面有谈到他变得好像有点乱七八糟一点

69
00:03:47,328 --> 00:03:49,376
奇怪但是是合理的

70
00:03:49,888 --> 00:03:51,168
那个状态是合理的

71
00:03:51,680 --> 00:03:56,800
他会就要去谈他怎么变化但是一开始是一个流水号码

72
00:03:58,592 --> 00:04:01,152
完成了之后就好了没的

73
00:04:01,408 --> 00:04:02,176
准备好了

74
00:04:03,456 --> 00:04:05,760
这边有一个函数叫如10

75
00:04:07,552 --> 00:04:08,832
谁来调用的呢

76
00:04:09,088 --> 00:04:09,600
是他的

77
00:04:09,856 --> 00:04:16,000
他更上一层这里是第1层有二根三往下调用的

78
00:04:17,536 --> 00:04:20,607
这里头会把自己杀掉的定西

79
00:04:21,119 --> 00:04:23,423
Stata就是这个地方

80
00:04:24,191 --> 00:04:26,239
最后把自己关掉

81
00:04:27,775 --> 00:04:29,823
看到这一个动作我们就安心了

82
00:04:30,335 --> 00:04:31,871
我们一直追求这个动作

83
00:04:32,383 --> 00:04:34,431
权回收之后要还给操作系统

84
00:04:39,039 --> 00:04:39,551
好

85
00:04:40,831 --> 00:04:42,111
三个函数非常小

86
00:04:43,135 --> 00:04:44,927
两个重头戏来了

87
00:04:45,439 --> 00:04:47,231
一个是Locate

88
00:04:47,487 --> 00:04:49,279
It's OK

89
00:04:49,791 --> 00:04:52,351
在刚刚那个三个class

90
00:04:52,607 --> 00:04:53,887
23

91
00:04:54,655 --> 00:05:00,799
我不知道前面去的投影片去了这里1233会点儿201

92
00:05:01,055 --> 00:05:02,079
每一个

93
00:05:02,335 --> 00:05:04,639
Class都有一个allocate

94
00:05:05,151 --> 00:05:05,919
汉

95
00:05:06,175 --> 00:05:09,759
和下一个都会有这么两个

96
00:05:10,015 --> 00:05:10,783
函数

97
00:05:11,551 --> 00:05:14,367
现在我们看的是最低阶的OK

98
00:05:15,647 --> 00:05:18,975
我们在这里就会看到这个索引是怎么变化

99
00:05:21,279 --> 00:05:24,863
假设现在我也是这种情况

100
00:05:25,119 --> 00:05:26,911
501 2367

101
00:05:29,727 --> 00:05:35,871
你不要现在不要问我这个怎么来的因为我现在正要价是从这里电话到这里

102
00:05:36,127 --> 00:05:37,407
懂了这个变化

103
00:05:37,663 --> 00:05:40,991
就是在某种状态之下他就会变成

104
00:05:41,247 --> 00:05:42,527
501 2367

105
00:05:44,319 --> 00:05:47,391
好在现在假设是这个情况

106
00:05:48,415 --> 00:05:51,231
然后这里y解说

107
00:05:51,999 --> 00:05:53,535
我要分配一块内存

108
00:05:54,303 --> 00:05:55,839
我要申请一块内存

109
00:05:56,863 --> 00:05:58,655
这个地方看

110
00:05:58,911 --> 00:06:00,191
这里登记的

111
00:06:01,983 --> 00:06:04,543
优先给逝去的是第4号

112
00:06:05,567 --> 00:06:06,591
那就是这一个了

113
00:06:06,847 --> 00:06:09,151
01234这款

114
00:06:10,431 --> 00:06:16,575
注意红色这个不是指针我前面提过了它只是一个作业这一块

115
00:06:17,087 --> 00:06:18,111
我们看右边的图

116
00:06:19,647 --> 00:06:21,183
给出去会变成灰色

117
00:06:22,463 --> 00:06:24,767
而且这个三人我把它变成一个案

118
00:06:25,023 --> 00:06:26,303
暗淡的颜色

119
00:06:26,559 --> 00:06:32,703
就是给出去之后这个地方可能会吐掉应该不是可能是一定会被涂抹掉

120
00:06:32,959 --> 00:06:34,239
已经无所谓了

121
00:06:36,287 --> 00:06:36,799
OK

122
00:06:37,055 --> 00:06:38,847
我们算出来这个是

123
00:06:39,359 --> 00:06:42,431
这里是01234这个位置

124
00:06:42,943 --> 00:06:44,223
我就知道这个指针

125
00:06:44,479 --> 00:06:46,271
因为我知道起点了

126
00:06:46,527 --> 00:06:50,111
7点家一家2 Plus plus plus

127
00:06:50,623 --> 00:06:53,439
这个指针就是后头要旅客要

128
00:06:54,463 --> 00:06:55,487
要返回的

129
00:06:56,767 --> 00:06:59,071
但是返回之前

130
00:06:59,583 --> 00:07:01,375
我们要把状态改一改

131
00:07:02,399 --> 00:07:03,935
变成右手边

132
00:07:04,191 --> 00:07:05,983
这个64要变成63

133
00:07:07,775 --> 00:07:08,799
这个事呢

134
00:07:10,847 --> 00:07:13,663
在最高优先权限这个已经给出去了

135
00:07:14,175 --> 00:07:16,735
他的下一个被李东西是三

136
00:07:18,527 --> 00:07:21,855
所以这个三这个数字就应该抄到这里来

137
00:07:24,671 --> 00:07:26,975
经过一次分配之后

138
00:07:27,231 --> 00:07:31,839
那个次高优先权的那一块现在变成最高优先权

139
00:07:32,095 --> 00:07:34,143
因为最高优先权已经给出去了

140
00:07:34,911 --> 00:07:36,447
把它被捕上来了

141
00:07:39,007 --> 00:07:41,055
在代码写出来是这样

142
00:07:41,823 --> 00:07:45,151
所做的行为就是这里线条都拉好了

143
00:07:48,735 --> 00:07:53,599
这个索引就从50 1236期县城50 12

144
00:07:53,855 --> 00:07:54,367
67

145
00:08:00,511 --> 00:08:01,791
这就是他用

146
00:08:02,303 --> 00:08:04,607
数组大的链表

147
00:08:04,863 --> 00:08:05,375
用

148
00:08:05,631 --> 00:08:08,191
索引代替指针

149
00:08:09,471 --> 00:08:12,031
的做法就是这样子

150
00:08:13,567 --> 00:08:15,103
写起来也非常简单

151
00:08:16,127 --> 00:08:22,271
那么理解起来了没有人讲解的话你理解不了但是这样克服已经可以让你帮助

152
00:08:22,527 --> 00:08:23,551
伯利兹

153
00:08:28,415 --> 00:08:32,767
这个需要你可能要听歌下来好好的思考好几分钟

154
00:08:34,559 --> 00:08:35,839
他说我要继续下去

155
00:08:38,911 --> 00:08:40,191
这是Locate

156
00:08:41,215 --> 00:08:42,495
Allocate

157
00:08:43,519 --> 00:08:45,311
就更难想象一些

158
00:08:46,079 --> 00:08:49,919
基本上内存管理一个就是分配一个人释放

159
00:08:50,175 --> 00:08:54,527
释放永远比分配困难一点比较难想象一下

160
00:08:55,551 --> 00:09:01,439
这次回收有时候我叫回收有时候要吃饭有时候要归还

161
00:09:01,695 --> 00:09:03,231
这个OK

162
00:09:05,279 --> 00:09:09,631
我现在注意到了这整个名字很长啊为什么呢

163
00:09:10,143 --> 00:09:16,287
因为这个函数是属于这个Class而这个Class是这个Class的inner class

164
00:09:16,543 --> 00:09:17,823
它的内部

165
00:09:18,335 --> 00:09:19,359
内部的一个类

166
00:09:20,639 --> 00:09:22,431
走他他特别认为

167
00:09:22,687 --> 00:09:27,039
这个楼的设计者特别认为这个class

168
00:09:28,319 --> 00:09:32,671
只为他来服务所以他把它设置为它的婴儿

169
00:09:32,927 --> 00:09:33,951
内部的class

170
00:09:34,719 --> 00:09:36,767
你自己写出来呀怎么炒

171
00:09:39,071 --> 00:09:40,863
你说做什么事呢

172
00:09:41,631 --> 00:09:46,495
我们看这个假设现在的index是这种情况

173
00:09:47,007 --> 00:09:48,799
我们先看看合不合理

174
00:09:50,335 --> 00:09:56,479
这里说最高优先权在第3号这里是0123

175
00:09:56,991 --> 00:09:58,527
这个是最高优先权

176
00:09:59,039 --> 00:10:00,319
他的下一个

177
00:10:01,087 --> 00:10:01,599
字号

178
00:10:01,855 --> 00:10:04,415
我用这个曲线帮你拉好了

179
00:10:05,183 --> 00:10:09,535
他的下一个在一号这个带领号下一个在5号

180
00:10:09,791 --> 00:10:13,887
012345

181
00:10:14,399 --> 00:10:15,679
他的下一个人16

182
00:10:16,703 --> 00:10:19,007
说这个状态是正确的

183
00:10:21,311 --> 00:10:23,615
这个状态怎么来的我们现在正在学

184
00:10:24,895 --> 00:10:28,735
这个状态要变右手边是怎么变呢

185
00:10:30,271 --> 00:10:31,807
首先

186
00:10:32,319 --> 00:10:36,159
这一个函数收到一个指针和那个大小

187
00:10:36,671 --> 00:10:40,255
这个指针是落在这一块的头吗

188
00:10:41,023 --> 00:10:42,559
这个要先确定下来

189
00:10:43,583 --> 00:10:44,607
我们看看前面

190
00:10:45,631 --> 00:10:46,911
这些连环图片

191
00:10:47,423 --> 00:10:49,215
这个拉下来

192
00:10:49,983 --> 00:10:51,519
是一个vector

193
00:10:52,031 --> 00:10:56,383
这个下去可能有1万个30000个25百个

194
00:10:57,151 --> 00:11:02,015
我现在还的这一根指针是在哪一个唱个里头要先确定

195
00:11:03,295 --> 00:11:04,063
怎么确定

196
00:11:06,879 --> 00:11:08,671
没问题用假发吧

197
00:11:09,439 --> 00:11:10,719
郑每一个唱歌

198
00:11:10,975 --> 00:11:12,511
都有起点

199
00:11:13,535 --> 00:11:15,583
也都知道长度

200
00:11:16,863 --> 00:11:18,655
这边长度不一定会一样

201
00:11:19,167 --> 00:11:20,703
但是都有被记录下来

202
00:11:21,983 --> 00:11:24,799
都知道起点好11甲杀

203
00:11:26,079 --> 00:11:29,151
这个动作跟malloc系统是一样的还记得吗

204
00:11:29,663 --> 00:11:35,551
他指针有没有在这里呢看看他是不是在这个起点跟这个长度之间

205
00:11:35,807 --> 00:11:37,343
不是的话换下一个

206
00:11:38,623 --> 00:11:39,903
有没有比较好的

207
00:11:40,159 --> 00:11:42,975
着白是一个11的寻找呢

208
00:11:45,023 --> 00:11:46,047
没有

209
00:11:46,303 --> 00:11:48,095
没有比较好的找法

210
00:11:48,863 --> 00:11:55,007
在这个设计上把它想得很简单就循序的就走其实也够快

211
00:11:55,519 --> 00:11:57,567
这个这个vector下去

212
00:11:59,103 --> 00:12:04,223
就算是给王的那个那个那个电脑运行速度也是非常非常快

213
00:12:06,271 --> 00:12:12,415
好等到你终于确认识落在这个指针是多在哪一个唱个字

214
00:12:12,671 --> 00:12:13,183
中

215
00:12:13,439 --> 00:12:14,719
支那的时候

216
00:12:15,743 --> 00:12:17,535
才会进入到

217
00:12:19,327 --> 00:12:21,119
现在要谈的

218
00:12:21,375 --> 00:12:23,679
呛咳的这个Kate

219
00:12:24,191 --> 00:12:25,471
才会进到这个函数

220
00:12:26,495 --> 00:12:30,079
已经确定这个职责是落在这里

221
00:12:31,871 --> 00:12:33,151
但是它是落在

222
00:12:33,663 --> 00:12:35,199
一会上面呢

223
00:12:36,223 --> 00:12:39,807
在现在要还的出入那这个指针在这里

224
00:12:40,319 --> 00:12:42,111
他到底是第几块呢

225
00:12:43,391 --> 00:12:44,927
这个也非常容易

226
00:12:45,439 --> 00:12:46,719
把这个指针

227
00:12:47,231 --> 00:12:48,511
剪掉头

228
00:12:49,279 --> 00:12:51,583
再去处理每一块的大小

229
00:12:52,351 --> 00:12:54,911
每一块的大小是有被记录下来的

230
00:12:56,703 --> 00:12:57,215
所以

231
00:12:57,471 --> 00:13:01,055
你这个图来看这个指针剪头处一处

232
00:13:01,311 --> 00:13:02,079
这就是

233
00:13:03,103 --> 00:13:04,639
01234

234
00:13:04,895 --> 00:13:06,175
被调到4

235
00:13:07,967 --> 00:13:09,759
这个除了动作还是上面有

236
00:13:11,039 --> 00:13:17,183
我在这些图里面都会有这个number的符号这个动作你可以去看14号

237
00:13:17,951 --> 00:13:21,279
这些动作你可以去看第7行跟的发行

238
00:13:21,791 --> 00:13:24,607
帮助你更容易的比对这个源代码

239
00:13:25,631 --> 00:13:31,263
水刚刚谈的这个简比后项除了动作就是这里看出瑞丽

240
00:13:32,287 --> 00:13:34,079
剪掉pdata

241
00:13:35,103 --> 00:13:36,127
讲个头啊

242
00:13:36,895 --> 00:13:37,663
请掉头

243
00:13:38,175 --> 00:13:40,223
剪完之后处理

244
00:13:41,503 --> 00:13:42,783
就知道

245
00:13:43,295 --> 00:13:46,623
现在要回收视的机会

246
00:13:48,927 --> 00:13:51,487
这个的机会

247
00:13:53,023 --> 00:13:57,887
在这个系统里面就把它当成接下来的最高优先权

248
00:13:59,935 --> 00:14:06,079
这个概念很像在单向链表里面我们要把一个元素回收我们都是放到

249
00:14:06,335 --> 00:14:07,103
喉的地方

250
00:14:08,895 --> 00:14:09,919
换个跑步

251
00:14:10,175 --> 00:14:12,991
我们班上那表就一个指针指向同步

252
00:14:13,759 --> 00:14:15,807
在放倒头部是最简单的动作

253
00:14:16,063 --> 00:14:17,343
这里也是一样

254
00:14:17,855 --> 00:14:22,719
放回来之后他就会成为下一次的最高优先权

255
00:14:22,975 --> 00:14:24,255
那就等一下头部

256
00:14:26,047 --> 00:14:26,559
所以

257
00:14:27,071 --> 00:14:27,839
这个

258
00:14:28,095 --> 00:14:31,167
变成右边的他将要变成最高优先权

259
00:14:31,423 --> 00:14:31,935
哈

260
00:14:32,447 --> 00:14:34,239
他是几号四号

261
00:14:34,495 --> 00:14:39,615
刚刚射出来是四号这个是这个值就要被甜到这里了

262
00:14:44,223 --> 00:14:47,807
而原先的最高优先权是三号

263
00:14:48,319 --> 00:14:48,831
这里

264
00:14:51,135 --> 00:14:54,719
3号3号就要变成4高优先权

265
00:14:54,975 --> 00:14:57,791
它被挤挤推一个位置

266
00:14:58,815 --> 00:15:02,143
所以原先的最高优先权是三号

267
00:15:03,167 --> 00:15:06,495
就应该变成这个现在这

268
00:15:07,007 --> 00:15:08,031
数字这里

269
00:15:11,359 --> 00:15:15,967
最高优先显现在是四号了24号的下一个

270
00:15:16,223 --> 00:15:18,527
这是原本的最高优先权

271
00:15:19,551 --> 00:15:21,343
要把这个词呢

272
00:15:21,599 --> 00:15:24,159
找到这里来我这边发了谢谢

273
00:15:24,671 --> 00:15:25,951
箭头了

274
00:15:30,303 --> 00:15:33,631
而且既然回收了一个这个开头要加一

275
00:15:36,191 --> 00:15:41,055
这就是OK的从左边到右边回收的说的故事

276
00:15:41,823 --> 00:15:45,919
原来是这么的简单呢原来本来很难想象的

277
00:15:46,175 --> 00:15:50,271
这些所以说看起来乱七八糟原来是这样形成的

278
00:15:52,319 --> 00:15:55,903
非常非常有趣的一种实现方式

279
00:15:56,671 --> 00:15:57,439
我想

280
00:15:58,207 --> 00:15:59,999
真夜晚上夜

281
00:16:00,255 --> 00:16:02,559
你可以停下来85分钟

282
00:16:03,071 --> 00:16:04,607
好好地去体会

283
00:16:09,215 --> 00:16:12,543
所谓大道不过三两行

284
00:16:12,799 --> 00:16:14,847
说穿不值一文钱

285
00:16:15,359 --> 00:16:18,431
就是这样的这里最好的性格形象形容啊

286
00:16:19,455 --> 00:16:20,479
Trump

287
00:16:23,551 --> 00:16:27,647
这是他最低阶的我们从下面123三个小时

288
00:16:27,903 --> 00:16:30,975
最解决的最下面这个考试之后

289
00:16:31,487 --> 00:16:34,815
接下去我们要看的就是第2级的

290
00:16:35,327 --> 00:16:37,375
123中间那层

291
00:16:37,887 --> 00:16:39,679
Fix allocator

292
00:16:40,191 --> 00:16:45,311
它也有一个allocate函数和一个老K的函数

293
00:16:45,567 --> 00:16:48,127
我们接下来就要看这一段

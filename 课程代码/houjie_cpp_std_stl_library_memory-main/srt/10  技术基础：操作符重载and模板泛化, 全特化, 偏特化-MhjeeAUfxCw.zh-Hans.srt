1
00:00:06,912 --> 00:00:09,472
还能减少的是gplp的

2
00:00:09,728 --> 00:00:11,264
表现的不同

3
00:00:12,544 --> 00:00:14,592
接下来我们开始要看

4
00:00:15,872 --> 00:00:16,640
源代码了

5
00:00:17,152 --> 00:00:20,992
从源代码的部分来解析整个体系结构

6
00:00:21,248 --> 00:00:27,392
那么观察这些源代码呢我认为有点可惜这个基础是重要的

7
00:00:27,648 --> 00:00:31,488
第1个你要对于操作符重载

8
00:00:31,744 --> 00:00:36,096
因为这个13的出现要对于这种语法有越手细越好

9
00:00:36,352 --> 00:00:41,216
一个就是模板因为整个标准库都是用模板做出来的

10
00:00:41,728 --> 00:00:44,288
我现在很快的呗你看一下这两个

11
00:00:44,544 --> 00:00:46,080
我认为必要的基础

12
00:00:47,872 --> 00:00:48,896
操作符重载

13
00:00:49,408 --> 00:00:55,552
这个是这样的是我在上上是第1讲里面的我介绍过三个网页网站

14
00:00:56,832 --> 00:00:59,136
我认为对于编程很有帮助

15
00:01:00,416 --> 00:01:01,440
这个某一个

16
00:01:02,976 --> 00:01:09,120
你你当然可能也有你习惯的一些辅助的网站the world

17
00:01:09,376 --> 00:01:14,752
你觉得找到相关的我们就可以根据这一些规则来解释

18
00:01:15,776 --> 00:01:21,920
我找到了有这样子整理得非常好我现在并不是要带着你去看这里头该怎么弄音

19
00:01:22,176 --> 00:01:23,712
因为这是属于语言的

20
00:01:23,968 --> 00:01:25,504
我认为你需要的基础

21
00:01:26,272 --> 00:01:29,600
只告诉你很容易找到这些帮助的东西

22
00:01:30,880 --> 00:01:31,648
能报

23
00:01:32,160 --> 00:01:33,184
我看下一页

24
00:01:33,952 --> 00:01:40,096
我找到了这些资料里面的另外又告诉我说除了那些规则之外面也告诉我

25
00:01:40,608 --> 00:01:44,704
有四个操作符是不能够被重载也就是被你重新定义的

26
00:01:45,216 --> 00:01:46,240
这个双冒号

27
00:01:47,264 --> 00:01:51,104
班冒号2点

28
00:01:51,360 --> 00:01:53,152
还有这个点看星号

29
00:01:53,408 --> 00:01:55,200
还有这一个帽子

30
00:01:56,736 --> 00:02:02,880
问号跟2号就是这个是个被我用红色圈强东西是什么人

31
00:02:04,928 --> 00:02:05,952
我记得下来吗

32
00:02:06,720 --> 00:02:07,744
我记不下来

33
00:02:08,000 --> 00:02:12,352
怎么有人会记得当我们需要去写的时候这个

34
00:02:12,864 --> 00:02:14,400
资料找出来看一看

35
00:02:14,912 --> 00:02:17,728
因为人事变好友说这四个操作符

36
00:02:17,984 --> 00:02:18,752
三个

37
00:02:20,288 --> 00:02:23,104
等等等都有一些规则

38
00:02:24,896 --> 00:02:26,432
这个是操作符重载

39
00:02:27,968 --> 00:02:29,760
那么操作服那有氛围

40
00:02:30,528 --> 00:02:32,576
有作家家爱这个字

41
00:02:32,832 --> 00:02:33,856
一个操作数

42
00:02:34,624 --> 00:02:36,928
埃家家能这也是一个操作数

43
00:02:37,440 --> 00:02:40,000
一家比这个家的两个操作数

44
00:02:41,792 --> 00:02:43,072
等等等

45
00:02:44,864 --> 00:02:47,424
回到上个月来这一个表格

46
00:02:47,680 --> 00:02:49,984
就会告诉你如果是一个操作数的

47
00:02:50,752 --> 00:02:52,288
只是两个操作数的

48
00:02:53,312 --> 00:02:56,128
该怎么去写他的形式怎么样

49
00:02:57,152 --> 00:03:02,016
那么操作符重载那可能写成一个全局的函数

50
00:03:02,528 --> 00:03:07,136
可能写成一个成员函数在那里头的一个成员函数

51
00:03:07,392 --> 00:03:10,720
这边都有列出来哪一些可以拿一些不可以

52
00:03:14,816 --> 00:03:16,096
举个例子

53
00:03:18,656 --> 00:03:20,448
现在看到了这一个人带吗

54
00:03:20,960 --> 00:03:23,264
这个名字叫做listiterator

55
00:03:24,032 --> 00:03:25,312
就是链表

56
00:03:25,824 --> 00:03:26,848
所提供的

57
00:03:27,360 --> 00:03:30,176
别大气他得知这个类它是怎么设计呢

58
00:03:30,688 --> 00:03:32,224
我们现在重点要看的是

59
00:03:32,480 --> 00:03:35,040
他一定会去重载这些东西

60
00:03:36,320 --> 00:03:37,088
型号

61
00:03:37,344 --> 00:03:41,952
因为iterator代表的就是一个泛化的指针

62
00:03:42,208 --> 00:03:48,096
指针式可以结尾用的流量提取提取数据

63
00:03:48,608 --> 00:03:50,400
所以他必须重返这个

64
00:03:50,912 --> 00:03:56,800
至于怎么重载这不是现在这也要讲的形式这个只要介绍他的形式

65
00:03:59,360 --> 00:04:03,456
那么指针还有什么了指针所具备的功能

66
00:04:04,224 --> 00:04:08,576
你在cplusplus语言里面会对指针做的所有动作

67
00:04:08,832 --> 00:04:11,392
这个iterator不要把它重新定义一遍

68
00:04:12,160 --> 00:04:14,976
因为他的身份就像一个指针

69
00:04:15,488 --> 00:04:17,536
所以他必须具备这些操作符

70
00:04:18,815 --> 00:04:19,839
这里有点点点

71
00:04:20,863 --> 00:04:22,911
不是只有这四个还有很多

72
00:04:26,495 --> 00:04:29,055
这个是我认为后面要看

73
00:04:29,311 --> 00:04:33,919
标准库的源代码的时候呢这个操作符重载的基础非常重要

74
00:04:41,599 --> 00:04:44,927
第2个基础

75
00:04:46,719 --> 00:04:47,999
无法非常简单

76
00:04:49,535 --> 00:04:50,303
举这个例子

77
00:04:52,607 --> 00:04:54,143
我现在设置一个复数

78
00:04:55,167 --> 00:04:57,215
复数的数据有什么呢

79
00:04:57,983 --> 00:04:59,263
吃不必须不

80
00:05:02,335 --> 00:05:03,615
在最初的

81
00:05:04,127 --> 00:05:10,271
没有模板概念之下的想法是我设计一个复数的实部虚部就要决定了

82
00:05:10,783 --> 00:05:11,807
我要用手术

83
00:05:12,319 --> 00:05:13,599
还是用浮点数

84
00:05:14,367 --> 00:05:19,743
家用long as sharp as an integer我都得写出来

85
00:05:22,047 --> 00:05:26,911
但是现在有了模板之后呢我们可以把这一部分先保留

86
00:05:27,167 --> 00:05:28,191
不想这样子啊

87
00:05:28,703 --> 00:05:29,215
负数

88
00:05:29,983 --> 00:05:32,031
这个10步20步

89
00:05:32,287 --> 00:05:34,591
它到底是什么类型呢

90
00:05:36,127 --> 00:05:37,151
我把它保留

91
00:05:37,407 --> 00:05:41,503
我暂时我在设计的时候不想把定下了我先回去

92
00:05:42,271 --> 00:05:47,391
你想也可以写也可以写什么都可以这是一个符号符号

93
00:05:48,415 --> 00:05:52,511
但是通常会用的大家习惯为用题因为替代表态

94
00:05:53,023 --> 00:05:53,535
Test

95
00:05:55,583 --> 00:06:01,727
但有了这个体之后呢我我设计者必须告诉编译器说这个体系是是汗

96
00:06:01,983 --> 00:06:02,751
未定的

97
00:06:03,775 --> 00:06:05,823
所以我们在上面就像这样

98
00:06:06,591 --> 00:06:08,639
Template是个关键字

99
00:06:09,151 --> 00:06:14,783
尖括号里面说这个屁呀是一个什么是一个他的关键词

100
00:06:15,807 --> 00:06:18,111
讲编辑就知道期未定

101
00:06:18,367 --> 00:06:19,391
只是一个符号

102
00:06:19,647 --> 00:06:25,791
然后是一个负数里头所有用到实部虚部这个类型的地方红彤彤

103
00:06:26,047 --> 00:06:26,815
我要改为t

104
00:06:28,607 --> 00:06:29,887
这就形成了一个

105
00:06:30,911 --> 00:06:36,799
他本来是各类现在就形成一个类模板或将模板类都可以都有人说

106
00:06:38,079 --> 00:06:38,847
就是这么简单

107
00:06:42,431 --> 00:06:45,759
像这样的一个模板要怎么去用它

108
00:06:46,271 --> 00:06:52,415
你在用的时候你就得告诉告诉这个兵器说我现在提要

109
00:06:52,671 --> 00:06:53,695
替换为什么

110
00:06:54,463 --> 00:06:55,743
所以这就是用法

111
00:06:58,303 --> 00:07:01,887
我们必须再选使用这个context的时候

112
00:07:02,655 --> 00:07:05,727
用尖括号明白的告诉编译器

113
00:07:05,983 --> 00:07:09,567
我现在那个时不需不都是打手

114
00:07:10,847 --> 00:07:14,687
或者在下一行我这个死不屈不是

115
00:07:16,223 --> 00:07:17,759
上面就是

116
00:07:18,271 --> 00:07:23,647
为模板的样子下面就是类模板的使用方式

117
00:07:27,487 --> 00:07:32,351
那么其他还有一些细节就我们这里就不提了我只是利用很短的时间

118
00:07:32,607 --> 00:07:37,471
让大家算是复习一下模板的语法或者是说让你

119
00:07:37,727 --> 00:07:41,311
把这个暂停赶快去看一下模仿方面的步枪里的

120
00:07:41,567 --> 00:07:43,103
你的知识

121
00:07:44,127 --> 00:07:45,663
有一些书籍

122
00:07:46,175 --> 00:07:52,319
会谈到专门的他模板的比如说这里就是本书主要是一家家templates模板讲的非常

123
00:07:52,575 --> 00:07:58,207
非常详细但是你只要掌握这样的一个基本观念的你就可以看

124
00:07:58,463 --> 00:07:59,231
在吗

125
00:07:59,487 --> 00:08:02,303
标准不了源代码大概就没有问题了

126
00:08:05,631 --> 00:08:10,495
模板分为三大类一大类就是类模板这个

127
00:08:12,799 --> 00:08:16,383
我们看第2大类函数模板

128
00:08:18,175 --> 00:08:19,711
什么是函数模板呢

129
00:08:19,967 --> 00:08:20,735
是没有一个例子

130
00:08:23,295 --> 00:08:27,391
密码我刚才看过它的源代码现在又抄一遍

131
00:08:29,439 --> 00:08:30,463
你你妈

132
00:08:30,719 --> 00:08:33,023
本来比大小的是比如说

133
00:08:33,791 --> 00:08:37,631
谁都会写啊写一个密码的传进两个整数

134
00:08:38,399 --> 00:08:39,935
两张数比大小

135
00:08:40,703 --> 00:08:43,263
我单纯金两个弄两个都比他小

136
00:08:44,031 --> 00:08:50,175
但是现在这个学法更泛化简单的program analysis and话的意思

137
00:08:51,455 --> 00:08:55,295
怎么样呢穿起来是什么态度和所谓

138
00:08:55,807 --> 00:08:57,599
我是一个暂定的key

139
00:09:00,927 --> 00:09:03,999
为了让编译器知道我这个题是暂定的

140
00:09:04,255 --> 00:09:10,399
你遍历是说要让我通过所以在最上面这样要加上一个template牵挂好看

141
00:09:11,935 --> 00:09:13,471
注意到

142
00:09:14,495 --> 00:09:17,055
刚刚四个地方是它的name

143
00:09:18,847 --> 00:09:20,639
现在这个地方是class

144
00:09:21,407 --> 00:09:22,431
无所谓

145
00:09:24,223 --> 00:09:27,807
用他的脸当然更形象一些表示这是一个

146
00:09:28,063 --> 00:09:28,831
Taptap

147
00:09:29,343 --> 00:09:34,463
他是早期了大家喜欢用Class就是工人是完全相同的

148
00:09:36,511 --> 00:09:38,559
好在这个秘密吗

149
00:09:38,815 --> 00:09:44,959
这样子设计接受的一根鼻是什么泰国目前不知道无所谓

150
00:09:45,215 --> 00:09:48,287
FB要怎么比大小的就用这个符号来

151
00:09:51,103 --> 00:09:52,383
这样写好之后

152
00:09:52,895 --> 00:09:55,199
左手边这个是使用的方式

153
00:09:56,735 --> 00:09:58,015
如果我

154
00:09:58,271 --> 00:10:00,063
设计一个Class叫石洞

155
00:10:02,367 --> 00:10:06,719
我现在有两个是两个石头我要传进去比大小

156
00:10:08,511 --> 00:10:11,839
编译器看到你调用的是m i n密码

157
00:10:12,095 --> 00:10:13,375
他就会去找

158
00:10:14,143 --> 00:10:18,495
他找到了你确实定义的这一个模板函数

159
00:10:18,751 --> 00:10:19,775
函数模板

160
00:10:20,799 --> 00:10:23,871
于是编译器会做一个很棒的事情

161
00:10:24,639 --> 00:10:25,407
把这个

162
00:10:25,663 --> 00:10:28,991
你调用的时候呢你放进去的这是什么

163
00:10:29,247 --> 00:10:30,783
R1 R2是什么呢

164
00:10:31,039 --> 00:10:33,087
Win7知道这是两个石头

165
00:10:34,367 --> 00:10:35,903
于是他会做

166
00:10:36,159 --> 00:10:39,231
持仓的推导

167
00:10:39,999 --> 00:10:42,815
他就会把右边这个体

168
00:10:43,071 --> 00:10:44,863
推导出来为什么呢

169
00:10:45,119 --> 00:10:45,887
Facebook

170
00:10:48,447 --> 00:10:54,335
这是很棒的事情你不需要告诉编译器说我现在的请你帮我调用的事

171
00:10:54,591 --> 00:10:56,639
石头那个版本的mini吗

172
00:10:57,151 --> 00:10:59,967
不用因为编译器它能够推到

173
00:11:01,503 --> 00:11:04,575
推出来之后这个七

174
00:11:06,879 --> 00:11:07,647
这个的

175
00:11:08,415 --> 00:11:09,695
就是

176
00:11:10,975 --> 00:11:14,047
因此他的头在比大小的时候

177
00:11:16,351 --> 00:11:19,167
他自己当然不知道是头怎么比大小

178
00:11:20,191 --> 00:11:23,775
他就会去看看宋有没有做操作符重载

179
00:11:24,031 --> 00:11:24,799
这个小

180
00:11:26,079 --> 00:11:28,127
因为操作符重载的规则是这样的

181
00:11:28,895 --> 00:11:32,479
这个小鱼呢会作用在左手边身上

182
00:11:32,735 --> 00:11:34,015
左手边是一个Store

183
00:11:34,527 --> 00:11:37,087
所以去找便需继续去找找到了

184
00:11:37,343 --> 00:11:38,367
这个这里

185
00:11:38,623 --> 00:11:39,391
宋

186
00:11:40,159 --> 00:11:42,463
确实有写这么一个操作符

187
00:11:43,743 --> 00:11:48,863
好太好了那天气就跑到这里来看看哦怎么样来比大小啊

188
00:11:49,631 --> 00:11:52,703
在这个例子里面去拿石头的重量还比他小

189
00:11:55,263 --> 00:11:59,359
这是石头自己去定义的石头设计师徒的人确定你的事情

190
00:12:00,639 --> 00:12:04,223
这个就是模板函数的函数模板

191
00:12:06,015 --> 00:12:07,039
所以

192
00:12:08,063 --> 00:12:14,207
丁当的类模板一样这里的函数那么这两个一样的就是把它里面的一些类型type

193
00:12:15,743 --> 00:12:18,303
暂定为一个符号而不行

194
00:12:19,327 --> 00:12:21,119
等到真正使用的时候

195
00:12:22,399 --> 00:12:23,679
才去把它

196
00:12:23,935 --> 00:12:24,959
确定下来

197
00:12:25,215 --> 00:12:27,007
这个就叫做我吧

198
00:12:31,103 --> 00:12:32,383
那为什么

199
00:12:33,919 --> 00:12:36,223
在函数模板使用的时候

200
00:12:36,479 --> 00:12:41,087
不需要用尖括号去写出来我现在要用的是送这个版本

201
00:12:41,343 --> 00:12:47,487
不需要因为有时间推到那为什么刚刚那个类模板就一定要用尖括号

202
00:12:47,743 --> 00:12:48,511
写出来呢

203
00:12:50,303 --> 00:12:56,447
因为你不写出来的话他没有任何线索编译器没有任何线索

204
00:12:56,703 --> 00:12:59,519
知道你到底现在想用了这一个

205
00:13:00,287 --> 00:13:05,407
是哪一个版本这个体到底是要锁定绑定为什么的不知道

206
00:13:07,967 --> 00:13:14,111
这个人在那模板这一页已经下一页这个函数模板在使用

207
00:13:14,367 --> 00:13:15,135
用的时候

208
00:13:15,647 --> 00:13:17,183
形式上有一点不同

209
00:13:21,535 --> 00:13:27,679
模板的第3个大分类叫做member comprises成员模板

210
00:13:28,191 --> 00:13:32,543
这一部分的你看我这也是空白的我只是告诉你这个东西

211
00:13:33,055 --> 00:13:33,823
S10

212
00:13:35,103 --> 00:13:41,247
一角稍微概念上复杂一些对于现在我要接下去讲了带着大家来看

213
00:13:41,503 --> 00:13:46,111
按这个标准库源代码的我们不会看到这个目前不会看到这个所以

214
00:13:46,879 --> 00:13:48,415
一夜我就算去讲了

215
00:13:53,279 --> 00:13:56,095
最无版的语法

216
00:13:56,351 --> 00:14:02,239
追踪起来都非常的简单我们现在追踪源代码非常简单的事情

217
00:14:03,263 --> 00:14:05,567
那么在人类模板这边的

218
00:14:06,847 --> 00:14:11,199
又有一个独特的小东西叫做饭华语和华

219
00:14:12,991 --> 00:14:16,063
GP这个泛型编程较泛化

220
00:14:16,575 --> 00:14:20,927
所以刚刚提的一个类模板里面的那个78写的题

221
00:14:21,439 --> 00:14:24,767
它是允许你绑定为任何东西

222
00:14:26,303 --> 00:14:28,351
可是通常在我们的设计

223
00:14:28,863 --> 00:14:31,935
类模板的时候我们会有这样的想法

224
00:14:32,703 --> 00:14:35,519
不可能设计出一个非常繁华的版本

225
00:14:37,567 --> 00:14:39,615
接受任何指定的

226
00:14:41,663 --> 00:14:42,175
Hi

227
00:14:43,199 --> 00:14:45,503
我有一个最繁华的做法

228
00:14:47,039 --> 00:14:49,343
但设计者我又想到说

229
00:14:50,111 --> 00:14:53,951
如果你指定的那个体是某一个type

230
00:14:54,207 --> 00:14:57,791
这个独特的type我有另外一种

231
00:14:58,303 --> 00:14:59,583
更棒的做法

232
00:15:01,887 --> 00:15:04,703
在现实生活生活中我们常常会遇到这种事情

233
00:15:05,983 --> 00:15:07,263
这样的话的

234
00:15:07,519 --> 00:15:13,663
我想要更棒的写出一个专属的独特的做法这个该怎么办现在家有没有给我

235
00:15:13,919 --> 00:15:14,687
我这种语法呢

236
00:15:14,943 --> 00:15:16,479
给我这种

237
00:15:17,247 --> 00:15:18,527
方是让我写的

238
00:15:19,295 --> 00:15:20,831
举一个例子

239
00:15:21,599 --> 00:15:26,207
反正你在大三大四的你可能会修过这个计算机读写

240
00:15:26,719 --> 00:15:27,231
绘图

241
00:15:28,255 --> 00:15:34,399
最简单的人你要在屏幕上面画一条线一条直线直线的方程式我们在国

242
00:15:34,655 --> 00:15:35,167
国中

243
00:15:35,679 --> 00:15:36,703
初中都学过了

244
00:15:37,471 --> 00:15:38,751
那是一个实数

245
00:15:39,775 --> 00:15:44,639
X y两点之间画一条线那你会算出这之间的

246
00:15:44,895 --> 00:15:46,431
从每一个点到这个

247
00:15:46,943 --> 00:15:48,223
起诉

248
00:15:49,503 --> 00:15:51,039
可是屏幕上的人

249
00:15:51,807 --> 00:15:53,599
它是Pixel是

250
00:15:53,855 --> 00:15:55,135
华塑橡塑

251
00:15:55,903 --> 00:16:00,255
可能只有1280

252
00:16:00,511 --> 00:16:01,791
高只有768

253
00:16:02,303 --> 00:16:04,351
这么多个点所形成的一个

254
00:16:05,119 --> 00:16:05,887
节目

255
00:16:07,423 --> 00:16:13,567
所以你要在这个屏幕里面的X和y这两点之间画图它其实是锯齿状的

256
00:16:14,591 --> 00:16:19,455
你把它放大看它是锯齿状它的一点一点一点化看看起来像一条直线

257
00:16:20,479 --> 00:16:24,831
我们就可以用这种例子来表现出刚刚说什么办法根特话

258
00:16:26,879 --> 00:16:29,183
你真正的数学上的方程式

259
00:16:29,439 --> 00:16:30,207
泛华

260
00:16:31,487 --> 00:16:33,791
20应用到电脑绘图的功能

261
00:16:34,559 --> 00:16:37,375
它的每一个点的x y坐标都是整数

262
00:16:38,143 --> 00:16:39,167
特化

263
00:16:40,703 --> 00:16:41,727
就有

264
00:16:41,983 --> 00:16:43,519
这个计算机科学家

265
00:16:43,775 --> 00:16:44,799
WeChat

266
00:16:45,567 --> 00:16:47,359
他就发明了

267
00:16:47,615 --> 00:16:50,431
创造了一个算法作如果这个

268
00:16:51,455 --> 00:16:57,343
坐标x y坐标都是整数的话他有一个画直线的方式会非常非常快

269
00:16:58,623 --> 00:17:00,159
这是一个特化的版本

270
00:17:00,927 --> 00:17:06,559
我们可以这样想象所以这个在现实生活中是普遍素质很可能存在的

271
00:17:08,095 --> 00:17:09,887
要不来看看6Plus

272
00:17:10,143 --> 00:17:12,703
也允许我们在范华春

273
00:17:13,215 --> 00:17:17,055
播放花之外写刻画的版本语法是怎么样的

274
00:17:19,359 --> 00:17:20,383
我们来看看这个

275
00:17:21,407 --> 00:17:24,479
现在的这个例子本身在做什么事

276
00:17:24,991 --> 00:17:25,759
你可以

277
00:17:27,807 --> 00:17:30,111
在乎我我也没有去讲它

278
00:17:30,367 --> 00:17:31,647
因为这部分叫做

279
00:17:31,903 --> 00:17:33,183
Tetris

280
00:17:33,439 --> 00:17:34,975
袜子是很大的一个询问

281
00:17:35,487 --> 00:17:38,047
我只是要拿它在

282
00:17:39,071 --> 00:17:42,399
源代码里面的形式用它来表现

283
00:17:42,655 --> 00:17:45,215
策划这种子家长与法

284
00:17:47,007 --> 00:17:48,543
好看

285
00:17:49,311 --> 00:17:51,871
在标准库里面的有这么一个class

286
00:17:52,127 --> 00:17:58,271
这里面是双Jordan sb.with相等的他只有一点点小差别我现在就不去

287
00:17:58,527 --> 00:17:59,551
给他了

288
00:18:01,343 --> 00:18:02,879
所以这就是一个类模板

289
00:18:05,183 --> 00:18:06,207
这是泛化

290
00:18:07,999 --> 00:18:09,791
那么下面这两个策划

291
00:18:10,047 --> 00:18:11,583
语法上有什么差别呢

292
00:18:11,839 --> 00:18:13,119
下面这个事

293
00:18:13,375 --> 00:18:15,423
如果指定的是

294
00:18:15,679 --> 00:18:18,239
Int的话我有一个特别版本

295
00:18:18,751 --> 00:18:23,103
等下面这个事如果指定的是double我又有一个特别的版本

296
00:18:23,871 --> 00:18:25,151
整个语法了

297
00:18:27,455 --> 00:18:28,991
这个语法是这样

298
00:18:29,759 --> 00:18:32,319
由于这个泛化的这个体

299
00:18:33,087 --> 00:18:35,391
已经被绑定问题了

300
00:18:35,903 --> 00:18:38,463
这里要写出来像这样写出来

301
00:18:39,999 --> 00:18:42,303
而由于它已经被抽出来了

302
00:18:42,559 --> 00:18:44,607
所以这个地方的就变成空的

303
00:18:45,375 --> 00:18:46,655
这个这个地方

304
00:18:48,447 --> 00:18:51,775
这样就是一个特化的语法形式

305
00:18:53,823 --> 00:18:55,103
相对于繁华

306
00:18:55,359 --> 00:18:58,175
作为再看一次就这一个他这个

307
00:18:58,687 --> 00:19:01,247
前面使用大体来表现的这个东西

308
00:19:02,015 --> 00:19:03,807
他被绑定为

309
00:19:04,063 --> 00:19:04,831
Int

310
00:19:05,855 --> 00:19:10,207
而他已经被抽出来了所以他就变空了这里就是空

311
00:19:12,255 --> 00:19:15,071
这样子是一个刻画的形式

312
00:19:19,679 --> 00:19:21,471
像这样的东西怎么用呢

313
00:19:22,495 --> 00:19:23,775
我看这个地方

314
00:19:24,799 --> 00:19:27,103
如果我选择这一个类模板

315
00:19:28,383 --> 00:19:30,943
并且我指定我这个Class交付

316
00:19:32,479 --> 00:19:33,247
富

317
00:19:34,527 --> 00:19:35,039
是

318
00:19:35,807 --> 00:19:38,623
可以被他接受对不对他是范华版本

319
00:19:39,903 --> 00:19:40,671
富

320
00:19:40,927 --> 00:19:45,791
并不是走束缚也不是他不所以这一行

321
00:19:46,559 --> 00:19:47,839
进入这个地方

322
00:19:48,607 --> 00:19:50,399
使用这个

323
00:19:53,215 --> 00:19:56,287
如果我选择streets

324
00:19:56,543 --> 00:20:01,663
我先挂号街坊市还能提货怎么尖括号里面放的是double

325
00:20:01,919 --> 00:20:03,455
那么就分别会用到

326
00:20:03,711 --> 00:20:04,479
这

327
00:20:04,735 --> 00:20:06,783
定义或者是这一个

328
00:20:09,343 --> 00:20:11,135
这个是刻画的形式

329
00:20:15,231 --> 00:20:16,511
再看另外一个例子

330
00:20:18,047 --> 00:20:20,095
我都是选标准库里投的

331
00:20:20,607 --> 00:20:23,167
源代码做例子更有说服力

332
00:20:24,703 --> 00:20:26,239
这边有一个叫hash

333
00:20:27,775 --> 00:20:33,663
既然他是hash想必是跟哈希表的那个有关没错这一部分正是他的表那边

334
00:20:33,919 --> 00:20:36,223
反列表那边的一些

335
00:20:36,479 --> 00:20:37,247
源代码

336
00:20:38,527 --> 00:20:40,063
这个合适呢

337
00:20:40,831 --> 00:20:42,623
他也是一个类模板

338
00:20:43,903 --> 00:20:45,695
等Class相同地位

339
00:20:46,207 --> 00:20:47,999
那我吧

340
00:20:50,047 --> 00:20:51,327
它的定义是空

341
00:20:51,839 --> 00:20:56,191
为什么东西是空这个不是我们现在要关系的反正这是一个类模板

342
00:20:57,983 --> 00:21:04,127
然后在源代码里面的又出现了这么多是些东西1234567跟还有八九十

343
00:21:04,383 --> 00:21:05,407
我没有列出来

344
00:21:07,455 --> 00:21:09,503
这些东西这个字

345
00:21:10,527 --> 00:21:15,135
乍看之下当然是不知道了这个叫大写的STL temperature now

346
00:21:15,647 --> 00:21:16,416
不知道是什么

347
00:21:16,672 --> 00:21:17,440
我也不知道

348
00:21:17,952 --> 00:21:20,000
于是前前后后就看一看

349
00:21:20,512 --> 00:21:21,024
发现

350
00:21:21,536 --> 00:21:22,560
他其实

351
00:21:22,816 --> 00:21:24,352
是个吃饭

352
00:21:25,632 --> 00:21:27,424
他妻子就被转换成

353
00:21:27,936 --> 00:21:28,960
分水分

354
00:21:30,240 --> 00:21:31,264
空心的

355
00:21:31,520 --> 00:21:32,288
Template

356
00:21:33,568 --> 00:21:35,872
以后只要你看到这一

357
00:21:36,128 --> 00:21:37,152
这东西出现

358
00:21:38,432 --> 00:21:39,968
就表示他要特化

359
00:21:40,736 --> 00:21:41,504
所以

360
00:21:42,272 --> 00:21:43,296
意思是说

361
00:21:44,320 --> 00:21:47,392
这边的一个泛化版本接下来有

362
00:21:47,648 --> 00:21:51,488
1234567有七个分化版本

363
00:21:54,048 --> 00:21:55,072
被谁的话呢

364
00:21:56,608 --> 00:22:02,752
这个空的尖括号这已经被抽出来了但是被绑定为什么那被绑定为carry

365
00:22:03,776 --> 00:22:08,384
Short unsigned short Instagram等等等等

366
00:22:09,664 --> 00:22:11,200
也就是说hash

367
00:22:11,456 --> 00:22:12,736
这个类模板

368
00:22:13,760 --> 00:22:19,904
帮他接受的是这些这些的类型的时候他有一个独特的设计本来是空的

369
00:22:20,928 --> 00:22:22,208
现在还就有他

370
00:22:22,464 --> 00:22:23,488
福特的设计

371
00:22:25,280 --> 00:22:26,560
再举一个

372
00:22:26,816 --> 00:22:28,864
策划的例子给大家看

373
00:22:29,888 --> 00:22:30,912
刚看的

374
00:22:31,680 --> 00:22:33,728
这是一个例子商业只是一个例子

375
00:22:33,984 --> 00:22:35,264
下雨也是一个例子

376
00:22:39,104 --> 00:22:40,896
在夏夜又是一个例子

377
00:22:41,408 --> 00:22:45,504
所以策划出现在整个标准库里面很多地方都会出现

378
00:22:46,272 --> 00:22:52,416
其实这三个例子所要表达的都一样这只是语语法的形式最重要的就是这

379
00:22:52,672 --> 00:22:54,720
这个天赋的空的情况

380
00:22:56,256 --> 00:23:00,352
我不看这个例子说有一个类模板就是Hello Kitty

381
00:23:02,144 --> 00:23:03,936
他可以接受任意的t

382
00:23:04,704 --> 00:23:05,216
Test

383
00:23:07,264 --> 00:23:10,848
但如果这个体这个菜谱是一个玻璃的话

384
00:23:12,384 --> 00:23:13,152
那么

385
00:23:13,408 --> 00:23:14,688
有独特的设计

386
00:23:16,992 --> 00:23:19,296
上面是泛化下面

387
00:23:24,672 --> 00:23:26,720
这个策划

388
00:23:30,304 --> 00:23:32,608
又有人把它叫做全特化

389
00:23:33,376 --> 00:23:36,448
播specialization全部

390
00:23:36,960 --> 00:23:38,240
完整的话

391
00:23:40,032 --> 00:23:41,824
既然叫完整的话

392
00:23:42,592 --> 00:23:44,896
那就有相对局部退化了

393
00:23:45,920 --> 00:23:47,200
富含partial

394
00:23:48,480 --> 00:23:51,552
他小说我们又看到另外一个

395
00:23:52,320 --> 00:23:53,856
特殊的东西在

396
00:23:54,368 --> 00:24:00,512
类模板所衍生出来的叫做partial specialization你可以把它叫做局部

397
00:24:00,768 --> 00:24:03,840
策划我是我自己的钱这样念起来太

398
00:24:04,096 --> 00:24:05,120
太长了

399
00:24:05,376 --> 00:24:11,520
我觉得当初就把它翻译成先特话跟那个偏微分方程那个

400
00:24:11,776 --> 00:24:12,544
让意思

401
00:24:13,568 --> 00:24:15,360
这个片策划

402
00:24:17,664 --> 00:24:21,504
这篇是什么呢

403
00:24:23,040 --> 00:24:26,368
好现在有一个测一个泛化的版本

404
00:24:28,416 --> 00:24:31,744
它接受两个模板参数

405
00:24:32,256 --> 00:24:38,400
我们到目前为止在这个之前我们说看到我所给的例子都是一个模板参数是那个大的

406
00:24:38,656 --> 00:24:41,984
其实是可以有好几个的我这边就有两个

407
00:24:44,032 --> 00:24:45,568
我们看下面这个版本

408
00:24:47,104 --> 00:24:49,920
他这个意思是说本来有两个

409
00:24:50,944 --> 00:24:51,968
模板参数

410
00:24:52,224 --> 00:24:54,784
现在的绑定其中一个

411
00:24:55,296 --> 00:24:59,904
20这个就要局部两个里面绑定一个叫咀嚼片要发小

412
00:25:00,928 --> 00:25:03,744
怎么怎么写呢从上面变成下面是怎么样

413
00:25:04,256 --> 00:25:05,024
看这里

414
00:25:06,304 --> 00:25:08,608
有两个模板参数

415
00:25:09,376 --> 00:25:11,168
现在的变成只有一个了

416
00:25:12,192 --> 00:25:12,960
第2个

417
00:25:13,472 --> 00:25:14,496
第1个呢

418
00:25:15,264 --> 00:25:18,080
一个就在这个地方要写出来

419
00:25:18,592 --> 00:25:22,944
绑定为什么这里是绑定为不顾廉耻

420
00:25:23,456 --> 00:25:24,224
增加值

421
00:25:26,784 --> 00:25:29,088
所以这个意思是什么呢

422
00:25:29,856 --> 00:25:30,880
Vector

423
00:25:31,392 --> 00:25:36,256
他本来可以接受任意的类型作为元素

424
00:25:38,048 --> 00:25:38,560
办

425
00:25:38,816 --> 00:25:44,704
如果你指定那个元素是不定时增加值的话0101正价值的话

426
00:25:45,728 --> 00:25:49,056
标准库说那我有一个特别的设计

427
00:25:49,312 --> 00:25:55,456
一定是效率比较高可能是速度比较快的是空间用的比较少著作算是效率的一部分

428
00:25:56,992 --> 00:26:01,088
这个我们很可以想象我这个元素如果放个16

429
00:26:01,344 --> 00:26:02,624
好好这个

430
00:26:03,136 --> 00:26:04,928
这个master是怎么样的设计

431
00:26:05,440 --> 00:26:08,256
可是如果我的元素只是0101的话

432
00:26:09,024 --> 00:26:12,352
我好像可以用更精简的空间代表现他

433
00:26:13,632 --> 00:26:17,472
这很容易联想的确实他就是清楚这样的一个做法

434
00:26:21,056 --> 00:26:26,432
这个是他修起来这片位的局部

435
00:26:26,944 --> 00:26:28,480
在这里的一个意义是

436
00:26:28,736 --> 00:26:31,296
所谓的局部是数量上的景物

437
00:26:31,552 --> 00:26:34,112
本来有两个模板参数线一个

438
00:26:34,368 --> 00:26:37,440
两个店一个另外一个锁定了

439
00:26:41,792 --> 00:26:45,120
另外还有一种片刻画是范围的片

440
00:26:45,632 --> 00:26:46,912
范围的局部

441
00:26:47,168 --> 00:26:49,984
这个差别抽象一点来我们试试看

442
00:26:53,824 --> 00:26:55,104
这边有一个

443
00:26:56,384 --> 00:26:57,408
类模板

444
00:26:58,176 --> 00:27:04,064
他接受任意的态度现在这个太会写成了iterator无所谓我前面提过了

445
00:27:04,320 --> 00:27:06,624
有什么样的符号来表现都没有关系

446
00:27:07,648 --> 00:27:09,952
好反正的他接受一个任意的态度

447
00:27:11,744 --> 00:27:12,768
下面这个

448
00:27:13,024 --> 00:27:13,536
版本

449
00:27:13,792 --> 00:27:17,376
这边的话下面这有另外一个版本也是扁的话

450
00:27:18,400 --> 00:27:22,240
这个偏振华是什么他已经只接受一个他一个

451
00:27:22,496 --> 00:27:23,776
我把参数了

452
00:27:24,288 --> 00:27:25,824
而这个意思是说

453
00:27:26,080 --> 00:27:29,408
这个接受的人如果是个指针的话

454
00:27:30,688 --> 00:27:34,528
那你看本来他犯话是可以接受任意的态度

455
00:27:35,808 --> 00:27:37,600
他这个版本说

456
00:27:38,368 --> 00:27:44,512
如果你穿的不是任意要是一种指针指针指向什么无所谓但是它是一个指针

457
00:27:45,280 --> 00:27:50,144
如果这样的话我有独特的设计那么就是你现在看到

458
00:27:50,912 --> 00:27:52,448
我们来分析一下这个语法

459
00:27:55,264 --> 00:27:57,824
这个尖括号里面说

460
00:27:58,080 --> 00:28:02,688
现在的这一个绑定的太不是什么人是一个分组

461
00:28:03,968 --> 00:28:05,248
至于其是什么

462
00:28:05,760 --> 00:28:06,784
仍然不知道

463
00:28:07,296 --> 00:28:08,064
但无所谓

464
00:28:10,112 --> 00:28:16,256
所以期仍然是未定的还是要让上面的写出来他就不再是一个空的尖括号

465
00:28:18,816 --> 00:28:19,584
再讲一次

466
00:28:19,840 --> 00:28:21,120
这个地方有一点点

467
00:28:21,888 --> 00:28:22,656
你要想象

468
00:28:23,936 --> 00:28:25,984
上面这个是漫画版的

469
00:28:27,264 --> 00:28:29,056
这个泛化的type

470
00:28:29,824 --> 00:28:32,640
这个type如果他是一个point

471
00:28:32,896 --> 00:28:35,712
从这出什么都无所谓只要他这个片子

472
00:28:38,784 --> 00:28:40,320
我有独特的设计

473
00:28:41,600 --> 00:28:43,648
水果怎么样告诉编译器这个事情呢

474
00:28:43,904 --> 00:28:45,440
语法就是这样

475
00:28:47,488 --> 00:28:50,048
这样就表示重建两个是一个point

476
00:28:51,072 --> 00:28:52,608
至于它指向什么

477
00:28:53,120 --> 00:28:54,656
只要什么都可以

478
00:28:54,912 --> 00:28:55,936
所以这里的

479
00:28:56,192 --> 00:28:57,728
我们把这个题材写上来

480
00:29:01,312 --> 00:29:05,152
所以左手边这一个栅格数的天头发

481
00:29:06,176 --> 00:29:09,248
右手边这个示范围的片头

482
00:29:11,552 --> 00:29:14,880
这便是一个泛化版本拿下面是第1个特化版本啊

483
00:29:15,136 --> 00:29:21,280
跟他玩的是不是还有另外一个偏振化方的这个意思是什么呢说传进来是一个指针

484
00:29:22,048 --> 00:29:24,096
这是真指的是const的

485
00:29:24,608 --> 00:29:28,448
上面这个版本是指针指向的这个要略略不同

486
00:29:34,336 --> 00:29:40,480
好我们在概念上做各种整理就是模板的主要分为内模板分为函数模板

487
00:29:40,736 --> 00:29:42,016
换成员模板

488
00:29:42,528 --> 00:29:47,904
成为模板没有趣的他因为不影响我们以后看这个人在吗

489
00:29:48,928 --> 00:29:51,744
类模板里面的全特化

490
00:29:52,000 --> 00:29:53,536
签的话

491
00:29:54,048 --> 00:29:56,864
片刻画了有个树上的片

492
00:29:57,120 --> 00:29:58,912
范围上的片

493
00:29:59,680 --> 00:30:01,216
这个地方

494
00:30:04,032 --> 00:30:06,592
在所有的这个机器基本技巧

495
00:30:06,848 --> 00:30:11,200
基本概念都完成了我们终于可以开始来看

496
00:30:11,712 --> 00:30:12,992
标准库里面的

497
00:30:13,504 --> 00:30:16,832
六大部件一个一个来看他的

498
00:30:17,088 --> 00:30:18,880
白马关键代码部分

1
00:00:40,704 --> 00:00:42,496
电脑接到

2
00:00:43,008 --> 00:00:46,592
店员的都需要一个变压器也是这个actor

3
00:00:47,104 --> 00:00:49,664
20加到改造气那可能这个

4
00:00:49,920 --> 00:00:51,200
规模又太大了

5
00:00:51,456 --> 00:00:55,808
改造有一点好像要改头换面那好像是一个大工程

6
00:00:56,320 --> 00:01:02,464
24日上午我就不就不讲中文了我就讲这个这个

7
00:01:02,720 --> 00:01:04,256
它是以上只是一个

8
00:01:05,024 --> 00:01:06,048
换新工程

9
00:01:06,560 --> 00:01:10,144
把皮肤换隐患所以只是一个小工程那个变化而已

10
00:01:10,912 --> 00:01:16,288
Adapter在设计模式在这个领域里头

11
00:01:17,312 --> 00:01:21,152
有23个很有名的设计模式其中有一个就叫做

12
00:01:21,920 --> 00:01:23,712
设计模式是我的另外一门课

13
00:01:24,736 --> 00:01:25,248
好

14
00:01:26,528 --> 00:01:27,040
安

15
00:01:27,552 --> 00:01:33,696
所以adapter刚刚好说明了他只是要去把某一个既有的东西已经

16
00:01:33,952 --> 00:01:40,096
存在的东西功能也不错的东西要把它稍微改造一下比如说法接口

17
00:01:40,352 --> 00:01:40,864
我改一改

18
00:01:41,120 --> 00:01:43,168
三个参数的便点个参数的

19
00:01:43,424 --> 00:01:47,008
不只是把一个参数函数的名称改一下

20
00:01:48,288 --> 00:01:52,128
那不是都带着函数吗要把函数的名称改一下

21
00:01:52,384 --> 00:01:53,408
像这样

22
00:01:53,920 --> 00:01:55,968
Adapter通常都是

23
00:01:56,224 --> 00:01:56,992
怎么使用的

24
00:01:58,272 --> 00:01:59,040
M

25
00:02:00,576 --> 00:02:01,856
现在看这张图

26
00:02:02,368 --> 00:02:04,416
在这六大部件里头啊

27
00:02:04,928 --> 00:02:07,232
其他我们都谈过之声箱App

28
00:02:07,488 --> 00:02:13,632
他出现在哪里呢他就不像其他的部件组件一样啊是单独的出现

29
00:02:13,888 --> 00:02:14,912
现在某一块的头

30
00:02:15,680 --> 00:02:20,032
你看这个浅浅蓝色这个东西它出现在三个地方

31
00:02:21,312 --> 00:02:22,336
这个叫做

32
00:02:22,592 --> 00:02:28,736
根据他所要去改造的他所要去稍微修饰一下的这个是什么东西

33
00:02:28,992 --> 00:02:32,576
继而决定我们把它命名为什么比如说

34
00:02:32,832 --> 00:02:35,904
这个呢只要去改变方法

35
00:02:36,160 --> 00:02:41,024
那我们就叫做方程的Bullshit

36
00:02:42,304 --> 00:02:44,864
那这个呢他是要去改造

37
00:02:45,120 --> 00:02:46,144
Iterator

38
00:02:46,400 --> 00:02:49,216
所以我们叫xss attacks

39
00:02:49,728 --> 00:02:50,496
这个呢

40
00:02:50,752 --> 00:02:54,336
是他要改造container容器所以我们叫做

41
00:02:54,592 --> 00:02:55,360
Container

42
00:02:57,152 --> 00:02:58,432
他们的做法呢

43
00:02:58,944 --> 00:03:01,760
有它的独特性但是也有它的共性

44
00:03:02,272 --> 00:03:08,416
我们接下来就要都要举一些例子给大家看你可以归纳出它的贡献出来

45
00:03:09,696 --> 00:03:11,744
这个sector

46
00:03:12,512 --> 00:03:13,536
在

47
00:03:14,048 --> 00:03:15,584
有些技术上了

48
00:03:15,840 --> 00:03:19,936
在他使用的表面上你会觉得匪夷所思

49
00:03:20,448 --> 00:03:26,592
实在是搞不懂它怎么做出来所以这是一个非常有趣的一个话题

50
00:03:28,384 --> 00:03:34,528
但是我现在打那个他的共性就是只要抓住他的腕间的你

51
00:03:34,784 --> 00:03:36,320
你的思路就忽然开了

52
00:03:37,088 --> 00:03:38,368
关键是什么

53
00:03:38,880 --> 00:03:43,744
就是这个他要去改造一个东西的话呢

54
00:03:44,768 --> 00:03:45,536
其实他

55
00:03:46,304 --> 00:03:46,816
他自己

56
00:03:47,328 --> 00:03:49,632
A8比改造之后

57
00:03:49,888 --> 00:03:50,400
A

58
00:03:50,656 --> 00:03:55,776
这代表了提的HR面对大家给大家使用

59
00:03:56,032 --> 00:03:58,336
大家就不会再看到的想到

60
00:03:58,592 --> 00:04:00,640
而是会看到A

61
00:04:01,152 --> 00:04:01,920
但是

62
00:04:02,176 --> 00:04:08,320
自己所做的主要的事情就是交给必去做因为B是本来就有的一个好

63
00:04:08,576 --> 00:04:09,344
好东西

64
00:04:10,880 --> 00:04:11,392
Siri

65
00:04:11,904 --> 00:04:12,416
A

66
00:04:12,672 --> 00:04:16,000
身为一个桥梁是使用者

67
00:04:16,256 --> 00:04:16,768
汉

68
00:04:17,024 --> 00:04:18,815
隐藏在幕后的逼

69
00:04:19,071 --> 00:04:20,607
这中间的一个桥梁

70
00:04:21,631 --> 00:04:24,191
抑制作用抑制作用

71
00:04:25,215 --> 00:04:26,495
既然A

72
00:04:26,751 --> 00:04:27,263
要去

73
00:04:27,519 --> 00:04:29,311
取用一的功能

74
00:04:30,591 --> 00:04:32,383
我们在编程的技术上

75
00:04:32,639 --> 00:04:33,663
技巧上

76
00:04:34,431 --> 00:04:35,711
两种做法

77
00:04:36,223 --> 00:04:38,783
我要去取用倒逼的功能

78
00:04:39,039 --> 00:04:42,623
两种做法一个就是用继承的方式a

79
00:04:43,135 --> 00:04:44,159
继承了B

80
00:04:45,439 --> 00:04:47,743
哈哈当然可以取用它倒数的复原

81
00:04:49,279 --> 00:04:51,071
另外一种方式就是a

82
00:04:51,327 --> 00:04:52,863
内含一个逼

83
00:04:54,143 --> 00:04:57,727
红就是叫永远看不清晰附和

84
00:04:58,239 --> 00:05:00,031
内涵永远都可以

85
00:05:00,543 --> 00:05:01,823
这种关系

86
00:05:03,103 --> 00:05:07,199
在我们现在接下来讨论这一些

87
00:05:07,711 --> 00:05:10,783
通通都不是用记者方式

88
00:05:11,039 --> 00:05:13,087
都是用内涵的方式

89
00:05:14,111 --> 00:05:15,391
这意思是说

90
00:05:15,903 --> 00:05:17,183
这一种

91
00:05:18,207 --> 00:05:21,023
他在技术上等下看代码有什么看到

92
00:05:21,535 --> 00:05:23,327
它内含的一个

93
00:05:23,583 --> 00:05:24,095
房产

94
00:05:25,119 --> 00:05:26,143
那这种呢

95
00:05:26,399 --> 00:05:27,935
内含的一个

96
00:05:28,447 --> 00:05:29,215
Iterator

97
00:05:29,983 --> 00:05:30,751
这种呢

98
00:05:31,007 --> 00:05:33,567
内含的一个容器

99
00:05:33,823 --> 00:05:38,943
这样就就很容易的能够进行下去

100
00:05:40,991 --> 00:05:41,503
另外

101
00:05:43,551 --> 00:05:48,927
我们前面花了不少的时间来探讨算法更迭代器之间的关系

102
00:05:49,183 --> 00:05:50,463
当时我是说

103
00:05:50,719 --> 00:05:53,279
算法由于不知道容器

104
00:05:53,535 --> 00:05:56,095
他能够看到的只是迭代器

105
00:05:56,607 --> 00:05:58,399
迭代器是由容器所提供的

106
00:05:59,423 --> 00:06:03,775
所以算法他想知道的一切问题他都要问你在一起

107
00:06:04,031 --> 00:06:06,079
透过这五个地方

108
00:06:06,335 --> 00:06:07,103
请问

109
00:06:07,871 --> 00:06:10,431
说迭代器都必须有政府给他的地方

110
00:06:11,199 --> 00:06:13,759
才能够跟算法的很好的搭配

111
00:06:15,295 --> 00:06:17,343
现在我们谈的是方程

112
00:06:18,623 --> 00:06:19,903
而是sector

113
00:06:20,415 --> 00:06:21,951
那这个setter

114
00:06:22,207 --> 00:06:25,535
这里有三种啊不过最主要的是这一种

115
00:06:28,095 --> 00:06:29,119
它的作用

116
00:06:29,631 --> 00:06:32,447
主要也是要跟算法来合作的

117
00:06:32,703 --> 00:06:38,079
我们所能提我们这个之前提到过算法可能会需要一些

118
00:06:38,335 --> 00:06:39,359
W说排序的

119
00:06:39,615 --> 00:06:40,383
准则

120
00:06:40,639 --> 00:06:42,943
你大小的准则那都是通过

121
00:06:44,223 --> 00:06:44,991
反函数

122
00:06:45,247 --> 00:06:46,527
传进来的

123
00:06:46,783 --> 00:06:52,415
现在这个情况就是可以把返还是塑造成一个App然后

124
00:06:52,671 --> 00:06:53,951
再传给算法

125
00:06:54,463 --> 00:06:56,511
这张图的意思这样因此

126
00:06:57,023 --> 00:07:01,119
算法也可能会想要知道某些问题

127
00:07:02,399 --> 00:07:08,543
甚至以迭代本身也想要知道它内含的这个反函数方

128
00:07:08,799 --> 00:07:10,591
在一些特性

129
00:07:10,847 --> 00:07:14,687
要用问跟打的方式这里有提问跟回答

130
00:07:15,199 --> 00:07:19,295
那是怎么样那也是要通过三个地方来回答

131
00:07:20,575 --> 00:07:23,391
这里有五个他非法滞留三个地方

132
00:07:23,647 --> 00:07:25,439
和两个地方

133
00:07:25,951 --> 00:07:29,023
取决于他的这个等下会看到的一些性质

134
00:07:30,815 --> 00:07:31,583
好

135
00:07:31,839 --> 00:07:33,119
下看

136
00:07:34,143 --> 00:07:36,447
第1种最简单的adapter

137
00:07:36,703 --> 00:07:38,239
容器的

138
00:07:39,775 --> 00:07:42,847
我们前面已经看过了一个就是stack

139
00:07:44,639 --> 00:07:46,175
很快的再看一次

140
00:07:46,687 --> 00:07:47,967
这个就是stack

141
00:07:48,223 --> 00:07:48,991
源代码

142
00:07:49,759 --> 00:07:55,391
当然不是这么少让孩子还有点点点但是可能也占800分之八九是我都

143
00:07:55,647 --> 00:07:56,671
把它列出来了

144
00:07:56,927 --> 00:07:58,463
这个是Q的源代码

145
00:07:59,231 --> 00:07:59,743
你看

146
00:07:59,999 --> 00:08:03,839
不是救他都内含一个sequence

147
00:08:04,607 --> 00:08:05,375
Secret

148
00:08:05,887 --> 00:08:09,471
这个是什么呢在这里默认是一个大坑

149
00:08:09,727 --> 00:08:10,751
抢先开口

150
00:08:11,007 --> 00:08:13,055
这个也是一样默认识一个DAC

151
00:08:13,823 --> 00:08:16,383
所以我们说它内涵那个容器

152
00:08:17,663 --> 00:08:20,735
内涵他之后要把他怎么样的改造呢

153
00:08:21,247 --> 00:08:23,807
如果说这个内涵的这个东西

154
00:08:24,319 --> 00:08:25,599
有100个函数

155
00:08:25,855 --> 00:08:27,135
放进来之后呢

156
00:08:27,391 --> 00:08:33,535
他的隐身在后头了然后他只开放出六个函数出来这样也算是一种改造

157
00:08:34,047 --> 00:08:35,327
100个变六个

158
00:08:36,607 --> 00:08:37,887
好像规模缩小

159
00:08:38,143 --> 00:08:38,911
搪塞

160
00:08:40,447 --> 00:08:43,519
这是一种改造但还不止于此有人说这个

161
00:08:44,031 --> 00:08:45,567
胃寒的这个东西

162
00:08:45,823 --> 00:08:46,847
绿色的这个是

163
00:08:47,103 --> 00:08:48,639
他这里有一个函数名称叫

164
00:08:50,175 --> 00:08:50,687
Back

165
00:08:50,943 --> 00:08:51,967
现在改名字叫

166
00:08:53,759 --> 00:08:55,295
这种改造

167
00:08:56,831 --> 00:09:02,975
这边也是一样你可以看到名称改变比如说这个叫pop_front名字现在改叫他

168
00:09:03,231 --> 00:09:03,743
Pop

169
00:09:04,511 --> 00:09:07,327
不是换一个角度说使用者的

170
00:09:07,583 --> 00:09:10,399
调用pop的时候其实是调用C

171
00:09:10,655 --> 00:09:11,935
Tesla

172
00:09:12,447 --> 00:09:17,823
这就是一个小区改造改造什么事情要把它内含的这一个

173
00:09:18,335 --> 00:09:19,103
气

174
00:09:19,615 --> 00:09:21,407
换一个风貌

175
00:09:21,663 --> 00:09:23,199
一种风貌出来

176
00:09:23,455 --> 00:09:24,991
一种味道出来

177
00:09:25,247 --> 00:09:26,783
换成什么样的味道呢

178
00:09:27,551 --> 00:09:29,087
Second为道

179
00:09:29,855 --> 00:09:31,391
Stack就先进先出

180
00:09:31,647 --> 00:09:35,743
Stack是先进后出就是先进先出

181
00:09:36,255 --> 00:09:37,791
换成这种味道

182
00:09:38,047 --> 00:09:39,071
这个就是

183
00:09:39,583 --> 00:09:40,095
要做

184
00:09:40,863 --> 00:09:41,631
容器的

185
00:09:42,655 --> 00:09:44,191
适配器

186
00:09:44,447 --> 00:09:47,775
这个我们前面就看过了很快的一个父亲

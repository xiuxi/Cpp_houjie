1
00:00:05,632 --> 00:00:11,776
我们即将看到的一块内存是怎么被分配出来的前面都只是在

2
00:00:12,032 --> 00:00:13,824
再计算它的大小

3
00:00:17,152 --> 00:00:22,272
我总是会去设想当你在听这门课的时候你心里头可能在想什么事情

4
00:00:23,552 --> 00:00:29,696
会不会你想说我这个是内存管理我是要来学内存管理我是要来自

5
00:00:29,952 --> 00:00:33,280
应用程序上做那什么关你的设计

6
00:00:34,304 --> 00:00:36,608
为什么现在进行道那那个去

7
00:00:37,632 --> 00:00:38,912
我再一次告诉你

8
00:00:39,168 --> 00:00:44,032
Malloc的头有非常复杂的内存管理你要选内存管理是吗

9
00:00:44,288 --> 00:00:45,824
这个够不够棒

10
00:00:46,080 --> 00:00:50,944
全世界几千万个程序员在用的malloc它的管理

11
00:00:51,712 --> 00:00:53,248
当然是值得我们学习

12
00:00:54,784 --> 00:00:55,808
这件事情

13
00:00:57,344 --> 00:01:01,952
也许经过这个认识之后你终于恍然大悟你还要做什么管理呢

14
00:01:02,208 --> 00:01:03,488
其实都做了

15
00:01:04,000 --> 00:01:10,144
Win10对万科的理解都是错误的以为它很粗糙因为它很慢其实都是错误的

16
00:01:10,400 --> 00:01:12,448
说不定你会有这样的恍然大悟

17
00:01:14,240 --> 00:01:19,360
这就是我认为非常重要的去理解没落看着非常重要的原因

18
00:01:22,176 --> 00:01:23,712
好我们去下去

19
00:01:24,224 --> 00:01:28,064
对刚刚进行从这个地方进行到这个地方来

20
00:01:28,576 --> 00:01:29,344
啊

21
00:01:29,856 --> 00:01:34,720
这个还是忠于王那头调用现在我们要讲解这一件事情

22
00:01:36,000 --> 00:01:37,536
前面的设计的

23
00:01:37,792 --> 00:01:38,560
公式

24
00:01:39,072 --> 00:01:40,096
纸上谈兵

25
00:01:40,608 --> 00:01:45,472
不是它没有用它当然非常有用但是都是手上确实没有病可以用

26
00:01:45,984 --> 00:01:48,288
只是在计算大小

27
00:01:50,080 --> 00:01:55,200
终于进入这里之后这个叫什么你要背着他更深层的

28
00:01:55,712 --> 00:01:56,736
有一个妞

29
00:01:56,992 --> 00:01:57,504
Group

30
00:01:58,016 --> 00:02:01,344
我们会看到什么叫做widgets什么这种

31
00:02:02,112 --> 00:02:04,160
而前的我们已经看过了

32
00:02:04,416 --> 00:02:05,952
16个黑的

33
00:02:06,464 --> 00:02:08,256
现在这个通话在这里

34
00:02:08,512 --> 00:02:10,816
这个16个黑的一个骰子它

35
00:02:11,328 --> 00:02:15,424
所以将来要追踪这个黑色的话靠这个头就可以

36
00:02:15,680 --> 00:02:19,008
大小都知道了就可以找出16个

37
00:02:19,520 --> 00:02:23,104
每一个黑的负责的是

38
00:02:23,360 --> 00:02:24,640
因为感什么意思

39
00:02:26,688 --> 00:02:28,736
所以我们会看到这里头

40
00:02:29,504 --> 00:02:30,272
他去

41
00:02:31,040 --> 00:02:31,808
调用

42
00:02:32,064 --> 00:02:33,344
Windows的

43
00:02:33,600 --> 00:02:36,160
一个函数叫virtual allocate

44
00:02:37,952 --> 00:02:39,488
不熟悉的话

45
00:02:40,512 --> 00:02:43,072
我就想知道的话赶快去翻一翻你的手册

46
00:02:43,328 --> 00:02:49,472
有这么一个函数Windows底下有这么一个API要virtualkd允许你拿多少

47
00:02:49,728 --> 00:02:50,496
多少内存

48
00:02:50,752 --> 00:02:54,592
他要的就是那个怎么打

49
00:02:57,408 --> 00:02:57,920
所以

50
00:02:58,176 --> 00:03:03,296
在城里一次一个黑的负责管理

51
00:03:04,576 --> 00:03:06,112
怎么管理呢

52
00:03:06,368 --> 00:03:07,904
他靠这个东西

53
00:03:10,720 --> 00:03:12,256
这个东西

54
00:03:12,768 --> 00:03:14,304
靠这根指针指着

55
00:03:14,816 --> 00:03:20,960
在刚刚说黑的有两个尺寸在之前的图没有画出来现在画出来了其中一根

56
00:03:21,216 --> 00:03:24,800
身子像真正的内存另外一根指向一个管理中心

57
00:03:25,312 --> 00:03:27,872
我这样子请问他好了管理中心

58
00:03:28,128 --> 00:03:30,176
这一个就叫做region

59
00:03:30,688 --> 00:03:31,968
这里的

60
00:03:32,736 --> 00:03:34,016
Music

61
00:03:37,088 --> 00:03:39,136
这个图怎么画出来的

62
00:03:39,904 --> 00:03:42,976
因为观察的region的设计

63
00:03:44,768 --> 00:03:46,816
我们直接看看这里都有什么

64
00:03:48,096 --> 00:03:48,864
一个整数

65
00:03:49,632 --> 00:03:50,656
华在这个地方

66
00:03:51,424 --> 00:03:53,472
这个字非常小了

67
00:03:54,752 --> 00:03:55,776
你现在在你的

68
00:03:56,288 --> 00:04:02,432
画面上和春天可能看不清楚哪个一后面有放大的现在为了整张放进去实在是

69
00:04:02,688 --> 00:04:04,736
只好牺牲而是出现在这里

70
00:04:08,064 --> 00:04:09,344
好再来呢

71
00:04:10,112 --> 00:04:11,904
有64个tablet

72
00:04:12,160 --> 00:04:15,232
64个parent下面成语

73
00:04:16,768 --> 00:04:18,303
我这边有写字非常小

74
00:04:18,815 --> 00:04:21,119
64个character不太清楚

75
00:04:22,655 --> 00:04:23,423
再来呢

76
00:04:23,935 --> 00:04:27,519
这里有32个什么东西这样的

77
00:04:27,775 --> 00:04:29,055
我之前有

78
00:04:29,567 --> 00:04:33,919
告诉过你他的命令行是有一个还有一个肉的话

79
00:04:34,175 --> 00:04:35,967
这是要把两个并起来

80
00:04:36,991 --> 00:04:40,063
所以他其实是要订出来一个什么东西呢

81
00:04:40,831 --> 00:04:42,367
这个每一个

82
00:04:42,623 --> 00:04:43,647
都是一个

83
00:04:43,903 --> 00:04:44,927
这个东西

84
00:04:46,207 --> 00:04:49,535
这个刚刚有出现过

85
00:04:50,303 --> 00:04:53,375
我不要再回去了我确实应该把它

86
00:04:53,887 --> 00:04:58,239
再一次把在这里你就会更清楚他是一个unsigned integer

87
00:04:58,751 --> 00:05:00,543
Unsigned integer

88
00:05:01,311 --> 00:05:03,871
所以这个两个合并起来

89
00:05:04,383 --> 00:05:06,687
就是有32组

90
00:05:08,479 --> 00:05:11,551
喂主是怎么那是64个

91
00:05:14,111 --> 00:05:15,391
在这堆东西

92
00:05:16,927 --> 00:05:20,511
这个模糊的字上面是写说有64个bit

93
00:05:20,767 --> 00:05:22,815
一共有32处

94
00:05:26,399 --> 00:05:32,543
这些东西做什么用其实只要一句话涵盖他我们如果去追踪他就太痛苦了

95
00:05:34,079 --> 00:05:39,967
我追踪过最后把心的告诉你他就是在管理里面哪一个

96
00:05:40,735 --> 00:05:43,807
南些区块按或有或没有

97
00:05:44,319 --> 00:05:44,831
在

98
00:05:45,855 --> 00:05:48,671
电表里头存不存在这些小细节

99
00:05:50,719 --> 00:05:51,999
好继续往下

100
00:05:52,255 --> 00:05:54,047
这个region还有什么

101
00:05:54,559 --> 00:05:59,935
最后他还有一个32个元素组成的一个瑞

102
00:06:00,447 --> 00:06:01,471
一个数字

103
00:06:02,239 --> 00:06:06,591
这个数组每个是什么都有32个每一个是什么是一个group

104
00:06:09,407 --> 00:06:12,479
好所以我就画成这里的布鲁克林到31

105
00:06:13,247 --> 00:06:15,807
我后面可能有些图会显示一到32

106
00:06:16,063 --> 00:06:20,671
这个这个这个无所谓领到31和1到32无所谓

107
00:06:21,439 --> 00:06:23,999
有时候我画图没有办法那么一致性

108
00:06:24,255 --> 00:06:29,375
当时想到什么或者是这张图上个月画的这张图是下个月华的

109
00:06:30,399 --> 00:06:30,911
好

110
00:06:31,679 --> 00:06:32,959
就是这32个

111
00:06:34,495 --> 00:06:35,263
在group

112
00:06:36,543 --> 00:06:38,591
这不是什么结构呢

113
00:06:39,615 --> 00:06:41,151
这个图展开来

114
00:06:41,407 --> 00:06:45,247
这个土一个room展开来就是长这样子

115
00:06:47,807 --> 00:06:49,087
地图怎么画的

116
00:06:49,343 --> 00:06:50,623
要看它的设计

117
00:06:51,903 --> 00:06:52,927
不root

118
00:06:53,695 --> 00:06:56,255
里头首先是一个整数

119
00:06:56,511 --> 00:06:57,791
华在这里

120
00:06:58,047 --> 00:06:59,583
灰色的这一个

121
00:07:00,607 --> 00:07:03,423
这些后面都会放大现在只是

122
00:07:03,935 --> 00:07:05,215
一个大局观

123
00:07:05,727 --> 00:07:06,495
手术

124
00:07:07,519 --> 00:07:08,543
接下来呢

125
00:07:09,055 --> 00:07:10,847
有64

126
00:07:11,615 --> 00:07:13,151
这什么东西

127
00:07:14,943 --> 00:07:16,223
64个

128
00:07:16,479 --> 00:07:17,759
This hand

129
00:07:19,295 --> 00:07:22,367
This had是什么赶快去看一看这下面这里

130
00:07:23,135 --> 00:07:24,415
两根指针

131
00:07:25,951 --> 00:07:29,279
所以我就根据这个结构画出来这边

132
00:07:31,071 --> 00:07:35,423
两个指针对对吗一个pair一对好友64岁

133
00:07:35,935 --> 00:07:36,959
指针

134
00:07:38,239 --> 00:07:41,055
128根64位

135
00:07:44,127 --> 00:07:48,991
这个指针的名字叫一个叫next一个叫previous

136
00:07:49,247 --> 00:07:50,783
我想你可以联想了

137
00:07:51,295 --> 00:07:54,367
这将会形成一个双向链表

138
00:07:55,391 --> 00:07:57,439
每两根指针

139
00:07:57,951 --> 00:08:01,023
要来指向一个双向链表

140
00:08:01,279 --> 00:08:05,887
总共有64条双向链表

141
00:08:11,775 --> 00:08:16,127
我现在一下子把细节全部挖出来然后我们再把身在抽

142
00:08:16,383 --> 00:08:18,431
抽到高层来我在整理一次

143
00:08:19,455 --> 00:08:21,247
一个黑的

144
00:08:22,527 --> 00:08:23,807
它将会申请

145
00:08:24,063 --> 00:08:26,111
真正的内存异美感

146
00:08:27,903 --> 00:08:31,487
将来要分割出去就是从这里分割出去

147
00:08:32,767 --> 00:08:38,143
为了做对这个Email got7出来有大有小大大小小乱七八糟

148
00:08:39,679 --> 00:08:41,471
为了对他做管理

149
00:08:42,239 --> 00:08:43,519
这个黑的呢

150
00:08:43,775 --> 00:08:47,103
又去尿一会这个东西

151
00:08:48,639 --> 00:08:54,783
这里头对镜头有什么刚刚分析过了有一些别的有一些会

152
00:08:55,551 --> 00:08:57,855
还有32个

153
00:08:58,111 --> 00:09:02,719
每个group是什么呢其实就是64根双向链表

154
00:09:04,511 --> 00:09:08,607
王要用这些东西来控制与美感

155
00:09:10,143 --> 00:09:11,935
这个成本也不小

156
00:09:13,215 --> 00:09:17,055
我们等一下可以把这一个东西大小算出来

157
00:09:17,567 --> 00:09:18,847
这是他的结构

158
00:09:19,103 --> 00:09:21,407
所以完全可以算出来

159
00:09:22,431 --> 00:09:23,711
我现在可以先告诉你

160
00:09:26,527 --> 00:09:30,111
算出来的结果是大概有16倍左右

161
00:09:31,903 --> 00:09:37,023
换句话说他为了好好的管理那个它的成本是16k

162
00:09:40,607 --> 00:09:46,751
这个也谈不上是是太大太小了反正他为了追求那个良好的管理

163
00:09:47,007 --> 00:09:49,055
花了这么多的成本

164
00:09:52,383 --> 00:09:54,431
所以现在进行哪里呢

165
00:09:54,687 --> 00:10:00,831
刚刚这个大小苹果调整终于调整到最后的又是什么16的边界来又加QQ

166
00:10:01,087 --> 00:10:02,111
好了之后

167
00:10:02,623 --> 00:10:03,647
中医药

168
00:10:03,903 --> 00:10:04,927
要求内存了

169
00:10:05,439 --> 00:10:07,231
进入这一个函数

170
00:10:07,743 --> 00:10:08,767
Norwegian

171
00:10:09,279 --> 00:10:11,327
他要走上就要有冰了

172
00:10:12,863 --> 00:10:15,423
纸上旁边那个屏他现在真的要有一个兵

173
00:10:15,679 --> 00:10:16,959
他就你

174
00:10:17,471 --> 00:10:19,007
我要去老K那这一块

175
00:10:20,287 --> 00:10:22,079
并且长出这一堆

176
00:10:26,943 --> 00:10:30,015
下一个动作就真的要从这里去会出去了

177
00:10:31,807 --> 00:10:32,831
所以这边

178
00:10:34,111 --> 00:10:37,695
谁会在进入最后这个函数牛room

179
00:10:38,207 --> 00:10:39,231
我们就会看到

180
00:10:39,743 --> 00:10:40,255
一个

181
00:10:40,511 --> 00:10:42,047
内存块切的东西

182
00:10:42,303 --> 00:10:44,095
那就是我们的一块内存

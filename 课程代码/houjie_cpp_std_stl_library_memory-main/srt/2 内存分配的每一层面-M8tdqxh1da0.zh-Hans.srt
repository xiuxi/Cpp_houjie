1
00:00:07,680 --> 00:00:09,472
话说天宝当年

2
00:00:10,752 --> 00:00:16,896
首先现在我们是处在一个什么样的情况之下那高度的技术发展

3
00:00:17,152 --> 00:00:18,432
世界中

4
00:00:18,944 --> 00:00:20,480
所以我们现在所用的

5
00:00:20,736 --> 00:00:21,760
计算机

6
00:00:22,016 --> 00:00:23,808
他的硬体硬件设备

7
00:00:24,064 --> 00:00:28,160
我们所用的操作系统它在软件的这个技术发展

8
00:00:28,672 --> 00:00:29,696
无耻的

9
00:00:29,952 --> 00:00:30,720
内存

10
00:00:31,744 --> 00:00:33,536
不再是那么的紧张

11
00:00:35,584 --> 00:00:37,376
20天宝当年

12
00:00:37,632 --> 00:00:43,264
1990年左右1990左右之前的年代

13
00:00:43,776 --> 00:00:46,592
统治全世界的个人电脑上面的

14
00:00:46,848 --> 00:00:49,152
作业操作系统是ms-dos

15
00:00:49,920 --> 00:00:51,968
另外一个版本是PC Plus

16
00:00:52,480 --> 00:00:56,320
微软公司出品的那个东西

17
00:00:56,832 --> 00:00:58,368
这个操作系统

18
00:00:58,624 --> 00:01:01,696
由于当时的硬件的环境是

19
00:01:01,952 --> 00:01:06,816
它是架构在8086 8088质量的芯片之下

20
00:01:07,584 --> 00:01:10,912
所以这个操作系统所能够看到的内存

21
00:01:11,424 --> 00:01:12,192
只有

22
00:01:12,448 --> 00:01:13,216
因为港

23
00:01:14,496 --> 00:01:15,264
Email

24
00:01:16,288 --> 00:01:17,056
不管你

25
00:01:17,312 --> 00:01:18,592
能购买多少的应

26
00:01:18,848 --> 00:01:20,896
这个硬件内存内存条

27
00:01:21,408 --> 00:01:23,200
猴子你看你那个

28
00:01:25,504 --> 00:01:27,808
何况当时的内存条也非常的贵

29
00:01:31,648 --> 00:01:33,696
后来在这个

30
00:01:33,952 --> 00:01:34,976
就有人发现

31
00:01:36,000 --> 00:01:38,048
其实觉得硬件

32
00:01:39,072 --> 00:01:40,352
芯片的发展

33
00:01:41,120 --> 00:01:42,656
已经到了80286

34
00:01:43,680 --> 00:01:48,544
刚刚提到的8086 8.88了后来已经到了80286 80386

35
00:01:49,056 --> 00:01:53,408
其实已经发的硬件的定制能力

36
00:01:53,664 --> 00:01:55,456
决定一只能力

37
00:01:56,224 --> 00:01:58,272
早就已经超过1美元

38
00:01:59,296 --> 00:02:02,880
但是操作系统并没有随着进步

39
00:02:03,136 --> 00:02:05,184
他仍然只能看到的美感

40
00:02:06,208 --> 00:02:11,328
并由其它只能看到emacs里面的前面的640k

41
00:02:11,584 --> 00:02:17,728
现在的你可能很难想象这640x的小我们到底能写出什么程序呢

42
00:02:18,752 --> 00:02:24,128
不过在当时在这样的环境下仍然开发了很多很好的软件

43
00:02:24,896 --> 00:02:31,040
所以这个人类在不同的环境比较都不能够都能够运作都能够生

44
00:02:32,064 --> 00:02:33,344
好

45
00:02:33,856 --> 00:02:35,904
在当时就有人想这个

46
00:02:36,672 --> 00:02:38,976
如果这硬件其实已经提升了

47
00:02:39,488 --> 00:02:44,096
有没有什么办法能够让boss看过一点超过与美感

48
00:02:45,632 --> 00:02:51,776
虽然想一些办法我简单的讲一下就是他把这个地址线的的20条的直线a 20

49
00:02:53,056 --> 00:02:54,080
打开来

50
00:02:55,104 --> 00:03:01,248
这样就让肚子能够看到好像挖了一个洞能够看到比较多的内存在

51
00:03:01,504 --> 00:03:04,576
在当时这也就是让所有的人

52
00:03:05,344 --> 00:03:08,160
个人电脑上面的程序员的欣喜若狂

53
00:03:09,184 --> 00:03:10,720
这个是当年的时代

54
00:03:12,512 --> 00:03:13,536
那么在

55
00:03:13,792 --> 00:03:16,096
你有这个技术在当时都喊

56
00:03:16,352 --> 00:03:22,496
算是很很先进的所以有些人不太知道很多人不知道所以在当时的

57
00:03:22,752 --> 00:03:25,824
的环境里下了就是想尽办法去

58
00:03:26,080 --> 00:03:27,616
孙洁一些

59
00:03:27,872 --> 00:03:28,640
内存

60
00:03:29,664 --> 00:03:30,944
到什么程度呢

61
00:03:31,712 --> 00:03:33,504
几个字给他都要考量

62
00:03:34,272 --> 00:03:39,648
当时的环境我就不太胖太多了有一些做法的电脑不启动

63
00:03:40,160 --> 00:03:43,488
Msports一启动的时候要去看一个文件

64
00:03:43,744 --> 00:03:49,888
在文件里面的设定这样设定会那样设定会造成了多消耗了几个字节

65
00:03:50,144 --> 00:03:53,728
第4个字节700个字节这连这个

66
00:03:54,240 --> 00:03:55,776
大家都斤斤计较

67
00:03:57,312 --> 00:04:01,664
所以当时就是一个蜘蛛必叫子的

68
00:04:03,968 --> 00:04:04,736
却能

69
00:04:04,992 --> 00:04:05,760
随着

70
00:04:06,272 --> 00:04:10,368
1990年之后Windows 3.0席卷全球

71
00:04:10,624 --> 00:04:13,696
带来的这个蜂巢所以这个

72
00:04:14,976 --> 00:04:17,024
32位的16位的

73
00:04:17,280 --> 00:04:22,143
操作系统是18位的八个八个八位

74
00:04:22,655 --> 00:04:25,983
32时26位到32位

75
00:04:26,495 --> 00:04:28,799
引进了这样的技术之后

76
00:04:29,055 --> 00:04:30,079
终于

77
00:04:31,103 --> 00:04:32,639
那是过去那些

78
00:04:32,895 --> 00:04:34,175
好玩的事情

79
00:04:34,431 --> 00:04:35,199
走过去啊

80
00:04:35,967 --> 00:04:37,247
俱往矣

81
00:04:37,503 --> 00:04:38,783
且看今朝

82
00:04:39,295 --> 00:04:45,183
现在我们谈的终于在这个很好像很幽默的环境里下那种非常的多

83
00:04:46,207 --> 00:04:47,743
操作系统看得到

84
00:04:47,999 --> 00:04:50,303
而我们买内存的也很便宜

85
00:04:51,583 --> 00:04:53,375
但是在这种情况之下呢

86
00:04:55,679 --> 00:05:01,823
内存的管理仍然是一个很严肃的话题是跟操作系统的超一种层次

87
00:05:02,079 --> 00:05:02,847
有关

88
00:05:04,127 --> 00:05:07,455
我们也不能说非常刻意地浪费其实

89
00:05:08,479 --> 00:05:14,623
等到这个门客人讲完你就会知道也许你其实已经自己不需要做太多的内存管理

90
00:05:14,879 --> 00:05:21,023
因为我带你去看的那一些你所用的库那些malloc那些函数做了飞

91
00:05:21,279 --> 00:05:22,047
非常好

92
00:05:22,303 --> 00:05:27,423
最深的一种管理的任务是提到那个地方去有人先帮你做

93
00:05:28,703 --> 00:05:30,239
水

94
00:05:30,495 --> 00:05:36,639
当他讲过长到最大非常的鱼的一个聪明的一个环境里下的这个内存管理机制还是

95
00:05:36,895 --> 00:05:39,967
非常严肃的话题拔高了

96
00:05:40,735 --> 00:05:42,015
操作系统层面

97
00:05:42,271 --> 00:05:43,295
标准库的层面

98
00:05:46,879 --> 00:05:47,647
现在我们

99
00:05:48,671 --> 00:05:50,975
正式的进入极度的部分

100
00:05:52,511 --> 00:05:54,559
这张图引导大家

101
00:05:55,583 --> 00:05:57,375
你到底是落在哪一个位置呢

102
00:05:58,399 --> 00:06:00,447
这个是cplusplus application

103
00:06:01,727 --> 00:06:05,055
把绝大部分的程序员是在这个

104
00:06:05,567 --> 00:06:06,591
层次上面

105
00:06:07,615 --> 00:06:08,639
写应用程序

106
00:06:09,663 --> 00:06:12,479
好当你需要内存的时候

107
00:06:14,015 --> 00:06:16,831
你可能是直接调用没了

108
00:06:21,439 --> 00:06:23,999
你也可能是这条路线

109
00:06:25,791 --> 00:06:28,863
用的是cplusplus提供的一些基本的东西

110
00:06:30,655 --> 00:06:33,727
这里面就已经出现一些很多人不熟悉的东西了

111
00:06:33,983 --> 00:06:35,519
没有大家熟悉

112
00:06:36,031 --> 00:06:38,591
这个礼拜的中括号这个叫瑞宁

113
00:06:39,103 --> 00:06:42,431
你要创建一个一个一个数组的时候

114
00:06:42,687 --> 00:06:44,991
用是一个这个大家也很熟悉

115
00:06:46,015 --> 00:06:49,855
这个事情后面加小括号这个就很多人不熟悉了

116
00:06:51,391 --> 00:06:55,999
然后面这一个还有点点点这些通通都是cplusplus中的

117
00:06:56,255 --> 00:06:58,559
Freemicaps一些基本工具

118
00:06:58,815 --> 00:07:00,863
你也可能走这条路

119
00:07:04,191 --> 00:07:08,031
到最高阶的是你使用C加加标准库

120
00:07:09,567 --> 00:07:12,383
播放你用的就是容器和算法

121
00:07:13,151 --> 00:07:14,431
这个容器

122
00:07:14,687 --> 00:07:20,063
它允许你任意的你就不用再担心内存了你就是任意的把元素放进去

123
00:07:21,343 --> 00:07:21,855
你

124
00:07:22,623 --> 00:07:28,767
在使用容器的时候好像没感觉到内存有这种问题存在方方面面的问题存在

125
00:07:29,023 --> 00:07:30,047
在你没有感觉

126
00:07:30,559 --> 00:07:33,119
那其实是因为他背后有个分配器

127
00:07:34,655 --> 00:07:35,423
所以

128
00:07:35,935 --> 00:07:40,287
你可以走这一条这条那他会往下就是调用这一个

129
00:07:40,543 --> 00:07:42,335
这个往下是这样子一个

130
00:07:42,591 --> 00:07:43,359
所以

131
00:07:45,663 --> 00:07:46,687
天罗地网

132
00:07:47,711 --> 00:07:50,015
所有的动作最后都跑到这里来

133
00:07:51,807 --> 00:07:52,575
阿兰

134
00:07:52,831 --> 00:07:53,855
这边还有一条路

135
00:07:54,623 --> 00:07:58,207
你也可以也可能

136
00:07:58,463 --> 00:08:01,535
去调用操作系统提供的内存的

137
00:08:02,303 --> 00:08:03,327
系统调用

138
00:08:03,583 --> 00:08:06,655
现在Windows下那叫到CK

139
00:08:06,911 --> 00:08:09,215
更底层的有多少k

140
00:08:11,007 --> 00:08:12,799
这个当然就知道够了没落可能

141
00:08:14,335 --> 00:08:18,175
一般来讲我们写应用程序是不会到这么低价的

142
00:08:18,687 --> 00:08:24,063
你这么低级的话那你的程序也就不大的可移植性

143
00:08:26,367 --> 00:08:28,927
你就跟我一个操作系统放在一起

144
00:08:30,463 --> 00:08:34,303
一来我们不希望被绑在一起绑死

145
00:08:34,559 --> 00:08:37,375
二奶奶这里也未免太低级了1点

146
00:08:38,911 --> 00:08:41,983
所以我们这门课程探讨的是到这里为止

147
00:08:45,055 --> 00:08:46,847
而下面这一个呢

148
00:08:48,127 --> 00:08:49,663
我有另外一门课程

149
00:08:50,431 --> 00:08:54,271
来探讨在Windows下对内存的管理

150
00:08:54,783 --> 00:08:59,135
这是两个成都的结合在一起是整张图就是通透的理解

151
00:09:00,927 --> 00:09:05,023
我们的课程现在是进行的是定位的这个之上

152
00:09:06,303 --> 00:09:10,399
所以首先让大家理解到没了可是多么的重要

153
00:09:11,167 --> 00:09:12,191
他们都跑到他的

154
00:09:12,447 --> 00:09:13,983
肩膀上来操作

155
00:09:16,799 --> 00:09:18,591
我们来谈一谈

156
00:09:19,871 --> 00:09:23,711
Cosmetic的太复杂了我们不能一开始就谈没了太复杂了

157
00:09:24,735 --> 00:09:26,527
现在谈一谈在这之上的

158
00:09:27,039 --> 00:09:28,575
这是刚刚这张图

159
00:09:28,831 --> 00:09:29,855
这部分

160
00:09:30,111 --> 00:09:31,391
我们的第1讲

161
00:09:31,647 --> 00:09:35,487
就是要常兴家家primitives就是这些东西

162
00:09:38,047 --> 00:09:39,583
这些东西

163
00:09:40,607 --> 00:09:42,399
我在这张图片上

164
00:09:42,911 --> 00:09:44,191
做了一个表格

165
00:09:46,239 --> 00:09:48,287
做了一个分类

166
00:09:48,543 --> 00:09:49,823
有哪些东西呢

167
00:09:50,335 --> 00:09:55,711
你可以直接调用的你的primitive上的直接的工具你可以调用malloc

168
00:09:55,967 --> 00:09:56,991
推荐应用

169
00:09:57,247 --> 00:09:59,039
黑掉afternoon

170
00:09:59,295 --> 00:10:05,439
这个叫大家比较陌生了这其实你就把它看成是一个函数不是这样还是名称

171
00:10:05,695 --> 00:10:07,487
很特别的两个字的组合

172
00:10:08,511 --> 00:10:10,303
就是这就是一个还是处

173
00:10:11,327 --> 00:10:17,471
你也可以通过分配器里面的某个函数来取得一块内存

174
00:10:18,495 --> 00:10:21,055
这些都被归类为什么

175
00:10:21,567 --> 00:10:23,359
基本工具

176
00:10:25,407 --> 00:10:26,943
那么这里是分配

177
00:10:27,967 --> 00:10:29,759
跟它相对应的就是放

178
00:10:30,271 --> 00:10:32,319
能够列出来我就不再念一遍了

179
00:10:34,367 --> 00:10:37,951
而这些这四样东西他是属于什么呢

180
00:10:38,207 --> 00:10:40,511
这个是属于11的函数

181
00:10:41,023 --> 00:10:43,839
Crcc runtimelibrary的股份

182
00:10:44,095 --> 00:10:48,191
这个命是属于新家家的Express表达式

183
00:10:49,215 --> 00:10:53,311
这个operator的我刚刚说了他这个函数就是

184
00:10:53,823 --> 00:10:55,615
是一家家的一个标准函数

185
00:10:56,127 --> 00:10:58,943
这可能只是标准库的一部分

186
00:10:59,199 --> 00:11:00,735
类似这样

187
00:11:02,783 --> 00:11:04,063
最右边这里

188
00:11:04,319 --> 00:11:07,391
这些东西可不可以被重新定义

189
00:11:09,951 --> 00:11:13,535
没老婆你不能重新定义令你也不能重新定义

190
00:11:14,047 --> 00:11:15,583
他是第3个可以

191
00:11:16,351 --> 00:11:18,143
一下我就会带大家去看看

192
00:11:18,911 --> 00:11:21,471
这个怎么样你要自己去改变它的

193
00:11:23,007 --> 00:11:24,031
第4个人

194
00:11:24,287 --> 00:11:26,847
第4个不能叫做重色

195
00:11:27,871 --> 00:11:30,687
你可以自己自由的设计一个

196
00:11:32,991 --> 00:11:39,135
设计好之后做什么药就可以拿来搭配分配搭配容器有一个很简单的语法让热

197
00:11:39,391 --> 00:11:40,927
容器来使用

198
00:11:41,183 --> 00:11:44,767
现在先做出来的这一个分配器

199
00:11:45,279 --> 00:11:47,327
只要我们不能叫做虫子

200
00:11:50,655 --> 00:11:52,191
这个是所有的

201
00:11:52,447 --> 00:11:55,775
我们手上可以用的这个基础工具

202
00:11:57,055 --> 00:12:00,383
接下来我们就来看看我就写那个很小的例子

203
00:12:00,895 --> 00:12:02,175
把这四个东西

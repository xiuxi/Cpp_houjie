1
00:00:05,632 --> 00:00:06,656
我不要查到这个

2
00:00:06,912 --> 00:00:07,936
Hello Kitty Park

3
00:00:08,960 --> 00:00:11,520
这段代码刚讲到这个指针

4
00:00:12,800 --> 00:00:14,336
在下面这一小块

5
00:00:14,592 --> 00:00:18,432
我竟然把超出来了这个也是我要讲的东西

6
00:00:19,200 --> 00:00:23,808
这里头他调用了memories that

7
00:00:24,320 --> 00:00:25,344
做什么事情

8
00:00:25,600 --> 00:00:31,232
还要把自己的这些有些特定的地方的前一些特定的直径去

9
00:00:31,744 --> 00:00:33,536
钱哪些词呢

10
00:00:55,552 --> 00:00:57,088
是这个FB

11
00:00:58,624 --> 00:01:01,952
如果将来回收的前提的

12
00:01:03,232 --> 00:01:07,584
如果是清除的这个死亡跟清楚是怎么

13
00:01:07,840 --> 00:01:09,632
怎么去跟这个后头

14
00:01:09,888 --> 00:01:10,912
我们再看看

15
00:01:11,424 --> 00:01:12,960
现在还没用到

16
00:01:13,216 --> 00:01:16,032
因为这个地方的都是是无人区的

17
00:01:17,312 --> 00:01:18,080
充值

18
00:01:19,104 --> 00:01:20,640
这边有这个

19
00:01:22,432 --> 00:01:23,968
Available

20
00:01:24,736 --> 00:01:28,832
这个地方再给大家概念就是

21
00:01:29,088 --> 00:01:32,160
有些地方已经试了一定的直径去

22
00:01:33,184 --> 00:01:34,464
这样将来

23
00:01:34,720 --> 00:01:38,304
Socket调试器材能够去检测

24
00:01:38,560 --> 00:01:41,888
这个内容有没有被改变也就是被破坏

25
00:01:43,936 --> 00:01:45,728
一些特定地址

26
00:01:46,240 --> 00:01:52,384
我想各位可能都有经验你在如果你是使用Win10的话你在VCD下用

27
00:01:52,640 --> 00:01:56,480
调试器去看内存的当然会出现一些奇怪的字

28
00:01:56,992 --> 00:01:59,808
这个中文是可是我也不会念好像念

29
00:02:00,320 --> 00:02:06,464
当当当还是反正很奇怪的是那个字就是就是这些特殊符号

30
00:02:06,976 --> 00:02:09,280
华为中文字结果

31
00:02:15,168 --> 00:02:21,312
我们继续往下看是现在谈的是这个函数把这个函数然后进入下一个函数

32
00:02:22,592 --> 00:02:23,360
Bass

33
00:02:24,384 --> 00:02:30,272
我这个是一张一张的投影片的是有连续变化所以各位可以像我这样子啊看看

34
00:02:32,320 --> 00:02:33,344
这个

35
00:02:33,856 --> 00:02:38,976
调颜色地方就可以清楚的知道我在正在进入到哪一个函数之中

36
00:02:40,768 --> 00:02:42,304
进入这一个函数

37
00:02:43,072 --> 00:02:44,608
做的是这个事情

38
00:02:45,120 --> 00:02:46,912
这个前头已经出现过了

39
00:02:47,936 --> 00:02:50,752
电子文档的好处就是不会浪费纸

40
00:02:51,264 --> 00:02:53,312
是我这边就在再放一次

41
00:02:53,568 --> 00:02:55,872
从不要往前跳这样子来去聚会

42
00:02:56,128 --> 00:02:56,896
眼花缭乱

43
00:02:57,152 --> 00:02:57,920
再放1次

44
00:02:59,456 --> 00:03:00,992
这里的做的事情是什么

45
00:03:01,248 --> 00:03:03,040
就把刚刚所

46
00:03:03,296 --> 00:03:08,928
扩充之后的大小再去比较这个时候这个门槛

47
00:03:10,208 --> 00:03:10,976
看看

48
00:03:11,744 --> 00:03:14,304
如果是他所定义的小

49
00:03:14,816 --> 00:03:16,864
那么就让sdhc服务

50
00:03:17,888 --> 00:03:19,936
如果比这个大的话就

51
00:03:20,192 --> 00:03:23,520
抱歉我不能服务了交给操作系统处理

52
00:03:24,032 --> 00:03:29,152
操作系统无论如何一定可以满足不管你要是多大多小

53
00:03:31,456 --> 00:03:32,480
好

54
00:03:32,992 --> 00:03:38,624
刚刚我们提到这个门槛就是一个常量定义是1016

55
00:03:39,136 --> 00:03:41,184
怎么会有一个这么奇怪的数字

56
00:03:42,464 --> 00:03:43,232
是这样

57
00:03:43,744 --> 00:03:46,304
其实他的所谓的小区块

58
00:03:46,560 --> 00:03:49,888
确实是1024 1024 11k

59
00:03:50,144 --> 00:03:51,936
一个很棒的很漂亮的

60
00:03:52,704 --> 00:03:53,472
数字

61
00:03:55,008 --> 00:03:57,312
这里为什么是1016的

62
00:03:58,080 --> 00:04:00,640
因为它的前面把这个block

63
00:04:01,664 --> 00:04:02,944
整理好之后

64
00:04:04,736 --> 00:04:06,784
其实还在往前看是这个

65
00:04:08,064 --> 00:04:11,136
上下还要在家

66
00:04:11,904 --> 00:04:13,184
这张天气啊

67
00:04:14,208 --> 00:04:17,536
他的这张图已经先先进步加上去了

68
00:04:18,047 --> 00:04:20,863
其实到目前是还没有加这个工具

69
00:04:22,655 --> 00:04:25,471
所以再往下我们在谈论这个事情

70
00:04:26,495 --> 00:04:29,567
还没有加工品但是已经收到控制

71
00:04:29,823 --> 00:04:30,591
八个字节

72
00:04:31,871 --> 00:04:32,639
所以

73
00:04:34,431 --> 00:04:39,039
我这个东西加了cookie之后如果小于1024

74
00:04:39,807 --> 00:04:41,855
那就是叫做小区块

75
00:04:42,879 --> 00:04:46,975
但我现在还没有家庭所以我要比较的是1016

76
00:04:47,487 --> 00:04:51,839
月16大与24之间插巴巴就是这个cookie的大小

77
00:04:53,887 --> 00:04:59,263
他要再比对通过之后的更下一步才会去加上古迹

78
00:05:00,287 --> 00:05:01,823
这里是现出判断

79
00:05:05,407 --> 00:05:06,943
为什么有这个奇怪的

80
00:05:07,199 --> 00:05:07,967
数次

81
00:05:10,527 --> 00:05:12,319
好吧假设我们

82
00:05:13,343 --> 00:05:16,671
通常都是拿小区块的话那就都会通过

83
00:05:17,439 --> 00:05:22,559
世上现在我们正在讨论的是covid-19的第1次内存分配需求

84
00:05:22,815 --> 00:05:28,959
他的申请申请是多大呢256个字节却是满足这个条件

85
00:05:30,495 --> 00:05:32,031
所以就继续往下了

86
00:05:32,799 --> 00:05:35,103
继续往下看下一个动作

87
00:05:36,127 --> 00:05:37,407
注意这个颜色的变化

88
00:05:38,943 --> 00:05:41,503
现在执行的是下一个动作了

89
00:05:42,015 --> 00:05:46,623
这一个函数里头所做的一个关键动作在这里

90
00:05:48,927 --> 00:05:54,559
把他得到了大小再进一步的做什么事都得到了大小的这里

91
00:05:56,351 --> 00:05:57,887
加上二

92
00:05:58,143 --> 00:05:59,679
城里栽种

93
00:05:59,935 --> 00:06:00,447
Integer

94
00:06:00,703 --> 00:06:03,519
这个就是这个

95
00:06:07,871 --> 00:06:10,175
拍照并且94个自己

96
00:06:10,943 --> 00:06:13,247
加完之后

97
00:06:14,015 --> 00:06:15,807
下面有一堆奇怪的动作

98
00:06:17,599 --> 00:06:21,695
但是我可以告诉你他就是在做round-up

99
00:06:22,719 --> 00:06:25,791
在第2讲里面谈到分配器的时候提过

100
00:06:26,559 --> 00:06:32,703
有一个Round up的动作就是一个调整到某一个边界和网上调调的比较多一些

101
00:06:33,727 --> 00:06:36,543
这里的调整是要把它调到

102
00:06:37,055 --> 00:06:38,079
这个数字

103
00:06:38,847 --> 00:06:40,895
His first paragraph

104
00:06:41,663 --> 00:06:43,199
这个数字就是16

105
00:06:43,711 --> 00:06:46,015
在他的整个订一条是有的

106
00:06:48,319 --> 00:06:50,367
所以这边带给大家的观念

107
00:06:51,135 --> 00:06:53,695
这里头他所处理的每一个block

108
00:06:53,951 --> 00:06:57,535
被他整理过调整过之后放大过之后的block

109
00:06:58,815 --> 00:07:00,351
失败的上下估计

110
00:07:02,143 --> 00:07:07,263
加完之后如果不是16的倍数就要调到16的倍数

111
00:07:09,311 --> 00:07:15,455
因为他的设计不能够无止境的食物如他也为你服务是三这种奇怪的数字他也为

112
00:07:15,711 --> 00:07:16,735
为你服务没有

113
00:07:16,991 --> 00:07:18,527
说他都是16的倍数

114
00:07:23,135 --> 00:07:26,207
像我们就很清楚了好吧这些东西现在搞清楚了

115
00:07:27,231 --> 00:07:30,815
我们去想象一下我们再分配内存的时候

116
00:07:31,071 --> 00:07:32,351
如果进入我们的LINE

117
00:07:32,607 --> 00:07:36,447
现在还没进入了好好享受这个都完成了进入面

118
00:07:37,215 --> 00:07:38,239
我malik

119
00:07:39,263 --> 00:07:42,079
在debug模式的下午malloc

120
00:07:42,335 --> 00:07:43,615
要三个字节

121
00:07:44,639 --> 00:07:48,991
系统应该很清楚了其实你拿到多大的一块block

122
00:07:49,247 --> 00:07:51,807
一个内存块是多大你现在应该很清楚了

123
00:07:52,063 --> 00:07:54,111
你应该把3

124
00:07:54,879 --> 00:07:58,975
加上上下这些东西加完再调到16的边界

125
00:07:59,231 --> 00:08:00,511
应该如此

126
00:08:02,047 --> 00:08:06,143
你真的骑士确实是拿到三个指针指向这个地方

127
00:08:07,167 --> 00:08:08,447
在筷子上

128
00:08:09,471 --> 00:08:11,519
但是下面会有一些Pad

129
00:08:11,775 --> 00:08:12,543
一些

130
00:08:12,799 --> 00:08:14,079
全部的东西

131
00:08:14,335 --> 00:08:16,639
上头有这些都是消耗掉了

132
00:08:17,407 --> 00:08:20,223
当使用者看不到但是真正消耗掉的

133
00:08:22,527 --> 00:08:26,111
现在我们就很清楚怎么去计算一个block的大小

134
00:08:27,135 --> 00:08:32,255
我刚提供在这个系统不落可这个字就是最消耗掉的这一种

135
00:08:32,511 --> 00:08:33,535
我们再试一次

136
00:08:34,047 --> 00:08:35,327
计算这个大小

137
00:08:36,351 --> 00:08:39,423
不是第1次发出来的还有还有IPO

138
00:08:40,191 --> 00:08:42,239
二大小时100h

139
00:08:45,055 --> 00:08:45,567
好

140
00:08:46,335 --> 00:08:48,127
100h

141
00:08:48,895 --> 00:08:50,175
加上

142
00:08:50,943 --> 00:08:52,991
上下两块

143
00:08:53,759 --> 00:08:55,295
给调试器用的

144
00:08:57,087 --> 00:08:59,135
这是多少这个是32

145
00:08:59,647 --> 00:09:03,743
12345678八个432

146
00:09:04,255 --> 00:09:06,047
厦门这个事

147
00:09:06,303 --> 00:09:08,351
32 + 46

148
00:09:08,863 --> 00:09:11,679
36就是24 h

149
00:09:13,983 --> 00:09:20,127
我们能够习惯16进位的加法只有敬畏的乘法我相信没有人

150
00:09:20,383 --> 00:09:26,527
手机打16斤为的加法和减法能够熟悉的话其实挺好的

151
00:09:26,783 --> 00:09:29,855
所以这个36其实就是二次元

152
00:09:31,647 --> 00:09:33,183
好还要再加什么

153
00:09:33,439 --> 00:09:34,719
上下股票

154
00:09:36,511 --> 00:09:42,655
加完之后是12c会慢慢加了夹板之后是12 C 12 c

155
00:09:42,911 --> 00:09:44,191
不是16的倍数

156
00:09:45,215 --> 00:09:48,031
16的倍数是最后一个一定是0

157
00:09:48,799 --> 00:09:53,919
谁是很容易调12c就往上调调成130这就是这一整块

158
00:09:55,711 --> 00:09:58,271
3130将会在后头

159
00:09:58,783 --> 00:10:00,063
A记录到这里

160
00:10:02,367 --> 00:10:03,135
130

161
00:10:04,159 --> 00:10:06,207
他是为什么是131呢

162
00:10:06,719 --> 00:10:09,535
因为这一块将要吃药给出去的

163
00:10:11,071 --> 00:10:12,607
这个系统就利用

164
00:10:12,863 --> 00:10:13,887
最后一个地址

165
00:10:14,655 --> 00:10:18,495
这个既然是16的倍数所以最后四个字

166
00:10:18,751 --> 00:10:20,287
四位都是你

167
00:10:20,799 --> 00:10:22,079
最后一定是你

168
00:10:22,335 --> 00:10:27,711
这家用最后的一个B指令和1来表现是

169
00:10:27,967 --> 00:10:30,527
在他的手上还是已经给出去了

170
00:10:31,551 --> 00:10:34,879
将来这一块可能还给操作系统

171
00:10:35,391 --> 00:10:37,951
不是操作系统还给sdh

172
00:10:38,207 --> 00:10:43,839
还给他的说他这一整块回收他这个就把这里改成1301 30

173
00:10:45,119 --> 00:10:47,167
表示是在他的掌控之中

174
00:10:49,983 --> 00:10:50,751
所以

175
00:10:51,775 --> 00:10:55,871
我引导大家去看的一块内存分配

176
00:10:56,639 --> 00:11:02,015
从这个地方到这里这里这里这里这里现在到这里区是在

177
00:11:02,271 --> 00:11:05,599
计算它的真正的区块的大小

178
00:11:06,623 --> 00:11:08,415
还没有分配的内存

179
00:11:08,671 --> 00:11:11,999
更不要提要设这些词都还没有

180
00:11:13,279 --> 00:11:14,559
接下去

181
00:11:15,071 --> 00:11:17,631
才是真的要拿那种快乐

182
00:11:18,143 --> 00:11:21,215
而那个复杂的sdh主要长出来了

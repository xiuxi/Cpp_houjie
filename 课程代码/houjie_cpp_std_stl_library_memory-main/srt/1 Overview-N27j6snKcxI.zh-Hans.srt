1
00:00:03,840 --> 00:00:06,144
好大家好我是何洁

2
00:00:07,168 --> 00:00:09,984
我现在要讲什么可是内存管理

3
00:00:10,496 --> 00:00:11,264
首先

4
00:00:12,800 --> 00:00:14,080
给大家选了这门课程

5
00:00:15,360 --> 00:00:17,408
这个课程是一个

6
00:00:18,944 --> 00:00:20,736
主题很特殊的课程

7
00:00:20,992 --> 00:00:23,808
你会关注到这个主题表示你的

8
00:00:24,064 --> 00:00:29,696
技术层面应该到了一个第1个层次你才会关注到这个话题了

9
00:00:29,952 --> 00:00:31,232
其次

10
00:00:32,512 --> 00:00:33,792
你学的什么课程

11
00:00:34,304 --> 00:00:35,328
我有信心

12
00:00:36,608 --> 00:00:38,400
把他家的这个城市

13
00:00:38,912 --> 00:00:39,936
把你的层次

14
00:00:40,192 --> 00:00:41,984
拔高到一个非常

15
00:00:42,240 --> 00:00:44,288
高的一个境界

16
00:00:45,824 --> 00:00:50,944
这个课程的标注标题的重型的到万丈高楼

17
00:00:52,224 --> 00:00:55,040
谁敢说自己的课程是万丈高楼呢

18
00:00:56,576 --> 00:00:57,344
我敢

19
00:00:58,624 --> 00:01:00,928
这一门课程要让大家

20
00:01:01,696 --> 00:01:02,976
从屏蔽

21
00:01:03,232 --> 00:01:04,512
好万丈高楼

22
00:01:05,024 --> 00:01:05,792
从

23
00:01:06,560 --> 00:01:07,584
基本的

24
00:01:08,096 --> 00:01:08,864
对于

25
00:01:09,120 --> 00:01:15,264
Cplusplus内存内存在cplusplus领域里头怎么去分配内存的最近

26
00:01:15,520 --> 00:01:16,544
基本的一些工具

27
00:01:17,568 --> 00:01:18,848
一直到

28
00:01:19,616 --> 00:01:22,176
很高阶的怎么去管理它

29
00:01:22,688 --> 00:01:27,552
包括对于标准库里投的分配器是怎么管理的

30
00:01:28,576 --> 00:01:30,112
包括对于

31
00:01:31,136 --> 00:01:32,416
最底层的

32
00:01:33,184 --> 00:01:39,328
Memory allocation要malik这个函数大家很熟悉的函数这里头是怎么关

33
00:01:39,584 --> 00:01:40,352
你内存的

34
00:01:41,632 --> 00:01:44,448
我们都要很深入的去看他的

35
00:01:44,704 --> 00:01:45,216
动作

36
00:01:46,240 --> 00:01:50,848
从这些动作从这些学习里面我们也就能够很清楚的知道

37
00:01:52,384 --> 00:01:54,176
我们到底还要不要做那种管理

38
00:01:56,480 --> 00:01:58,528
也许我们印象中我们认为

39
00:01:59,040 --> 00:02:00,320
需要做的管理

40
00:02:00,576 --> 00:02:02,624
其实我们再用了这些东西

41
00:02:03,904 --> 00:02:04,672
标准库

42
00:02:05,696 --> 00:02:06,464
函数

43
00:02:06,720 --> 00:02:08,000
都已经做到了

44
00:02:09,280 --> 00:02:12,096
随身过程里头你不但可以知道

45
00:02:13,632 --> 00:02:14,400
这些

46
00:02:14,912 --> 00:02:17,472
业界知名的这些管理器

47
00:02:18,496 --> 00:02:19,776
他们是怎么做的

48
00:02:20,032 --> 00:02:23,104
他作为一个他山之石可以攻错

49
00:02:24,384 --> 00:02:26,944
另外一方面也可以检讨或许你

50
00:02:27,456 --> 00:02:30,016
心中的那些印象是错误的

51
00:02:30,272 --> 00:02:33,344
也许你再也不必做任何管理了因为那些管理已经够了

52
00:02:35,136 --> 00:02:41,280
所以从刚刚的这个一年里面我想大家可以吃到这个课程的诉求

53
00:02:42,816 --> 00:02:45,888
我这个英文的副标题是memory

54
00:02:46,144 --> 00:02:46,912
Management

55
00:02:47,168 --> 00:02:47,936
101

56
00:02:48,704 --> 00:02:53,824
在英文世界里头101就一直就是包罗万象什么都有

57
00:02:55,104 --> 00:03:00,480
所以我会带大家从平的到一个非常拔高到一个非常高的境界

58
00:03:01,504 --> 00:03:02,784
整个课程

59
00:03:03,296 --> 00:03:04,832
我分为好几家

60
00:03:05,088 --> 00:03:08,160
我们今天的一讲它的是primitive

61
00:03:08,672 --> 00:03:10,976
就是基础工具

62
00:03:12,000 --> 00:03:18,144
我*盘在所谓的基础工具就是你在C在家里面你要动态分配一块内存你大概

63
00:03:18,400 --> 00:03:19,168
为什么做

64
00:03:19,936 --> 00:03:21,728
你可能会调用命

65
00:03:22,496 --> 00:03:24,288
再用铁的发票

66
00:03:24,800 --> 00:03:25,568
要用

67
00:03:26,336 --> 00:03:30,432
等等等一些工具后面就会全部都介绍一遍

68
00:03:30,688 --> 00:03:32,736
所有的工具中介绍一点

69
00:03:32,992 --> 00:03:35,296
这个是多么的逼你讲primitive

70
00:03:36,064 --> 00:03:37,344
后面这几讲

71
00:03:37,856 --> 00:03:42,464
我现在把它弄成灰色的慢慢出现你就会看到

72
00:03:42,720 --> 00:03:45,792
我就会引导你带你去看没落贵

73
00:03:46,048 --> 00:03:47,584
一步的动作

74
00:03:48,608 --> 00:03:51,680
带你去看标准库分配器的工作

75
00:03:52,960 --> 00:03:56,288
带你去看其他的分配器的底部动作

76
00:03:57,056 --> 00:04:03,200
Rc5讲了那你是看looking另外一套我认为非常棒的

77
00:04:03,456 --> 00:04:06,784
分配器阿里特有的autocad里面的动作

78
00:04:08,832 --> 00:04:13,696
那么我们在写C加加程序的时候大概你脱离不了

79
00:04:14,464 --> 00:04:15,744
你会用到

80
00:04:16,512 --> 00:04:17,280
你会用到

81
00:04:17,791 --> 00:04:19,327
什么东西

82
00:04:19,839 --> 00:04:21,631
你也脱离不了标准库

83
00:04:22,911 --> 00:04:23,423
最

84
00:04:23,679 --> 00:04:28,287
在讲这些东西里头我都会深入到源代码的层次

85
00:04:29,311 --> 00:04:31,871
我们的诉求就是希望

86
00:04:32,895 --> 00:04:35,455
胸中自有求和

87
00:04:36,223 --> 00:04:40,319
你所做的每一件跟内存相关的事情

88
00:04:41,599 --> 00:04:43,647
你心里头都非常清楚

89
00:04:44,159 --> 00:04:45,439
它的来龙去脉

90
00:04:45,951 --> 00:04:46,975
足球

91
00:04:50,559 --> 00:04:51,839
M

92
00:04:52,351 --> 00:04:53,887
这句话想跟大家共勉

93
00:04:54,143 --> 00:04:55,935
万丈高楼平地起

94
00:04:56,447 --> 00:04:59,519
中国人都理解这句话你再多说

95
00:05:01,055 --> 00:05:02,847
这句话我很喜欢

96
00:05:03,359 --> 00:05:04,383
跟大家分享

97
00:05:05,407 --> 00:05:07,455
源码之前了无秘密

98
00:05:07,967 --> 00:05:11,039
只有我们怎么整个课程谈的

99
00:05:11,295 --> 00:05:11,807
都市

100
00:05:12,831 --> 00:05:15,135
奠基于对源码的理解

101
00:05:15,391 --> 00:05:20,255
Malik他是一个怎么复杂的动作呢因为我看过了源代码

102
00:05:21,023 --> 00:05:25,887
分配其他又是一个怎么复杂的动作了因为我看过的源代码

103
00:05:26,399 --> 00:05:29,727
所以我能够跟你讲这些东西都是很具体的东西

104
00:05:30,495 --> 00:05:31,519
我也会把

105
00:05:32,031 --> 00:05:34,591
必要的关键性代码

106
00:05:35,103 --> 00:05:36,127
呼出来

107
00:05:36,895 --> 00:05:40,223
看完这些东西都非常大我们是

108
00:05:40,479 --> 00:05:46,623
不可能也不必要在课程中来带着大家去看他的代码的写法没有

109
00:05:46,879 --> 00:05:47,647
有必要

110
00:05:47,903 --> 00:05:49,695
我已经把这大宝的动作

111
00:05:50,207 --> 00:05:56,351
尽可能的化身和我的化成更具一些具体的东西让你能够很快的

112
00:05:56,607 --> 00:05:57,631
去理解他们

113
00:06:01,471 --> 00:06:03,263
你应该具备这边的基础了

114
00:06:05,311 --> 00:06:09,151
你应该曾经动态分配并使用内存

115
00:06:12,735 --> 00:06:17,855
这样的话你你你才会有这个需求要选什么科

116
00:06:20,415 --> 00:06:23,999
最好你也曾经用过C加加标准库里面的容器

117
00:06:25,279 --> 00:06:28,607
这让我们这个技术的发展一直一

118
00:06:28,863 --> 00:06:31,167
一直追高追高到现在的

119
00:06:32,191 --> 00:06:35,519
其实很希望大家就是直接用标准库的容器

120
00:06:36,287 --> 00:06:38,591
不要再去关心到内存了

121
00:06:39,103 --> 00:06:45,247
在应用面上当然我们还是很希望大家都知道里头的运作来龙去脉

122
00:06:45,503 --> 00:06:46,783
雄中有一张图

123
00:06:47,039 --> 00:06:48,831
但是我们不用再去

124
00:06:49,343 --> 00:06:52,159
Secure那些很复杂的动作

125
00:06:52,671 --> 00:06:54,207
直接用容器

126
00:06:54,719 --> 00:07:00,863
而容器跟分配器跟这个内存有什么关系呢它背后有一个分配器allocated

127
00:07:01,119 --> 00:07:02,143
只是他

128
00:07:03,679 --> 00:07:09,823
在我们后面有一个重要的一家就是在谈容器背后那个分配器制作的动作

129
00:07:10,079 --> 00:07:10,591
做

130
00:07:11,359 --> 00:07:17,503
分配器有很多呀不同的编译器所在地标准库里吗

131
00:07:19,039 --> 00:07:21,855
他背后的分配器做法都不一样

132
00:07:22,879 --> 00:07:23,903
所以

133
00:07:25,183 --> 00:07:31,327
深入的去理解这些东西之后你就可以决定你要选择哪一套分配器

134
00:07:31,583 --> 00:07:33,887
来作为容器的支撑

135
00:07:34,399 --> 00:07:35,679
效率会最好

136
00:07:36,703 --> 00:07:39,007
所以这个基础的视屏

137
00:07:39,263 --> 00:07:45,407
不是很高啊你只要神经动态的去用国内

138
00:07:45,663 --> 00:07:50,271
纯然后想知道它的来龙去脉这样就可以了

139
00:07:52,319 --> 00:07:53,855
我们的目标是什么

140
00:07:55,391 --> 00:07:57,183
从平的到万丈高楼

141
00:07:57,951 --> 00:08:01,023
从最基础的C加加语言构建

142
00:08:01,279 --> 00:08:02,559
构建construct

143
00:08:02,815 --> 00:08:04,351
就是那些基本的

144
00:08:05,375 --> 00:08:11,519
工具呢我拉梅拉克兰等等固件

145
00:08:11,775 --> 00:08:15,615
一直到高知名度的内存管理器

146
00:08:16,127 --> 00:08:18,943
LG的那些allocate那些分配器

147
00:08:19,967 --> 00:08:24,575
能够很彻底的了解高高低低的方方面面

148
00:08:25,855 --> 00:08:28,671
每一件事情我了然于胸

149
00:08:30,975 --> 00:08:33,279
你需要什么工具吗

150
00:08:37,375 --> 00:08:40,447
由于这门课程是深入到那些

151
00:08:40,959 --> 00:08:46,335
Livery内裤以及C函数malloc的底部10座

152
00:08:46,847 --> 00:08:49,407
所以我们真正要去

153
00:08:49,919 --> 00:08:52,735
自己说当做点什么似的不太多

154
00:08:53,759 --> 00:08:59,903
但是足道反而是你如果手上有这些我要带着你去分析就看的

155
00:09:00,159 --> 00:09:04,511
这些知名的管理器的源代码

156
00:09:05,023 --> 00:09:06,047
对你有帮助

157
00:09:06,559 --> 00:09:09,375
我们自己要写代码倒是不太多

158
00:09:10,655 --> 00:09:12,447
M

159
00:09:12,959 --> 00:09:19,103
这一张画面出现的是个木斯这是我现在在用的上锁的一个宫

160
00:09:19,359 --> 00:09:19,871
名句

161
00:09:20,383 --> 00:09:22,687
倒不是要用它来开发程序

162
00:09:23,455 --> 00:09:26,783
而是他背后会带着个莫斯利的

163
00:09:28,063 --> 00:09:28,831
标准库

164
00:09:30,111 --> 00:09:35,487
所以当我看分析着他的分配器的做法的时候

165
00:09:36,767 --> 00:09:42,143
你也有机会如果有一套这个东西什么版本其实无所谓

166
00:09:42,399 --> 00:09:44,447
我才是4.9 28

167
00:09:44,703 --> 00:09:46,239
其实无所谓

168
00:09:46,751 --> 00:09:51,871
你手上有这个东西你就也可以像我这样去看它的源代码

169
00:09:55,199 --> 00:09:56,223
下面是1月

170
00:09:56,735 --> 00:09:58,783
这是Windows 7 Plus Plus

171
00:09:59,807 --> 00:10:02,367
我特别标出来6.0

172
00:10:04,415 --> 00:10:07,487
因为我后面要带你看malloc的动作

173
00:10:09,023 --> 00:10:12,863
我是看的是VC 6.0的源代码

174
00:10:13,887 --> 00:10:20,031
这个脉络可他并不属于sip落的一部分它是属于正的接地气的一部分

175
00:10:20,287 --> 00:10:23,871
Runtime library little的东西

176
00:10:25,151 --> 00:10:29,247
而我们看到这个东西吗可以的可以的这个

177
00:10:30,271 --> 00:10:35,903
你手上的兵器一定VC一定带着一个

178
00:10:36,159 --> 00:10:41,279
通常是放在教crt这样的子目录下

179
00:10:41,535 --> 00:10:42,559
你可以找找看

180
00:10:42,815 --> 00:10:45,119
我都找得到啊你一定也可以找得到

181
00:10:45,631 --> 00:10:47,679
更高版本的呢

182
00:10:48,191 --> 00:10:49,215
行为

183
00:10:49,471 --> 00:10:51,263
里面的原理

184
00:10:52,031 --> 00:10:58,175
其实都带这个是非常核心的东西万变不离其宗是不会改变

185
00:10:58,431 --> 00:11:02,271
但是可能会被抛的更会是一些

186
00:11:02,527 --> 00:11:04,831
以至于你不容易找

187
00:11:06,111 --> 00:11:07,135
所以

188
00:11:07,391 --> 00:11:10,975
如果你手上有这个版本PC 6.0的话

189
00:11:12,511 --> 00:11:13,023
走

190
00:11:13,279 --> 00:11:17,631
特别的容易再跟着我这个课程的你可以找到那些人大吗

191
00:11:18,399 --> 00:11:23,519
当然了你手上没有这些源代码我刚刚说他的这一页上一页

192
00:11:23,775 --> 00:11:25,567
也没有问题

193
00:11:27,871 --> 00:11:28,383
好

194
00:11:28,639 --> 00:11:30,175
退押金怎么合成

195
00:11:34,015 --> 00:11:37,343
有没有什么更多的资源可以看呢

196
00:11:38,111 --> 00:11:39,903
不要忘了网络

197
00:11:41,183 --> 00:11:43,231
网络有太多的东西

198
00:11:43,487 --> 00:11:46,815
我这边真夜打出来的

199
00:11:47,327 --> 00:11:49,631
至于这个这个只是一个人

200
00:11:50,911 --> 00:11:54,751
英文的话可能发音成80例

201
00:11:55,263 --> 00:12:01,407
也许是这样发音这个人非常有名怎么有一段文字

202
00:12:01,663 --> 00:12:02,431
对他的介绍

203
00:12:02,943 --> 00:12:09,087
这个人从1986年开始就潜心研究malloc的算法

204
00:12:10,367 --> 00:12:14,463
我刚提过我们在课程里面没有那个站也很重要的角色

205
00:12:14,719 --> 00:12:18,047
因为等下你就会看到我的一张图

206
00:12:18,815 --> 00:12:22,655
所有的内存管理动作最后70都跑到美国看来

207
00:12:23,679 --> 00:12:26,751
无一例外通通都跑到这里来

208
00:12:27,263 --> 00:12:33,151
所以他的行为模式至关重要它的效率高不高至关重要

209
00:12:33,919 --> 00:12:37,503
而这一个人从1986年开始就

210
00:12:38,015 --> 00:12:42,367
很认真在严肃研究怎么样让别让他更快更好

211
00:12:42,623 --> 00:12:46,719
他的作品因此就被称为一l malik

212
00:12:46,975 --> 00:12:50,047
把他的名称都放进去了这是一个莫大荣耀

213
00:12:51,071 --> 00:12:53,375
目前Linux下面的这个

214
00:12:53,887 --> 00:12:55,167
这个什么系统啊

215
00:12:55,679 --> 00:13:00,287
里面的block就是直接来自于这个人的产品

216
00:13:00,799 --> 00:13:06,943
其他平台的没落可能也或多或少受到他的影响

217
00:13:09,759 --> 00:13:12,319
你可以在这个这是他的主页

218
00:13:12,831 --> 00:13:14,879
你可以看到主页下载

219
00:13:15,135 --> 00:13:16,927
他的这个源代码

220
00:13:18,975 --> 00:13:21,279
刚刚这个也说明了

221
00:13:22,047 --> 00:13:27,935
16c比较Linux吗

222
00:13:28,191 --> 00:13:32,031
以下的这几乎是中时的他的一个研究结果

223
00:13:32,543 --> 00:13:35,103
而我要带你看的是VC的版本

224
00:13:37,407 --> 00:13:42,015
不是那么跟这个完全一样但是其实很多原理是相同的

225
00:13:42,271 --> 00:13:48,415
所以你懂了飞机之后呢你再去看跟我说一下的这一些做法你就会

226
00:13:50,207 --> 00:13:56,351
就会轻松非常非常多因为我刚刚提过了万变不离其宗

227
00:13:56,607 --> 00:13:59,167
这个很多手法都是共通的

228
00:14:00,447 --> 00:14:01,471
所以我这边谈到

229
00:14:01,727 --> 00:14:07,871
我们千万不要放弃了网络上的资源有很多宝贵的东西我这边只是举一个例子

230
00:14:08,127 --> 00:14:10,431
举个例子

231
00:14:10,687 --> 00:14:16,831
像这一个人也写了一篇文章叫做Memory of memory

232
00:14:17,087 --> 00:14:18,111
Locator

233
00:14:18,367 --> 00:14:24,511
里头就会对他的这一个dlmalloc的有些图片这个

234
00:14:24,767 --> 00:14:29,119
没那个太复杂了他的文章也可能只是好

235
00:14:29,631 --> 00:14:33,727
只是涵盖了也许5%和10%

236
00:14:34,751 --> 00:14:40,895
所以你如果便把这些东西没了非常清楚的话还真的必须去看源代码不过我

237
00:14:41,151 --> 00:14:44,223
作为曾有过了这个痛苦的这一这段路了

238
00:14:44,479 --> 00:14:47,807
我现在可以把新的展现出来给你看

239
00:14:50,623 --> 00:14:54,719
我们来看一看有些什么书籍除了网络上

240
00:14:54,975 --> 00:14:55,999
夫人之外

241
00:14:56,255 --> 00:15:02,399
谈论到内存的这种书籍很少非常少如果

242
00:15:02,655 --> 00:15:08,799
如果要说Mac香港比较malloc这么重要的东西世界上没有一本书

243
00:15:09,055 --> 00:15:10,079
朱棣讲这个东西

244
00:15:10,847 --> 00:15:12,383
一本区没有

245
00:15:13,663 --> 00:15:14,687
追踪元代码

246
00:15:16,223 --> 00:15:19,551
这一本书了strela-2 7

247
00:15:19,807 --> 00:15:24,159
这本书在第2章有对于分配器

248
00:15:24,927 --> 00:15:26,719
阿诺斯笔下的

249
00:15:27,487 --> 00:15:29,023
The new season这个

250
00:15:29,279 --> 00:15:33,631
所谓的标准库的下的分配器有很深入的探讨

251
00:15:33,887 --> 00:15:35,679
有很多图

252
00:15:36,191 --> 00:15:38,751
不是这个住在谈这个东西

253
00:15:40,799 --> 00:15:43,871
这本书分cplusplus

254
00:15:44,127 --> 00:15:46,175
里头有一个壁纸张

255
00:15:46,943 --> 00:15:48,223
也在探讨

256
00:15:50,015 --> 00:15:53,087
67这个library里头的

257
00:15:53,343 --> 00:15:56,927
一个分配器session

258
00:15:57,183 --> 00:15:57,951
Peter

259
00:16:01,023 --> 00:16:02,559
刚刚我提到

260
00:16:02,815 --> 00:16:08,959
这个分配器是在楼梯这个library这个库里下这本书整个就是在讲root

261
00:16:09,215 --> 00:16:11,775
如此它并不是

262
00:16:13,055 --> 00:16:19,199
Look2这个不知道发音是比较里我都是这样子念的look

263
00:16:19,455 --> 00:16:24,831
并不是一个专门在做内存管理的内存管理只是它里面的一小部分

264
00:16:25,087 --> 00:16:27,903
但是我看过之后觉得他非常的棒

265
00:16:28,415 --> 00:16:29,695
特别值得推荐

266
00:16:30,207 --> 00:16:33,023
我们的课程里面有一家专门在家

267
00:16:34,815 --> 00:16:39,167
中间日本书那就不是那么针对某一个产品

268
00:16:39,679 --> 00:16:41,215
他是一个比较广泛的

269
00:16:41,727 --> 00:16:43,007
比较抽象

270
00:16:44,031 --> 00:16:44,799
所以

271
00:16:45,823 --> 00:16:50,431
因为比较抽象所以也不那么具体的能够为你带来帮助

272
00:16:50,943 --> 00:16:52,479
只是一些观念

273
00:16:52,735 --> 00:16:56,831
描述以及叶修就是虚拟的代码

274
00:16:57,343 --> 00:16:59,391
我是真正可以工作的代码

275
00:17:01,183 --> 00:17:02,719
这个

276
00:17:03,231 --> 00:17:07,071
首先这方面的书就很少

277
00:17:08,607 --> 00:17:09,375
好

278
00:17:09,631 --> 00:17:11,423
就是告诉大家

279
00:17:11,935 --> 00:17:16,287
一个你到网络上去找别的人我去

280
00:17:16,543 --> 00:17:18,591
这些数都比较旧了

281
00:17:18,847 --> 00:17:21,151
也许还有更新的东西出来

282
00:17:21,407 --> 00:17:24,223
我们不要忘记了这些课程之外

283
00:17:24,479 --> 00:17:25,247
再去

284
00:17:25,503 --> 00:17:28,063
幕墙其他的资源

285
00:17:29,343 --> 00:17:30,111
另外

286
00:17:30,623 --> 00:17:31,647
这门课程

287
00:17:32,159 --> 00:17:35,487
会带大家去看很多的知名的Library

288
00:17:35,743 --> 00:17:37,023
互动作

289
00:17:38,559 --> 00:17:40,607
这些都是我看过的人戴吗

290
00:17:41,631 --> 00:17:44,959
STL的标准库的mfc的

291
00:17:46,495 --> 00:17:47,263
Hello

292
00:17:47,775 --> 00:17:53,919
还有VC这个crtc runtime library里面的malloc和free的做法

293
00:17:54,943 --> 00:17:57,247
还有什么坚18luck

294
00:17:57,503 --> 00:17:59,039
Tcmalloc

295
00:17:59,295 --> 00:18:00,575
这个命名呢

296
00:18:01,343 --> 00:18:06,719
就很像刚刚在讲那个八个的那个人然后来做出来的算法就

297
00:18:07,231 --> 00:18:13,375
以他的名字段名叫地al-malik这个叫接一另外一个人

298
00:18:13,631 --> 00:18:14,399
VC

299
00:18:14,655 --> 00:18:20,799
PSP那是一个人还是一个什么我我我也忘记了所以这边也

300
00:18:21,055 --> 00:18:27,199
再次提醒大家看到这个的是让你知道技术发展到今天

301
00:18:27,455 --> 00:18:28,991
百花齐放

302
00:18:29,247 --> 00:18:32,319
其实有很多很多的malloc

303
00:18:34,879 --> 00:18:39,999
你会获得什么样的代码呢怎么课程里面我会给你一个测试程序

304
00:18:41,023 --> 00:18:47,167
前面我我刚才说过我们其实不会写太大了东西我们主要是以研究

305
00:18:47,423 --> 00:18:50,495
那些知名的库里面的内存管理的做法

306
00:18:51,007 --> 00:18:57,151
但是毕竟我们还是需要一些小测试

307
00:18:58,687 --> 00:19:00,223
文件

308
00:19:02,527 --> 00:19:08,671
这个随着课程你会拿到但是是不是叫这个名字不一定也许到后来我会改一个名字的字

309
00:19:08,927 --> 00:19:11,231
只是会给你一个

310
00:19:11,999 --> 00:19:12,767
去办

311
00:19:15,327 --> 00:19:17,375
好

312
00:19:17,631 --> 00:19:19,167
关于这个话题

313
00:19:19,935 --> 00:19:20,703
我们要谈一谈

314
00:19:20,959 --> 00:19:22,239
天宝当年

315
00:19:23,007 --> 00:19:23,775
这是

316
00:19:24,031 --> 00:19:25,055
内存

317
00:19:25,567 --> 00:19:27,871
从过去到现在

318
00:19:28,383 --> 00:19:32,991
他说很稀缺到现在好像让大家传一口气这中间

319
00:19:33,503 --> 00:19:34,527
是怎么一回事

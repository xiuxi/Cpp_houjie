1
00:00:04,352 --> 00:00:07,424
我们彻底理解的手上三把刀

2
00:00:07,680 --> 00:00:08,448
之后

3
00:00:08,704 --> 00:00:09,984
我应该是带着你

4
00:00:11,008 --> 00:00:12,544
看我们怎么去

5
00:00:13,056 --> 00:00:14,336
重新定义他们

6
00:00:14,592 --> 00:00:17,152
去重载他们World

7
00:00:19,712 --> 00:00:20,992
23那个之前

8
00:00:21,248 --> 00:00:22,784
我要用这一张投影片

9
00:00:23,040 --> 00:00:23,808
把

10
00:00:24,064 --> 00:00:25,856
他们到底谁都用谁

11
00:00:26,368 --> 00:00:32,512
以及这些术语听起来怎么为covid-19 operator operate

12
00:00:32,768 --> 00:00:34,816
Prison in javascript

13
00:00:36,352 --> 00:00:38,144
怎么整理

14
00:00:40,704 --> 00:00:46,848
最好有这些图所以当我在讲这些术语你下的反应不过来但是你眼睛

15
00:00:47,104 --> 00:00:47,872
看到这个了

16
00:00:48,640 --> 00:00:49,408
对你会有

17
00:00:49,664 --> 00:00:50,688
莫大的帮助

18
00:00:52,736 --> 00:00:53,504
WeChat

19
00:00:53,760 --> 00:00:55,040
内存管理的

20
00:00:55,552 --> 00:00:56,320
很多的

21
00:00:56,576 --> 00:00:58,112
观念都是非常的

22
00:00:59,136 --> 00:01:00,160
细微的

23
00:01:00,416 --> 00:01:02,976
所以很没张图片很可能呢

24
00:01:03,488 --> 00:01:05,024
OK清阁下来了

25
00:01:05,280 --> 00:01:07,840
思考好长一段时间

26
00:01:08,608 --> 00:01:09,888
现在我来看看

27
00:01:11,168 --> 00:01:12,448
我们应用程序

28
00:01:12,704 --> 00:01:15,264
是这样子的使用率很低的

29
00:01:15,520 --> 00:01:17,312
我是这样再使用

30
00:01:18,080 --> 00:01:19,872
这个叫做表达式

31
00:01:21,408 --> 00:01:24,480
表达式的内容是不可以改变的

32
00:01:25,248 --> 00:01:28,064
左边他就是变成一右边这样

33
00:01:28,576 --> 00:01:32,160
这个我们前面已经讲过了令会变成123

34
00:01:32,416 --> 00:01:33,696
X2的

35
00:01:33,952 --> 00:01:37,280
自转自身的转型不是最重要对我拿掉

36
00:01:37,792 --> 00:01:39,072
13

37
00:01:39,328 --> 00:01:42,400
这辈子也是被传为两个动作

38
00:01:43,168 --> 00:01:44,960
左边到右边这边了

39
00:01:47,008 --> 00:01:49,056
而这一个动作

40
00:01:51,104 --> 00:01:57,248
里头的operator new是什么呢前面已经给你看过源代码它确实就是调用

41
00:01:59,552 --> 00:02:04,160
这个operator delete作什么是里头的源代码就是调用这一个

42
00:02:04,416 --> 00:02:08,000
这都是前面已经见过了我只是做一个整理

43
00:02:08,512 --> 00:02:09,536
这条路线

44
00:02:10,048 --> 00:02:15,680
而这里头做什么呢也已经把源代码给你看过了他就是调用malloc

45
00:02:15,936 --> 00:02:17,728
汉堡要用free

46
00:02:18,752 --> 00:02:23,360
最早的是从使用端走这样的路线下来

47
00:02:25,408 --> 00:02:28,224
我后面接下去的要带你看这就是

48
00:02:28,480 --> 00:02:34,624
我们怎么去把这条路线转为这一条路线网上

49
00:02:37,440 --> 00:02:38,464
我们可以去

50
00:02:38,720 --> 00:02:40,000
重载

51
00:02:40,768 --> 00:02:46,912
这两个东西在某一个Class里面某一个Class就重载这两个东西

52
00:02:47,424 --> 00:02:53,568
那么这就是比较高的优先权如果你有重返他的话他就会走的这条路线

53
00:02:54,848 --> 00:02:57,408
这里头要做什么事都由你决定了

54
00:02:57,664 --> 00:03:03,808
我们所谓内存管理就是希望把这个动作接管过来到这里来这里也许我们会想要

55
00:03:04,064 --> 00:03:05,600
我要弄一个内存池

56
00:03:05,856 --> 00:03:08,416
哇一大块切割成小块

57
00:03:09,184 --> 00:03:14,560
这样效率也许更高在速度上更会在空间上的也更少

58
00:03:15,328 --> 00:03:20,704
为什么叫空间上会更什么我们希望去除前面我们讲过的cookie

59
00:03:21,216 --> 00:03:23,520
因为cookie一块上下

60
00:03:23,776 --> 00:03:25,568
一块内存有上下两个股票

61
00:03:26,080 --> 00:03:27,872
好用掉八个字节

62
00:03:28,128 --> 00:03:31,968
如果你有100万个10000000个元素那好用

63
00:03:32,224 --> 00:03:34,016
额外的开销就好了

64
00:03:35,296 --> 00:03:38,624
无论如何总之这个地方告诉你

65
00:03:38,880 --> 00:03:40,928
我们有机会往上走

66
00:03:42,208 --> 00:03:43,488
做一些管理

67
00:03:44,512 --> 00:03:46,304
当然了这个罪

68
00:03:46,560 --> 00:03:50,400
中药分配内存的最终还是要用没了

69
00:03:50,912 --> 00:03:57,056
所以这边不管你怎么关你你中挖一次哇一大块做小切割等等等罪

70
00:03:57,312 --> 00:04:00,384
终还是要再下来到这里来

71
00:04:02,176 --> 00:04:06,528
这些另辟蹊径我们希望能够网易这条路线来做

72
00:04:08,320 --> 00:04:14,464
大家真是从左边扭到这个operation 15到这个重载的operator New

73
00:04:14,720 --> 00:04:15,744
等等等

74
00:04:16,512 --> 00:04:17,280
过程

75
00:04:22,911 --> 00:04:24,703
这个是可以重载的

76
00:04:26,239 --> 00:04:28,799
我现在例子就是在一个类似存在

77
00:04:29,055 --> 00:04:32,383
这个是全局的他也可以重载

78
00:04:32,895 --> 00:04:35,199
我等一下都会示范给你看

79
00:04:35,455 --> 00:04:36,223
据悉

80
00:04:36,735 --> 00:04:38,015
不过这边有提到

81
00:04:39,039 --> 00:04:43,647
重载这块的很少见因为这个影响太深远

82
00:04:44,927 --> 00:04:45,439
在

83
00:04:46,975 --> 00:04:48,767
在各个这个

84
00:04:49,023 --> 00:04:55,167
代码可能几万行出去了很多很多的地方在做内存的分配

85
00:04:57,215 --> 00:04:59,263
很可能最终都是

86
00:05:00,031 --> 00:05:00,799
跑到这里来

87
00:05:01,311 --> 00:05:03,103
不能讲很可能及时上市

88
00:05:05,663 --> 00:05:10,783
你却也是很可能因为也可能不知道我这里直接就没了可这也是可能的

89
00:05:11,039 --> 00:05:14,367
二是绝大部分都跑到这里来然后才这么没了

90
00:05:14,879 --> 00:05:19,487
所以如果你一改这一块的影响的层面是非常非常的大

91
00:05:19,743 --> 00:05:20,767
一般人不会去

92
00:05:21,023 --> 00:05:21,791
董飞会

93
00:05:22,047 --> 00:05:24,351
100两左右上面这块

94
00:05:26,143 --> 00:05:28,959
这个来龙去脉后面会越来越清楚

95
00:05:29,471 --> 00:05:31,519
没有关系如果你现在不是很

96
00:05:32,543 --> 00:05:34,591
掌握得好的话

97
00:05:35,871 --> 00:05:37,663
左下角这一块呢

98
00:05:38,687 --> 00:05:42,015
是我也可以这么过去模拟这个动作

99
00:05:43,295 --> 00:05:47,647
我们当然没有必要这样模拟只是为了技术上的验证

100
00:05:47,903 --> 00:05:51,999
六个级别的可以变成这样那我直接写这样行不行呢

101
00:05:52,511 --> 00:05:54,559
也可以是左下角

102
00:05:56,607 --> 00:05:58,911
OK拿左下角跟最快来

103
00:05:59,167 --> 00:06:00,447
就是要模拟它

104
00:06:01,983 --> 00:06:03,519
在我给你的代码里头

105
00:06:04,287 --> 00:06:05,567
会出现这些

106
00:06:06,079 --> 00:06:06,591
模拟

107
00:06:12,479 --> 00:06:16,319
我到后面我们要把整个故事接去到分配器的时候

108
00:06:16,575 --> 00:06:18,111
又有一点不同了

109
00:06:18,879 --> 00:06:24,511
这张图对拿到优化品格下来跟上业你看看这个来比较

110
00:06:25,535 --> 00:06:27,839
你叫什么事情我们现在开始新的故事

111
00:06:28,095 --> 00:06:30,911
左手边的是容器的部分

112
00:07:06,239 --> 00:07:07,775
调用构造函数

113
00:07:10,335 --> 00:07:11,615
这边就是一个函数

114
00:07:12,127 --> 00:07:12,895
赛

115
00:07:13,407 --> 00:07:14,687
容器里头

116
00:07:15,199 --> 00:07:18,015
他不想用默认的那种

117
00:07:18,527 --> 00:07:20,319
他想要自己来一套

118
00:07:21,343 --> 00:07:21,855
所以

119
00:07:22,367 --> 00:07:23,647
飞跃这个

120
00:07:24,159 --> 00:07:24,927
等于

121
00:07:25,183 --> 00:07:25,951
最快

122
00:07:57,951 --> 00:08:01,023
在真正分配内存的时候是跑这一个动作

123
00:08:01,279 --> 00:08:07,167
这一个动作跟上叶这边是完全一样的你看我两页切换完全相同

124
00:08:09,215 --> 00:08:15,359
现在你可能就这一个地方是我们后面的12想要谈的分配器的行为

125
00:08:16,895 --> 00:08:18,943
预先先打出来

126
00:08:20,479 --> 00:08:23,039
这个分配器可能

127
00:08:23,295 --> 00:08:26,623
做什么事情呢做了就是像这一种事情

128
00:08:27,903 --> 00:08:30,975
Wow他的头有一些自由链表

129
00:08:31,231 --> 00:08:34,559
里头有一些大块东西切成小块东西

130
00:08:34,815 --> 00:08:37,375
这就是在做内存管理

131
00:08:38,911 --> 00:08:41,215
我们才能克服是加内存管理吗

132
00:08:41,983 --> 00:08:45,311
载着我们就是要学习他是怎么管理的

133
00:08:48,639 --> 00:08:52,479
我们继续往下这些都后面都会弹得非常的仔细

134
00:08:54,527 --> 00:08:56,063
接下来

135
00:08:56,831 --> 00:08:58,111
我就要带你看看

136
00:08:58,367 --> 00:09:00,415
前面我们讲的三把大刀

137
00:09:00,927 --> 00:09:01,951
一般的牛

138
00:09:02,207 --> 00:09:03,487
Aria2

139
00:09:03,743 --> 00:09:05,023
Placement

140
00:09:05,279 --> 00:09:06,559
我们怎么去

141
00:09:07,071 --> 00:09:08,095
重返他们

142
00:09:09,119 --> 00:09:10,143
把这些

143
00:09:10,399 --> 00:09:14,751
控制流程接管过来只有接管过来

144
00:09:15,007 --> 00:09:16,287
我们才能够做

145
00:09:16,543 --> 00:09:22,687
更好的为什么管理下来我们看看怎么去重新定义这些东西

146
00:09:23,967 --> 00:09:28,063
到底有哪些东西可以重新定义呢再回来上面看看

147
00:09:28,831 --> 00:09:29,599
在业

148
00:09:30,367 --> 00:09:32,671
全局的这个是可以重新定义的

149
00:09:33,951 --> 00:09:39,071
你也可以在那里头去重新定义我们先看这一个全局的这一个

150
00:09:40,607 --> 00:09:44,959
重新定义全局任afternoon

151
00:09:45,471 --> 00:09:51,615
这边我只介绍它的接口它的规格怎么样把控制权

152
00:09:51,871 --> 00:09:57,503
抓到我的手上来自于抓过来之后要做些什么是不是现在要谈的重点

153
00:09:59,295 --> 00:10:01,343
它的形式是这样

154
00:10:03,647 --> 00:10:08,511
如果你想重载这一个全局的你就写一个这样的函数

155
00:10:10,815 --> 00:10:14,911
或者是一个这样的函数那就是重载这一个

156
00:10:15,679 --> 00:10:17,983
这里有1234 133

157
00:10:18,495 --> 00:10:20,031
123

158
00:10:24,383 --> 00:10:25,919
他们的接受的是

159
00:10:26,943 --> 00:10:29,247
Operation一个介绍一个大小

160
00:10:30,015 --> 00:10:32,831
这个update delete的应该就是一个指针

161
00:10:33,855 --> 00:10:37,951
至于里头做什么事我刚才讲过不是现在要谈的重点

162
00:10:39,231 --> 00:10:42,559
我这里头会做一个示范我里头做什么事

163
00:10:44,607 --> 00:10:50,751
我的头去调用另外一个函数吗OK OK

164
00:10:51,007 --> 00:10:57,151
为头做什么是为了让这个程序能够正常运作你手上也会拿到这个测试程序

165
00:10:57,407 --> 00:11:02,527
为了能够正常运作对我里头其实什么都没做就是这样malloc和free

166
00:11:03,295 --> 00:11:06,879
也就是说我里头的动作跟本来的是一样的

167
00:11:08,927 --> 00:11:10,975
说我只是吃饭这个接口

168
00:11:11,487 --> 00:11:12,511
规格

169
00:11:13,791 --> 00:11:16,095
除了可以去

170
00:11:17,375 --> 00:11:22,495
重载这个之外也可以重载他们的array版本这个

171
00:11:23,263 --> 00:11:26,079
21 234234

172
00:11:27,359 --> 00:11:33,503
我儿真寺做什么事情了我也是不是重点但是我的做法就是把它调用

173
00:11:33,759 --> 00:11:34,271
这边

174
00:11:39,135 --> 00:11:40,159
刚刚提到

175
00:11:41,183 --> 00:11:42,463
这里的动作

176
00:11:43,231 --> 00:11:46,047
我为了让程序能够正确的运作

177
00:11:46,303 --> 00:11:50,911
所以我里面的事情其实就是调用malloc和free

178
00:11:52,703 --> 00:11:58,847
这是因为先前我们已经看过了在前面的大投影片里面我已经给大家看过这

179
00:11:59,103 --> 00:11:59,871
这些东西

180
00:12:00,895 --> 00:12:06,015
这就是全局的afternoon of the delete里面的

181
00:12:06,271 --> 00:12:07,039
源代码

182
00:12:07,551 --> 00:12:09,343
在VC的下

183
00:12:10,367 --> 00:12:16,511
Vc6的这个键长按可以看文件的可以看到它的内容

184
00:12:17,791 --> 00:12:19,327
这个格局

185
00:12:19,839 --> 00:12:20,863
这个格式

186
00:12:21,119 --> 00:12:23,423
看我们这里的格式这个

187
00:12:25,727 --> 00:12:27,007
有一点点不同

188
00:12:28,287 --> 00:12:29,823
这都无所谓

189
00:12:30,335 --> 00:12:31,615
因为在格式

190
00:12:32,127 --> 00:12:38,271
我们只是要抓到一个版本来看它里面的行为能够正确的解释我们的观念这样

191
00:12:38,527 --> 00:12:39,295
这样就可以了

192
00:12:40,831 --> 00:12:42,111
这里都做什么事

193
00:12:42,879 --> 00:12:44,415
你看下有没有

194
00:12:46,207 --> 00:12:52,351
他做了更多就是他可以一再一再的表没了这个我们前面谈到有时候为什么流行歌了

195
00:12:52,607 --> 00:12:54,655
神经提过后面会讲得更清楚

196
00:12:54,911 --> 00:12:58,239
下面这个人是这样没了好多福利

197
00:12:58,751 --> 00:13:02,079
所以我模拟他我这边就没有东西

198
00:13:04,895 --> 00:13:06,431
但是请大家注意

199
00:13:06,943 --> 00:13:08,735
这个影响无远弗届

200
00:13:09,247 --> 00:13:15,391
首先我现在血根本没有影响我就是模拟人本的其次如果你自己要做动作的话

201
00:13:15,647 --> 00:13:17,695
无远弗届因为这是

202
00:13:17,951 --> 00:13:19,231
全局的版本

203
00:13:22,815 --> 00:13:25,375
这个是我们去重载全局的

204
00:13:26,911 --> 00:13:28,703
比较更有用的

205
00:13:29,215 --> 00:13:32,799
是我们在我们的那里头去重返他

206
00:13:36,383 --> 00:13:37,663
它的形式是什么

207
00:13:39,455 --> 00:13:41,247
我要在富里头

208
00:13:42,015 --> 00:13:44,575
重载这两个函数就这么写

209
00:13:46,623 --> 00:13:49,439
Operation物需要吃到一个大小

210
00:13:50,719 --> 00:13:53,279
Operated需要一个指针

211
00:13:53,791 --> 00:13:55,839
这这两个动作

212
00:13:56,095 --> 00:13:57,887
卫兵器转成

213
00:13:59,167 --> 00:14:00,191
这是什么这是

214
00:14:00,703 --> 00:14:04,543
表达式被转成这样这个前面就提过了

215
00:14:05,567 --> 00:14:11,711
会造成这样变性去电话的时候这个大小的大小就会冲进来

216
00:14:12,735 --> 00:14:15,807
这个大小就会传到下面这个地方来就是这个

217
00:14:18,367 --> 00:14:22,463
所以圣灵写好的但是谁来调用的那是编译器

218
00:14:22,719 --> 00:14:24,767
建立的这些代码来调用你

219
00:14:27,583 --> 00:14:31,679
这其中的operator delete这里有两个参数

220
00:14:33,215 --> 00:14:36,543
你可能会想好像不需要第2个参数

221
00:14:37,823 --> 00:14:40,383
不需要啊因为不是只存一根指针吗

222
00:14:40,895 --> 00:14:42,175
Delete p

223
00:14:42,943 --> 00:14:43,967
西

224
00:14:44,223 --> 00:14:45,503
到这里来

225
00:14:46,015 --> 00:14:50,111
这里调用这个函数这里的批传进来

226
00:14:50,623 --> 00:14:52,159
使用纸

227
00:14:52,415 --> 00:14:55,743
符合这第1个参数123是做什么用呢

228
00:14:58,559 --> 00:14:59,839
我好像打不起来

229
00:15:00,863 --> 00:15:01,375
喂

230
00:15:01,887 --> 00:15:08,031
所以你也可以写这一行的不要的二层数这个是一个optional可有

231
00:15:08,287 --> 00:15:09,055
有可无的

232
00:15:10,079 --> 00:15:11,615
写不写都可以

233
00:15:14,175 --> 00:15:15,199
你写了

234
00:15:15,711 --> 00:15:16,735
对你也没有用

235
00:15:18,015 --> 00:15:24,159
这个是现在我们要写的这里都是我们要去我们里头做什么事情做那种管理

236
00:15:24,415 --> 00:15:28,255
我们在这里面释放内存的其实也不需要第2个市场

237
00:15:31,839 --> 00:15:34,911
这个就是形势如何

238
00:15:35,167 --> 00:15:38,239
重载这个东西那我们就写这两个数

239
00:15:39,519 --> 00:15:43,615
在后面的代码里面里面你会看到

240
00:15:43,871 --> 00:15:46,943
我可能在前头加上static

241
00:15:48,223 --> 00:15:50,271
这就是一个静态的函数呢

242
00:15:52,063 --> 00:15:56,159
为什么他是static那为什么这里没加

243
00:15:57,183 --> 00:16:00,767
他其实必须是一个静态static

244
00:16:01,279 --> 00:16:02,815
因为

245
00:16:04,095 --> 00:16:05,887
调用C的地方

246
00:16:06,911 --> 00:16:11,007
往往就是正在创建对象的过程之中

247
00:16:11,519 --> 00:16:12,543
好像这里了

248
00:16:13,055 --> 00:16:15,871
你正在创建对象

249
00:16:17,407 --> 00:16:23,551
所以你手上并没有一个对象因此无法通过对象

250
00:16:23,807 --> 00:16:25,855
来调用一般的函数

251
00:16:27,903 --> 00:16:29,951
所以这两个必须是静态的

252
00:16:33,535 --> 00:16:37,887
这样的话那他们两个都可以不通过对象就漂亮起来

253
00:16:38,911 --> 00:16:41,215
他为什么这里有没有血

254
00:16:43,007 --> 00:16:46,591
由于大家大概很体贴吧

255
00:16:47,359 --> 00:16:52,223
反正他们两个一定必须是静态的那你行不行不准备了

256
00:16:55,295 --> 00:16:56,575
打开

257
00:16:57,855 --> 00:16:59,647
同样的道理

258
00:17:00,415 --> 00:17:04,255
他的兄弟刚刚上一页这个的兄弟版本

259
00:17:05,023 --> 00:17:06,047
Android版本

260
00:17:06,303 --> 00:17:08,607
他的格式也是这样

261
00:17:11,167 --> 00:17:12,191
这两个数

262
00:17:12,959 --> 00:17:17,567
一对一下上也跟这一夜就是加上中间这个中括号

263
00:17:18,591 --> 00:17:24,735
那你写上这两行这两个代码这两个函数的话使用者

264
00:17:24,991 --> 00:17:27,039
如果是创建一个array

265
00:17:28,319 --> 00:17:34,463
要用的这是一个表达式表达式的行为是不能变的是右边去

266
00:17:34,719 --> 00:17:40,863
这块儿里头的动作就会飘到你所写的出来

267
00:17:42,655 --> 00:17:48,799
123数仍然是可有可无的

268
00:17:49,055 --> 00:17:55,199
我们藉由这两张投影片事业和商业还有更上也是全局

269
00:17:55,455 --> 00:18:01,599
去理解到接管他们的格式要怎么写

270
00:18:01,855 --> 00:18:07,999
亲吻过来的做什么事情呢这个12

271
00:18:08,255 --> 00:18:14,399
43二里头最有价值我们很快就要

272
00:18:14,655 --> 00:18:20,799
他下去看接管过来之后我如何做一个小型的内存

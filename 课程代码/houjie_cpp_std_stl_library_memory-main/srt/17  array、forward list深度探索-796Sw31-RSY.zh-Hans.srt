1
00:00:00,256 --> 00:00:06,400
好

2
00:00:06,656 --> 00:00:11,008
把我们接触了呗现在我们来看一看另外一个容器的锐

3
00:00:11,264 --> 00:00:14,848
而锐比起的可用更简单了

4
00:00:15,104 --> 00:00:17,920
因为阿瑞本身就是我们在

5
00:00:19,200 --> 00:00:24,576
C加加语言和C语言里面本身就已经存在的数据这个东西啊喂

6
00:00:25,088 --> 00:00:30,720
为什么要把这个东西包装成一个容器来用呢

7
00:00:31,744 --> 00:00:35,840
因为妊辰容器之后他就要遵循容器的

8
00:00:36,352 --> 00:00:42,496
规律规则也就是要提供一些要提供已成为特别大气而这个爹

9
00:00:42,752 --> 00:00:48,896
迭代器呢要提供五种相应的类型所以我们成

10
00:00:49,152 --> 00:00:55,296
前面提过的以便于让算法可以去询问一些必要的信息

11
00:00:55,552 --> 00:01:00,928
算法就可以决定采取最优化的工作

12
00:01:01,184 --> 00:01:01,952
所以

13
00:01:02,208 --> 00:01:08,352
因为这样如果没有这么包装的话这个array就被贬斥在整个

14
00:01:08,608 --> 00:01:14,496
六大部件的结构之外它就不能够享受算法拉以及其他的

15
00:01:14,752 --> 00:01:19,872
反函数拉其他等等等等跟他的交互关系他就不能够享受到

16
00:01:20,128 --> 00:01:26,272
我们来看一看锐内部结构为就长这样子就是数组

17
00:01:27,552 --> 00:01:30,112
它怎么实现出来的呢

18
00:01:32,160 --> 00:01:32,672
这

19
00:01:32,928 --> 00:01:38,560
那你现在所看到的这一个源代码是tr-1的版本

20
00:01:38,816 --> 00:01:44,960
什么是tr1 technical技术报告

21
00:01:45,216 --> 00:01:51,360
是一个是一家家的一个过渡版本介于C加加的1.0更细节的2.0

22
00:01:51,616 --> 00:01:57,760
美国之间最佳1.0就是现在在1998很久了2.0就是20

23
00:01:58,016 --> 00:02:04,160
前一秒在1998到201中间2003左右有一个这个那个10000

24
00:02:04,416 --> 00:02:10,560
这里面有这么一个实现为什么我在这个地方要拿这一个版本来说呢

25
00:02:10,816 --> 00:02:16,448
因为这个版本比较容易后面下一张投影片就会出现

26
00:02:17,984 --> 00:02:24,128
最新版本的东西叫后面新版本4.9把那个时间又比较麻烦一些说我们

27
00:02:24,384 --> 00:02:26,432
需要有心有这个做基础

28
00:02:27,200 --> 00:02:30,528
好在这个second-tier万里头的

29
00:02:31,040 --> 00:02:32,576
定义是这样瑞

30
00:02:32,832 --> 00:02:38,464
它是一个一个类是我前面提过了我好几次了他就跟

31
00:02:39,488 --> 00:02:45,632
克拉斯等地位的是一天一些小差别这个我也不去给他了因为是相同的

32
00:02:45,888 --> 00:02:47,424
在这里头

33
00:02:47,680 --> 00:02:51,520
而睿智的头脑和我们要先观察的就是他的

34
00:02:52,032 --> 00:02:53,056
非常在哪里

35
00:02:53,312 --> 00:02:54,336
这个地方

36
00:02:54,848 --> 00:02:56,128
Amaz

37
00:02:56,896 --> 00:02:59,712
他是什么太笨的他是value type

38
00:03:00,224 --> 00:03:04,832
Value type是什么网上看type就是这一个

39
00:03:05,088 --> 00:03:07,136
这个就是这一个

40
00:03:07,648 --> 00:03:11,232
也就是模板指定由外界指定的

41
00:03:11,488 --> 00:03:14,560
我们到底是怎么去用那那怎么用

42
00:03:15,840 --> 00:03:19,424
上这样的意思就是说我要一个二位元素是整数

43
00:03:19,936 --> 00:03:21,216
要指定大小

44
00:03:21,472 --> 00:03:26,080
这是唯一跟其他容器不一样的地方因为其他容器都是可扩充的

45
00:03:26,336 --> 00:03:29,408
你就尽量放元素吧但是这个arraylist

46
00:03:30,688 --> 00:03:33,248
必须指定大小因为它是不能扩充的

47
00:03:34,784 --> 00:03:36,576
好说这个int

48
00:03:37,088 --> 00:03:40,416
在我们这个源代码里头发颜婷就会存进来

49
00:03:40,928 --> 00:03:44,768
就是这一个变量的这个类这个类型

50
00:03:45,024 --> 00:03:47,584
这个变量其实它是一个数组

51
00:03:48,352 --> 00:03:49,376
速度

52
00:03:49,632 --> 00:03:50,656
播放呢

53
00:03:50,912 --> 00:03:52,192
这个时

54
00:03:52,960 --> 00:03:55,776
传到源代码里面就是这一个参数

55
00:03:56,032 --> 00:03:58,592
这个参数也就是这一个参数

56
00:03:59,104 --> 00:04:03,712
所以最好就非常的直观但什么

57
00:04:03,968 --> 00:04:06,272
哈利波特定一个数组

58
00:04:06,528 --> 00:04:09,344
这个速度多大呢他看这个恩

59
00:04:10,112 --> 00:04:11,904
这个N如果是

60
00:04:12,672 --> 00:04:13,440
0

61
00:04:14,464 --> 00:04:16,768
如果是0的话呢

62
00:04:17,024 --> 00:04:18,047
就会变成1

63
00:04:19,839 --> 00:04:20,607
做什么

64
00:04:20,863 --> 00:04:26,495
它允许你给定令可是你要知道在是一家家里面没有遗失灵的

65
00:04:27,007 --> 00:04:28,287
不允许种东西

66
00:04:28,543 --> 00:04:32,127
所以使用者说明他就自动的发电的

67
00:04:32,895 --> 00:04:36,479
如果不是0的话那看你指定

68
00:04:37,759 --> 00:04:41,599
这一个就是语言本身的速度的部分

69
00:04:42,623 --> 00:04:44,159
我们的看病

70
00:04:45,951 --> 00:04:51,071
你就7点20不是终点吗所以他的做法那间就是这个

71
00:04:51,327 --> 00:04:56,447
语言上的这个数组的两个位置一致

72
00:04:57,471 --> 00:05:00,287
这个Angela就是DM

73
00:05:02,079 --> 00:05:03,871
恩格

74
00:05:04,127 --> 00:05:06,431
恩格的壁纸

75
00:05:08,479 --> 00:05:09,759
实现非常简单

76
00:05:11,295 --> 00:05:13,087
这个就是ra

77
00:05:14,367 --> 00:05:15,391
注意这边

78
00:05:15,647 --> 00:05:16,415
啊

79
00:05:17,183 --> 00:05:19,743
Rm没有custom music

80
00:05:19,999 --> 00:05:26,143
坐着看书的习惯着他都没有毕竟他仍然不能够被不是那么的最高

81
00:05:26,399 --> 00:05:27,423
高级的容器

82
00:05:27,935 --> 00:05:30,751
这个对的他还是认为要模拟

83
00:05:32,031 --> 00:05:33,823
语言本身的那个数组

84
00:05:34,591 --> 00:05:38,431
那个叔叔也他们上有什么构造器管束所以他也没有

85
00:05:40,479 --> 00:05:42,271
我们来看看它的迭代器

86
00:05:43,807 --> 00:05:45,599
锐本身是个连续空间

87
00:05:46,111 --> 00:05:52,255
我们从前面在讲在他的经验里面我也已经提过了只要是一个连续空间他的

88
00:05:52,511 --> 00:05:57,887
迭代器就可以用单纯的指针来表现不需要另外设计

89
00:05:58,911 --> 00:06:01,727
怎么坐在那这个iterator

90
00:06:03,263 --> 00:06:06,591
Supported to register value type就是的

91
00:06:09,407 --> 00:06:10,175
所以

92
00:06:10,687 --> 00:06:11,455
他

93
00:06:12,735 --> 00:06:18,879
就直接把指针拿来当给大气非常好这边的住家告诉你了这62天9

94
00:06:19,135 --> 00:06:23,231
98我们前面才刚看过的那个也是这样

95
00:06:24,767 --> 00:06:30,911
因此当算法prison算法需要去知道这个迭代器的一些特性

96
00:06:31,167 --> 00:06:31,679
有时候

97
00:06:32,959 --> 00:06:35,007
这个迭代器

98
00:06:36,031 --> 00:06:40,895
是通过这张图现在大家已经很熟悉了这张图

99
00:06:41,919 --> 00:06:44,479
放到萃取机锤子里面来

100
00:06:44,735 --> 00:06:46,271
是怎么走的呢

101
00:06:46,527 --> 00:06:48,319
萃取剂分两部分

102
00:06:48,575 --> 00:06:52,159
部分是针对指针的一部分是针对class

103
00:06:52,927 --> 00:06:55,487
所以他会跑到指针的这一部分的

104
00:06:57,535 --> 00:06:59,583
这个是肉

105
00:07:00,607 --> 00:07:03,423
在刚刚看的是Java的版本

106
00:07:03,679 --> 00:07:04,959
非常直观

107
00:07:06,495 --> 00:07:08,287
4.9的版本呢

108
00:07:08,799 --> 00:07:11,103
有很多让人讨厌的头痛了

109
00:07:11,615 --> 00:07:12,383
我来看看

110
00:07:12,639 --> 00:07:13,919
我会在这里

111
00:07:15,711 --> 00:07:17,247
他的Beta

112
00:07:18,015 --> 00:07:18,527
这个

113
00:07:19,039 --> 00:07:20,319
Element

114
00:07:21,855 --> 00:07:25,439
这个是什么类型是这个类型

115
00:07:26,463 --> 00:07:30,303
哎呀等会上从碧落下黄泉去找一找这些

116
00:07:30,559 --> 00:07:32,351
类型又是什么

117
00:07:33,119 --> 00:07:36,959
找到了这个这个东西

118
00:07:37,215 --> 00:07:38,751
在哪里呢我看一下

119
00:07:39,775 --> 00:07:41,567
Etcp

120
00:07:46,687 --> 00:07:49,503
一下子晕了我看看在什么地方

121
00:07:52,575 --> 00:07:56,927
浙商银行ATM就是这一个

122
00:07:58,207 --> 00:08:01,279
这一个是什么这个又是浅蓝色的是一个

123
00:08:01,791 --> 00:08:04,351
这个是什么呢它这个地方来

124
00:08:04,863 --> 00:08:11,007
所以你一样苹果在这个地方慢慢地看你会看得出来我尽量都把线条都拉好了

125
00:08:11,775 --> 00:08:16,127
再讲一次这一个变量就是这一种类型

126
00:08:16,639 --> 00:08:17,919
这种类型

127
00:08:18,175 --> 00:08:19,199
就是这一个

128
00:08:20,735 --> 00:08:22,783
这一个那个源代码了

129
00:08:23,039 --> 00:08:26,111
这一个就是浅蓝色的是一个

130
00:08:26,367 --> 00:08:29,951
因为他们都是一些他比赛吗这个就是这一个

131
00:08:31,999 --> 00:08:33,279
所以

132
00:08:33,535 --> 00:08:36,863
绿色的这一个数这个App

133
00:08:37,119 --> 00:08:39,167
它的是什么类型呢

134
00:08:39,423 --> 00:08:40,959
这一种类型

135
00:08:41,471 --> 00:08:43,775
终于我们找到了这个东西

136
00:08:44,031 --> 00:08:50,175
这一个类型好现在这边先摆着谈一下对于数组

137
00:08:51,967 --> 00:08:54,015
你一般在使用数组的时候

138
00:08:55,807 --> 00:08:56,831
你是这么写的

139
00:09:00,671 --> 00:09:01,951
写成这样可以吗

140
00:09:02,975 --> 00:09:03,743
不行

141
00:09:05,791 --> 00:09:07,071
写成这样可以吗

142
00:09:08,351 --> 00:09:08,863
可以

143
00:09:09,887 --> 00:09:11,935
体会一下这个两者的不同

144
00:09:13,215 --> 00:09:15,263
语言本身就这么规定了

145
00:09:15,519 --> 00:09:18,335
上面这个写法不行下面这个写完可以

146
00:09:21,407 --> 00:09:22,431
所以

147
00:09:22,687 --> 00:09:25,503
刚刚在这个地方这一个

148
00:09:25,759 --> 00:09:26,783
电量

149
00:09:27,039 --> 00:09:29,599
他是这一种类型

150
00:09:30,111 --> 00:09:36,255
这个差评饭也就是右上角的这个差别放一样的地位

151
00:09:38,559 --> 00:09:44,703
他用这种方式在这一个Class要说的这个class

152
00:09:44,959 --> 00:09:47,519
里面去定义出一个

153
00:09:47,775 --> 00:09:48,799
出来

154
00:09:50,335 --> 00:09:52,127
何必如此呢

155
00:09:54,431 --> 00:09:55,967
再看一下上一页

156
00:09:56,223 --> 00:09:59,551
这样写不是非常单纯吗值观吗

157
00:10:00,319 --> 00:10:03,647
为什么要变成4点910这个样子

158
00:10:03,903 --> 00:10:06,975
这部分也是我不以为然的啊

159
00:10:07,231 --> 00:10:10,047
我不认为这么做有它的好处

160
00:10:11,071 --> 00:10:14,655
坏处倒是很多看的时候看得眼花缭乱

161
00:10:18,495 --> 00:10:20,031
好

162
00:10:20,543 --> 00:10:21,823
这个Siri

163
00:10:22,847 --> 00:10:26,175
下一张投影片我准备的是forward

164
00:10:27,199 --> 00:10:33,087
增删除了我知道数据呈现在资料整理的资料呈现在这里我就不打算讲他了

165
00:10:33,599 --> 00:10:39,743
为什么呢因为forecast他是一个单向链表而我们前面已经介绍过双向

166
00:10:39,999 --> 00:10:46,143
项链表了你只要把如果你倒带回去看前面的双向链表把这张

167
00:10:46,399 --> 00:10:47,167
把相关的图

168
00:10:47,423 --> 00:10:53,567
但这个一比较的话那是一模一样的只不过双向链表他可以说

169
00:10:53,823 --> 00:10:59,711
双向的走往前往后走而单向链表只能有一个方向只是这样而已

170
00:11:05,343 --> 00:11:08,159
我们有非常短的时间介绍了瑞

171
00:11:08,415 --> 00:11:12,511
这个容器和forwards的单向链表这个容器

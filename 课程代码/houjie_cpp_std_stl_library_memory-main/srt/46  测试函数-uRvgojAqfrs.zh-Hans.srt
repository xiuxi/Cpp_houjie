1
00:00:06,912 --> 00:00:07,424
往下看

2
00:00:08,448 --> 00:00:09,728
所以这就是一个

3
00:00:09,984 --> 00:00:13,568
可以搬动move Mobile的版本现在呢

4
00:00:14,336 --> 00:00:15,104
这一

5
00:00:15,872 --> 00:00:16,384
段

6
00:00:17,152 --> 00:00:18,432
这是我的测试程序

7
00:00:21,760 --> 00:00:23,040
Best Mobile

8
00:00:24,576 --> 00:00:28,160
我这个函数因为要应付各式各样的容器

9
00:00:28,416 --> 00:00:30,208
而且这个容器里面

10
00:00:30,464 --> 00:00:33,024
又放着有两种版本的元素

11
00:00:33,536 --> 00:00:35,584
所以我一定要用模板来写

12
00:00:36,352 --> 00:00:38,400
趁此机会在这个链

13
00:00:38,656 --> 00:00:41,472
弟子要去练习一些过去学到了

14
00:00:41,984 --> 00:00:42,752
一些

15
00:00:43,264 --> 00:00:43,776
小技巧

16
00:00:44,800 --> 00:00:45,824
首先这是模板

17
00:00:46,592 --> 00:00:47,360
我收到的

18
00:00:47,616 --> 00:00:48,384
是

19
00:00:49,408 --> 00:00:50,176
这个是

20
00:00:50,688 --> 00:00:52,480
应该从这里看齐这个这么多

21
00:00:52,992 --> 00:00:54,528
代码从这里开启

22
00:00:56,320 --> 00:00:57,600
这是调用的形式

23
00:00:58,880 --> 00:01:00,928
我现在要测试的是

24
00:01:01,952 --> 00:01:06,816
总会有五次这样的调用setstate

25
00:01:07,072 --> 00:01:08,352
这一次的Master

26
00:01:09,632 --> 00:01:12,192
我传进来了我的元素放的是

27
00:01:12,448 --> 00:01:14,240
这一个这个就是你刚看到的

28
00:01:14,752 --> 00:01:16,032
魔兽版本

29
00:01:16,288 --> 00:01:17,312
这一个的

30
00:01:17,568 --> 00:01:19,360
就是number拨版本

31
00:01:22,176 --> 00:01:23,712
我把这两个传进来

32
00:01:26,528 --> 00:01:29,344
它编译器会推导出来

33
00:01:29,600 --> 00:01:31,648
这个是模板函数

34
00:01:32,160 --> 00:01:33,696
推导出

35
00:01:34,208 --> 00:01:35,488
这是什么类型

36
00:01:36,512 --> 00:01:37,280
就是这样

37
00:01:37,792 --> 00:01:41,888
我这样表示是一个是x

38
00:01:43,936 --> 00:01:45,472
推出来之后呢

39
00:01:45,984 --> 00:01:47,520
我想在这里头

40
00:01:47,776 --> 00:01:52,128
我要去取得他这里面的这一个元素类型

41
00:01:52,896 --> 00:01:57,504
汉这个元素类型这两个是包在m n m

42
00:01:58,784 --> 00:02:00,064
我想去取出来

43
00:02:01,600 --> 00:02:05,440
我才学出来之后我才知道我要放什么元素进去

44
00:02:05,696 --> 00:02:08,768
我叫做300万个那种元素放进去

45
00:02:11,584 --> 00:02:15,680
这里遇到一个难题呀这一模板里面好吗

46
00:02:15,936 --> 00:02:17,984
把这东西放下就想一件事情

47
00:02:20,032 --> 00:02:21,568
小诗词体会模板

48
00:02:23,872 --> 00:02:24,384
二

49
00:02:24,896 --> 00:02:26,688
是一个函数模板

50
00:02:27,200 --> 00:02:28,992
我在调用它的时候

51
00:02:29,760 --> 00:02:31,296
我是我是

52
00:02:31,552 --> 00:02:33,856
放大镜就能参数

53
00:02:34,624 --> 00:02:36,928
我在调用它的时候

54
00:02:37,184 --> 00:02:42,048
放首Angel有小括号零食对象放进去

55
00:02:43,840 --> 00:02:46,656
我有没有可能放无法进去了

56
00:02:48,192 --> 00:02:49,216
换模板

57
00:02:49,472 --> 00:02:50,496
放到

58
00:02:50,752 --> 00:02:52,544
去掉方程参数去

59
00:02:52,800 --> 00:02:54,336
调用一个模板函数

60
00:02:56,896 --> 00:02:59,200
如果那样就很好

61
00:03:04,320 --> 00:03:08,672
我在设计这个例子的时候想到没有太久之前我想到

62
00:03:10,208 --> 00:03:14,304
有一个技巧教模板的模板template of template

63
00:03:15,584 --> 00:03:17,376
好像可以解决这个问题

64
00:03:18,400 --> 00:03:24,544
不过那个一方面对大家也是太复杂了而方便我也还真的对把那个拿出来看看到底可不可以解决

65
00:03:25,056 --> 00:03:27,360
我现在就不采用这个解法

66
00:03:28,384 --> 00:03:31,968
所以我是怎么做我们等的是在复习前面我们所学过的一些

67
00:03:32,480 --> 00:03:35,040
Rs-232c我利用这个机会

68
00:03:36,576 --> 00:03:39,136
我们把这个东西放进去之后

69
00:03:39,648 --> 00:03:40,928
我可以

70
00:03:41,952 --> 00:03:46,304
去高温萃取剂作a Hollow这一个type

71
00:03:46,560 --> 00:03:48,352
他的iterator是什么

72
00:03:49,888 --> 00:03:50,656
告诉我

73
00:03:51,680 --> 00:03:53,728
得到这个iterator之后

74
00:03:54,752 --> 00:03:58,336
问萃取剂说请问一下value type是什么

75
00:04:00,128 --> 00:04:01,408
在这个例子里头

76
00:04:02,688 --> 00:04:06,016
这个得到了就是这个的iterator

77
00:04:07,808 --> 00:04:10,368
他的value type就是这个呀

78
00:04:12,160 --> 00:04:13,184
这个就是我要的

79
00:04:14,976 --> 00:04:16,512
所以这一行

80
00:04:17,536 --> 00:04:20,607
就得到了这一个东西

81
00:04:21,375 --> 00:04:23,679
我把他换那个名字叫Z1 type

82
00:04:26,239 --> 00:04:28,543
然后phillips 300万次

83
00:04:28,799 --> 00:04:29,823
这个非礼勿视

84
00:04:30,335 --> 00:04:31,359
函数传进来的

85
00:04:32,127 --> 00:04:35,711
问答我我的地址是我给3000000次

86
00:04:37,503 --> 00:04:39,807
每一次就是一个随机数

87
00:04:40,831 --> 00:04:41,855
转为

88
00:04:42,367 --> 00:04:42,879
Buffer

89
00:04:43,391 --> 00:04:44,671
是一个字符串

90
00:04:46,463 --> 00:04:46,975
然后

91
00:04:47,231 --> 00:04:47,999
定位

92
00:04:48,511 --> 00:04:51,071
贼传进来的这一个容器呀

93
00:04:51,839 --> 00:04:52,351
去处

94
00:04:52,863 --> 00:04:53,375
终点

95
00:04:53,631 --> 00:04:55,935
一开始就是一个空的容器

96
00:04:56,447 --> 00:04:58,239
终点

97
00:04:58,751 --> 00:05:01,055
把这300万次每次都取中点

98
00:05:02,591 --> 00:05:04,383
做insert动作

99
00:05:04,895 --> 00:05:06,687
现在这个IP是指向终点

100
00:05:06,943 --> 00:05:07,455
Insert

101
00:05:08,223 --> 00:05:11,807
每次音色的就用这个太不只是刚刚取出来这个态度

102
00:05:13,343 --> 00:05:16,415
把刚刚的那个随机数放进去当初始

103
00:05:16,671 --> 00:05:21,279
这样我就做出死300次每一次都做出一个

104
00:05:22,303 --> 00:05:23,327
东西出来

105
00:05:25,887 --> 00:05:30,495
下一次这里有一这里有二下一次那去住的是这1个台

106
00:05:32,799 --> 00:05:34,079
也做300万次

107
00:05:35,871 --> 00:05:38,431
这样就可以得到前面这个画面

108
00:05:40,479 --> 00:05:42,527
请问这个话没有这样的话

109
00:05:42,783 --> 00:05:44,575
汉下面这一段

110
00:05:44,831 --> 00:05:46,111
我们就可以来比较

111
00:05:50,207 --> 00:05:51,231
这边

112
00:05:54,047 --> 00:05:57,119
我刚刚已经提过了这个音色的动作

113
00:05:58,399 --> 00:06:00,447
好在不同地在所有的

114
00:06:01,215 --> 00:06:03,263
容器都提供这个函数

115
00:06:05,055 --> 00:06:06,079
已经提过了

116
00:06:07,871 --> 00:06:09,663
好放进去之后

117
00:06:10,687 --> 00:06:12,479
我想要检测时间点

118
00:06:12,735 --> 00:06:14,783
这个时间这个前面已经在

119
00:06:15,039 --> 00:06:16,831
在第1讲里面了

120
00:06:17,087 --> 00:06:18,879
那个例子都一再的出现

121
00:06:19,135 --> 00:06:22,207
时间检测就是这里正有一个clock

122
00:06:22,975 --> 00:06:23,743
这边的

123
00:06:24,255 --> 00:06:25,023
也有

124
00:06:25,279 --> 00:06:27,583
这个地方有另外一个clock

125
00:06:28,095 --> 00:06:29,119
两者相减

126
00:06:29,375 --> 00:06:31,423
我知道这一段到这段的时间

127
00:06:32,959 --> 00:06:34,239
执行结果在这里

128
00:06:34,751 --> 00:06:37,055
一个动作

129
00:06:40,895 --> 00:06:44,479
这个叔叔是怎么输出的是多少次

130
00:06:46,527 --> 00:06:52,671
这个画面被我截断了其实是这个这一个这一个这一个他们各自执行多少次

131
00:06:52,927 --> 00:06:53,951
这个的输出

132
00:06:54,719 --> 00:06:57,279
我把它另外独立一个函数出来

133
00:06:58,047 --> 00:06:58,815
这个东西

134
00:07:01,375 --> 00:07:04,703
因为等下他第2次测试的时候也要做一个这个动作

135
00:07:05,471 --> 00:07:08,543
这我就不要自己打断了78行了我就不要

136
00:07:08,799 --> 00:07:09,567
前两次

137
00:07:09,823 --> 00:07:11,359
独立出来

138
00:07:13,919 --> 00:07:15,967
好随到这个地方我们就

139
00:07:16,223 --> 00:07:17,759
一个我们会洗

140
00:07:18,527 --> 00:07:24,159
说的还没有每一个细节讲的很详细可是我们已经知道大概要写一个movable

141
00:07:24,671 --> 00:07:26,463
大字幕府功能的这一种

142
00:07:26,975 --> 00:07:28,255
微信怎么写

143
00:07:28,511 --> 00:07:30,559
以及在这里我要测试

144
00:07:30,815 --> 00:07:31,327
我是

145
00:07:31,583 --> 00:07:32,863
用了哪些技巧

146
00:07:35,679 --> 00:07:38,239
除了把300万个元素放进去之外

147
00:07:39,007 --> 00:07:40,799
我下面要做这个动作

148
00:07:42,079 --> 00:07:43,359
这里有三个动作

149
00:07:44,383 --> 00:07:45,663
就是这里的输出

150
00:07:45,919 --> 00:07:48,479
一个是copy的是move copy一个是丝袜

151
00:07:52,063 --> 00:07:53,343
这个动作

152
00:07:54,111 --> 00:07:55,903
是把整个容器

153
00:07:56,159 --> 00:07:56,927
拷贝到

154
00:07:57,439 --> 00:07:59,487
从几万到几万万

155
00:07:59,743 --> 00:08:02,047
我随便取个名字我想在华明

156
00:08:02,559 --> 00:08:04,863
花时间去想这人怎么命名

157
00:08:05,119 --> 00:08:05,887
110000

158
00:08:06,143 --> 00:08:07,423
卡比到四万万

159
00:08:08,959 --> 00:08:15,103
我看看有多少时间这个地这支边你实际上拿到了代码上下回家的时间点

160
00:08:15,615 --> 00:08:18,431
我这里由于画面的因素的都拿掉了

161
00:08:19,967 --> 00:08:20,991
这个动作呢

162
00:08:21,503 --> 00:08:22,271
也是copy

163
00:08:23,551 --> 00:08:24,319
也是copy

164
00:08:24,831 --> 00:08:25,343
但是

165
00:08:26,111 --> 00:08:27,135
吴子明

166
00:08:28,671 --> 00:08:32,767
要编译器去找木版本的copy_copy

167
00:08:35,071 --> 00:08:38,655
这个这个我也不弃想下去因为这个也是属于

168
00:08:39,167 --> 00:08:45,311
不是现在要谈的主机现在只是让你知道我们可以copy也可以万科

169
00:08:45,567 --> 00:08:46,079
Copy

170
00:08:46,847 --> 00:08:49,919
无靠的就是浅拷贝要记住这个事情

171
00:08:53,247 --> 00:08:54,271
丝袜子

172
00:08:55,039 --> 00:08:56,319
奥德赛后交换

173
00:08:56,831 --> 00:08:58,111
看看他花了时间

174
00:08:58,623 --> 00:08:59,647
我们发现

175
00:08:59,903 --> 00:09:01,951
我说短发的300万个元素

176
00:09:02,719 --> 00:09:05,023
丝袜时间几乎是零

177
00:09:06,559 --> 00:09:09,375
莫斯科比的时间几乎是零

178
00:09:10,399 --> 00:09:14,495
但真正咖啡的时间深拷贝的时间就多了

179
00:09:15,263 --> 00:09:16,799
3500x

180
00:09:19,359 --> 00:09:20,383
这是怎么回事

181
00:09:21,663 --> 00:09:22,943
其实你可以想

182
00:09:23,967 --> 00:09:26,271
如果东西是在这至尊的话

183
00:09:28,319 --> 00:09:31,135
我要做木耳的动作指针拉过去

184
00:09:31,391 --> 00:09:32,927
刚刚这边形画出图片来了

185
00:09:35,999 --> 00:09:37,023
所以所谓的

186
00:09:37,279 --> 00:09:41,631
Move copy是浅拷贝浅拷贝太快了指针拷贝而已

187
00:09:41,887 --> 00:09:42,911
那你刚刚的

188
00:09:43,167 --> 00:09:47,519
栗子300万个元素也不过就是300万根尺寸

189
00:09:50,079 --> 00:09:56,223
更何况其实还不是这样不过暂时你这样想啊300万个元素每个元素里都是一根指针

190
00:09:58,015 --> 00:10:01,087
所以那个浅拷贝的是不带着这一块的

191
00:10:02,879 --> 00:10:04,415
那下必然大大提升

192
00:10:06,975 --> 00:10:07,999
但是

193
00:10:09,023 --> 00:10:10,815
但是浅拷贝带来的

194
00:10:11,071 --> 00:10:13,631
副作用是什么这是非常危险

195
00:10:15,423 --> 00:10:17,471
现在变成两根指针共享

196
00:10:19,519 --> 00:10:25,407
或者你这个情况来讲吧原来这个指针是为落实没有共享和原来这个指针不能用了

197
00:10:25,919 --> 00:10:28,735
那你依靠背完之后你原来东西不能用

198
00:10:30,271 --> 00:10:31,039
这不是很

199
00:10:31,807 --> 00:10:32,319
危险吗

200
00:10:35,391 --> 00:10:36,159
所以

201
00:10:36,671 --> 00:10:37,951
木府是不能乱用

202
00:10:39,999 --> 00:10:41,791
要用木板本

203
00:10:42,815 --> 00:10:44,095
有一些条件

204
00:10:44,351 --> 00:10:46,655
现在可以让你马上联系马上

205
00:10:46,911 --> 00:10:49,471
想得通的条件一个就是

206
00:10:50,239 --> 00:10:53,311
幕府之后原来都是不再使用

207
00:10:54,847 --> 00:10:55,359
你看

208
00:10:55,615 --> 00:10:57,151
原来东西在这里

209
00:10:57,919 --> 00:10:59,455
幕府之后呢

210
00:10:59,711 --> 00:11:01,759
Most popular copy

211
00:11:02,015 --> 00:11:06,367
之后这个指针拷贝过来他已经完成任务了这个东西断了

212
00:11:07,391 --> 00:11:08,671
说原来这个东西

213
00:11:08,927 --> 00:11:10,207
不可以再被使用

214
00:11:11,487 --> 00:11:17,631
你必须自己的写代码的时候确认你的确不会再用的东西你猜

215
00:11:17,887 --> 00:11:20,191
才可以选择用

216
00:11:22,239 --> 00:11:25,055
那刚刚那个例子是这样吗

217
00:11:26,079 --> 00:11:26,591
在这里

218
00:11:26,847 --> 00:11:32,991
300万次的因素每一个因素都是一个这个

219
00:11:34,271 --> 00:11:35,295
这是什么

220
00:11:35,551 --> 00:11:37,855
这是一个临时对象

221
00:11:38,623 --> 00:11:44,767
这个临时对象放进去之后他就失去他就失去生命

222
00:11:45,023 --> 00:11:51,167
再也不会用到他了没有命名啊接下来怎么用

223
00:11:51,423 --> 00:11:57,567
所以我们在设计在暗查元素的过程里面比如说在实验室里你在机器里面

224
00:11:57,823 --> 00:12:03,967
一段不断地拿到数据你要放到元素去你不断地拿到数据这个数据

225
00:12:04,223 --> 00:12:09,343
数据你就要先放你一定会是这样子先放到把它做成一个

226
00:12:09,599 --> 00:12:15,743
对象临时对象放进去之后这一会就这个就不要因为有放到

227
00:12:15,999 --> 00:12:22,143
到元素放到容器去对这种情况才能发生

228
00:12:22,399 --> 00:12:28,543
那这是一个幼子也许你现在还不太清楚什么又指那就算了吧这是一个临时对象

229
00:12:28,799 --> 00:12:34,943
就坐这边又指最便宜是一看到这个

230
00:12:35,199 --> 00:12:41,343
他知道这个将来绝对不会再被使用它就自动的她看到这样这是一个右

231
00:12:41,599 --> 00:12:45,695
又指这是一个临时对象它就自动的去

232
00:12:46,207 --> 00:12:52,351
木版本的卡片如果木门咖啡

233
00:12:52,607 --> 00:12:55,167
有的话那现在有啊

234
00:12:55,423 --> 00:13:01,567
现在我就是游戏的那个所以就掉到他了所以在

235
00:13:01,823 --> 00:13:07,967
在这边在这里莫夫卡

236
00:13:08,223 --> 00:13:14,367
7700万次

237
00:14:12,223 --> 00:14:18,367
如果号我我我很有把握告诉你的话我就这么去告诉他

238
00:14:18,623 --> 00:14:24,767
加上这个莫非这是一个什么这也不是现在要谈的

239
00:14:25,023 --> 00:14:31,167
不过就是有这两种一种是传统做法一种是告诉宾

240
00:14:31,423 --> 00:14:37,567
定义气请你帮我找个用那个木制的版本

241
00:14:37,823 --> 00:14:43,967
这个表多会太快了

242
00:14:44,223 --> 00:14:50,367
当然了你要注意啊现在我是把整个容器卡的要不是刚

243
00:14:50,623 --> 00:14:56,767
300万次的元素的卡比不是这边是元素的咖啡

244
00:14:57,023 --> 00:15:03,167
这便是容器的copy分两件事情

245
00:15:03,423 --> 00:15:09,567
好等一下我就会带你去看容

246
00:15:09,823 --> 00:15:15,967
器本身的copy这两个就是copy了容器的比是什么回事

247
00:15:16,223 --> 00:15:22,367
那么在这个地方你既然高

248
00:15:22,623 --> 00:15:28,767
告诉编译器请你请他帮你用快速的那个

249
00:15:29,023 --> 00:15:35,167
用完之后你这个来源端就作废了你自己要这个

250
00:15:35,423 --> 00:15:41,567
这个这边我有个住家你必须确保接下来

251
00:15:41,823 --> 00:15:47,967
不会再用到希望是10000次来源端把浅拷贝过去之后是10000就出差

252
00:15:48,223 --> 00:15:54,367
处在一种危险的状态之下也为是这个

253
00:15:54,623 --> 00:16:00,767
元素a元素的浅拷贝之后这边他就打乱了

254
00:16:01,023 --> 00:16:07,167
你要是继续去用它就完蛋了

255
00:16:07,423 --> 00:16:13,567
所以莫夫人一定要注意到一件事情你如果去查规格的话他会告诉你说

256
00:16:13,823 --> 00:16:19,967
他会告诉你我看看这边我记得有一段文字

257
00:16:20,223 --> 00:16:26,367
来找一找

258
00:16:26,623 --> 00:16:32,767
也许等下会出现我用口头说好了他会告诉你说好

259
00:16:33,023 --> 00:16:39,167
护肤之后就是on special speechify

260
00:16:39,423 --> 00:16:45,567
反正是不再确认也就是危险的

261
00:16:45,823 --> 00:16:51,967
也就是你不能再用那个东西

262
00:16:52,223 --> 00:16:58,367
好在这次测试城市的部分

263
00:16:58,623 --> 00:17:04,767
They move现在这边要靠一个小段落让我们先来看看

264
00:17:05,023 --> 00:17:11,167
刚刚讲的都是元素的木府很卡皮

265
00:17:11,423 --> 00:17:17,567
Vector它本身长这样子

266
00:17:17,823 --> 00:17:23,967
他的头其实是三根支撑这个我们前面提过的第2讲

267
00:17:24,223 --> 00:17:30,367
所以如果他被幕府的话到底是它的前台

268
00:17:30,623 --> 00:17:36,767
宝贝是怎么回事刚刚在上一页这一个就是钱

269
00:17:37,023 --> 00:17:43,167
宝贝那应该是只是把他三个指针

270
00:17:43,423 --> 00:17:49,567
只是告别了三根指针落应该是这样吗

271
00:17:49,823 --> 00:17:55,967
Vector这两行是刚刚超过来的这个就是深拷贝

272
00:17:56,223 --> 00:18:02,367
这个事情拷贝深拷贝下一页

273
00:18:02,623 --> 00:18:08,767
就是浅拷贝我分两业来讲注意这个画面深拷贝

274
00:18:09,023 --> 00:18:15,167
编译器会去调用

275
00:18:15,423 --> 00:18:21,567
这就是咖啡感受到了拷贝构造他所做的事情

276
00:18:21,823 --> 00:18:27,967
在这里慢慢看这些代码这里面其实就调用

277
00:18:28,223 --> 00:18:34,367
这个函数这个函数所做的事情这是一个咖啡

278
00:18:34,623 --> 00:18:40,767
就是把来源端的起点跟终点起点分钟

279
00:18:41,023 --> 00:18:47,167
华盛顿在这里假设一打云端是这样

280
00:18:47,423 --> 00:18:53,567
拷贝到拷贝到目的端木地段就

281
00:18:53,823 --> 00:18:59,967
第3参数是这个是什么你对一下右边这个图

282
00:19:00,223 --> 00:19:06,367
你就会知道上面有一个这一个这个呢

283
00:19:06,623 --> 00:19:12,767
这个这个指针这个也就是

284
00:19:13,023 --> 00:19:19,167
就是起点所以这一个动作就是把来源端

285
00:19:19,423 --> 00:19:25,567
拷贝一份做copy到目的短曲

286
00:19:25,823 --> 00:19:31,967
这是深拷贝要容器本身

287
00:19:32,223 --> 00:19:38,367
在规划把量事件刚刚说花了多少时间

288
00:19:38,623 --> 00:19:44,767
再看一下这个执行结果还是深拷贝3500美元

289
00:19:45,023 --> 00:19:51,167
而浅拷贝呢也就是所谓的木

290
00:19:51,423 --> 00:19:57,567
这里他的动作在下一列他所

291
00:19:57,823 --> 00:20:03,967
调用的函数是一个注意这个符号就是用

292
00:20:04,223 --> 00:20:09,343
这个符号来区分版本的版本

293
00:20:09,599 --> 00:20:15,743
里面所做的事情当然是都是标准库写好的话它它里面所做的事

294
00:20:15,999 --> 00:20:22,143
事情是什么呢他说变了东西线条的帮你打好了你看这样调用到

295
00:20:22,399 --> 00:20:28,543
这里这里面所做的事情那个丝袜本网上再调用是这一个还是

296
00:20:28,799 --> 00:20:34,943
这个函数所做的事情只是把三根指针脚

297
00:20:35,199 --> 00:20:35,967
笑话

298
00:20:37,247 --> 00:20:43,391
所谓交换就是我的变你的你的电我的吧这是

299
00:20:43,647 --> 00:20:49,791
三个动作这一根很粗的线条引导你做做完

300
00:20:50,047 --> 00:20:56,191
完之后来源端根目的端

301
00:20:56,447 --> 00:21:02,591
这个头尾指针来源端已有一套这个目的端也有一套这个

302
00:21:02,847 --> 00:21:08,991
他们指向相同的东西

303
00:21:09,247 --> 00:21:15,391
只是实话不是三根指针对容

304
00:21:15,647 --> 00:21:21,792
勇气做木府只是10瓦的三根指针只有多快这就表现在刚

305
00:21:22,048 --> 00:21:25,120
刚刚林

306
00:21:25,376 --> 00:21:27,424
打开的是0.01

307
00:21:29,472 --> 00:21:31,264
华盛顿的话

308
00:21:32,032 --> 00:21:38,176
来源端和目的端来源大众集团是以来源的目的端的三套指针三个支撑

309
00:21:38,432 --> 00:21:40,992
同一个东西

310
00:21:41,760 --> 00:21:43,808
知道了非常危险了

311
00:21:44,832 --> 00:21:46,624
两者共享非常危险

312
00:21:47,648 --> 00:21:49,952
所以你心里头一定要非常清楚

313
00:21:50,464 --> 00:21:51,488
你帮你

314
00:21:52,000 --> 00:21:54,816
柞木原来的那个东西就

315
00:21:55,328 --> 00:21:56,864
作废了

316
00:21:57,120 --> 00:21:58,656
Unspecified

317
00:21:58,912 --> 00:22:02,752
你不能再去用那你用他就危险

318
00:22:05,824 --> 00:22:08,896
这是对容器的幕府

319
00:22:15,808 --> 00:22:18,880
我们很关心

320
00:22:19,136 --> 00:22:22,720
用我们常在用标准库的字符串

321
00:22:23,744 --> 00:22:27,072
所以我们很关心字符串有没有有没有雨

322
00:22:27,584 --> 00:22:30,400
有没有用到2.0所说很重要的木府

323
00:22:31,680 --> 00:22:33,728
关心的事情

324
00:22:34,496 --> 00:22:35,520
去看看

325
00:22:37,568 --> 00:22:38,848
这个是

326
00:22:42,176 --> 00:22:44,480
这么多方去看一下

327
00:22:44,736 --> 00:22:46,016
好

328
00:22:46,784 --> 00:22:48,064
Stream

329
00:22:48,576 --> 00:22:49,344
这个class

330
00:22:50,624 --> 00:22:53,696
前面已经提过了它其实是一个Python

331
00:22:53,952 --> 00:22:55,744
所以我们要去看的是

332
00:22:56,000 --> 00:22:58,048
他的Backstreet

333
00:22:58,304 --> 00:23:01,888
我看看有没有把起点告诉各位7点

334
00:23:02,144 --> 00:23:03,680
现在的class

335
00:23:06,752 --> 00:23:08,032
没有列出啊

336
00:23:08,288 --> 00:23:12,640
啊反正针一些呢这五个片段是在fast

337
00:23:12,896 --> 00:23:13,664
是在

338
00:23:14,432 --> 00:23:18,528
Fstrim这里头这个打头的片段

339
00:23:19,552 --> 00:23:21,856
我要引导你去看看

340
00:23:22,880 --> 00:23:23,904
他

341
00:23:25,184 --> 00:23:27,744
也就是extreme

342
00:23:28,000 --> 00:23:30,560
有没有写出那个木板的

343
00:23:32,352 --> 00:23:33,376
啊这是什么

344
00:23:35,936 --> 00:23:37,472
这个就是木版本了

345
00:23:39,008 --> 00:23:44,128
在他的源代码里面有这一段一段注解这个酵母分operator

346
00:23:48,480 --> 00:23:49,504
那这个呢

347
00:23:50,784 --> 00:23:52,320
看到这一个

348
00:23:53,088 --> 00:23:54,368
这就是木版本

349
00:23:55,904 --> 00:23:58,464
它的注解有说这个叫木砍swapped

350
00:23:59,488 --> 00:24:00,000
所以

351
00:24:01,024 --> 00:24:02,048
这两个版本

352
00:24:03,072 --> 00:24:05,376
我们说现在关注有四个函数吗

353
00:24:05,888 --> 00:24:09,728
哪个是跟他比有关两个木府有关这两个就是

354
00:24:10,496 --> 00:24:11,264
那这边呢

355
00:24:13,056 --> 00:24:17,664
这个就是传统的咖啡咖啡色卡被复制

356
00:24:19,712 --> 00:24:20,480
这个

357
00:24:23,040 --> 00:24:24,832
这个是拷贝复制啊

358
00:24:25,088 --> 00:24:27,136
这个那这个就是拷贝构造

359
00:24:28,672 --> 00:24:29,952
这个没有把源代码

360
00:24:30,208 --> 00:24:32,512
烈烈的另外一个地方好水没有

361
00:24:32,768 --> 00:24:33,792
也许在后头

362
00:24:37,632 --> 00:24:38,656
这个是什么

363
00:24:40,448 --> 00:24:41,216
我要晕了

364
00:24:41,472 --> 00:24:43,008
来看一下这个是什么东西

365
00:24:44,288 --> 00:24:48,896
这一个就是说这个名字叫真一个xx

366
00:24:50,176 --> 00:24:52,992
阿曼哈曼号的plastic strain

367
00:24:53,248 --> 00:24:54,016
所以它是

368
00:24:54,528 --> 00:24:58,880
分类相同的函数那就是抗衰的故障组

369
00:25:00,416 --> 00:25:01,440
所以这里有

370
00:25:02,720 --> 00:25:03,488
构造函数

371
00:25:04,768 --> 00:25:05,536
这个呢

372
00:25:06,304 --> 00:25:08,096
这是拷贝构造函数

373
00:25:09,120 --> 00:25:11,424
等等我不要再讲了

374
00:25:11,680 --> 00:25:12,960
这些东西

375
00:25:13,216 --> 00:25:15,008
所以从这一个地方

376
00:25:15,264 --> 00:25:16,544
让你知道

377
00:25:17,056 --> 00:25:17,824
安心

378
00:25:18,336 --> 00:25:19,104
Train

379
00:25:19,616 --> 00:25:20,128
有

380
00:25:20,640 --> 00:25:21,920
带着衣服的功能

381
00:25:22,432 --> 00:25:28,576
安心的使用它把它放到容器去呀等等等都可以带来刚刚所谈到的

382
00:25:28,832 --> 00:25:30,112
好的效率

383
00:25:34,720 --> 00:25:35,744
最后一张投影片

384
00:25:37,536 --> 00:25:42,144
所以我们整个课程只是一个庞大的课程是讲

385
00:25:42,400 --> 00:25:43,680
MM全部结束

386
00:25:44,704 --> 00:25:49,312
现在的标准库可以说是一个大的宝库

387
00:25:50,336 --> 00:25:55,200
我们经过这样的脆一点进去分析它的体系结构

388
00:25:55,456 --> 00:25:56,992
看到好的语言代码

389
00:25:57,760 --> 00:25:58,528
不但

390
00:25:58,784 --> 00:26:02,624
有助于我们能够更好的去使用它

391
00:26:03,136 --> 00:26:04,416
而且我相信

392
00:26:04,672 --> 00:26:05,696
对于你的这个

393
00:26:06,464 --> 00:26:09,024
Cplusplus已经这个

394
00:26:09,280 --> 00:26:10,304
数据结构

395
00:26:10,560 --> 00:26:13,376
算法的这种技术的提升

396
00:26:13,888 --> 00:26:15,424
有莫大的帮助

397
00:26:15,680 --> 00:26:17,216
这个我非常确切

398
00:26:17,472 --> 00:26:18,752
只要你确实是

399
00:26:19,520 --> 00:26:21,568
跟着这个课程将深入下去

400
00:26:21,824 --> 00:26:26,432
这个巨大的非常帮助非常巨这个帮助是非常巨大

401
00:26:27,200 --> 00:26:27,968
非常巨大的

402
00:26:28,736 --> 00:26:29,504
好谢谢

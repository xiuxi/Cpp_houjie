1
00:00:00,512 --> 00:00:06,656
现在我们来看

2
00:00:06,912 --> 00:00:13,056
看第2集的从下面是一然后中间是二上面是32集

3
00:00:13,312 --> 00:00:16,384
分配器6A located

4
00:00:16,896 --> 00:00:18,176
Allocate

5
00:00:18,432 --> 00:00:21,248
旱冰

6
00:00:21,760 --> 00:00:25,088
这个clk的就写到这里吧这么简单吗

7
00:00:25,344 --> 00:00:31,488
是因为他把两个动作他把两大块动作切割到两个还是去了所以这

8
00:00:31,744 --> 00:00:32,768
这里只是调用

9
00:00:34,048 --> 00:00:40,192
当然我们都要一一去看它所调用的函数就是的OK那么我们

10
00:00:40,448 --> 00:00:41,728
我先看Hello Kitty

11
00:00:44,288 --> 00:00:46,080
我必须放到前面

12
00:00:48,384 --> 00:00:50,176
带着你去看一看

13
00:00:51,200 --> 00:00:54,784
一直以来存在都是没有人相信讲的东西

14
00:00:55,552 --> 00:00:57,344
我们现在看的是这一集

15
00:00:58,112 --> 00:00:59,648
这个里头

16
00:01:00,160 --> 00:01:01,696
有两根指针

17
00:01:03,232 --> 00:01:04,512
指向强

18
00:01:04,768 --> 00:01:07,328
不是这个接下去一串这个Master

19
00:01:08,864 --> 00:01:11,168
指向其中的某一个行另一个

20
00:01:11,680 --> 00:01:12,704
好记住这个事情

21
00:01:13,728 --> 00:01:17,056
这两根指针现在回到我们的源代码来

22
00:01:19,616 --> 00:01:20,384
人在吗

23
00:01:20,896 --> 00:01:21,408
好

24
00:01:22,432 --> 00:01:28,576
第2集的OK这两根指针我在这张图上面用红色汉

25
00:01:28,832 --> 00:01:30,368
淡紫色来表现

26
00:01:31,648 --> 00:01:36,000
将一目了然他在哪一个地方会是一下子就抓出来了

27
00:01:37,024 --> 00:01:39,072
这两根指针做什么事

28
00:01:39,584 --> 00:01:43,680
看上的名称一个叫allocations一个叫

29
00:01:43,936 --> 00:01:46,240
红色假期

30
00:01:47,008 --> 00:01:49,056
是用来标出

31
00:01:49,824 --> 00:01:52,896
最近的一次也就是上一次

32
00:01:53,920 --> 00:01:54,432
曾经

33
00:01:55,712 --> 00:01:56,992
分配出去的

34
00:01:57,248 --> 00:02:00,576
曾经满足一个分配动作的强

35
00:02:01,344 --> 00:02:04,928
怎么意思教师新的执着串起来有1万个圈

36
00:02:05,440 --> 00:02:09,024
其在第327这个地方这个唱歌

37
00:02:09,536 --> 00:02:11,840
上一次才刚给出去会过

38
00:02:13,376 --> 00:02:16,192
这个紫色的指针就指向它

39
00:02:17,472 --> 00:02:20,288
标出来他327号

40
00:02:21,056 --> 00:02:23,616
你刚刚是可以满足分配的

41
00:02:24,640 --> 00:02:30,784
所以下一次再有分配的需求进来的时候又有人要去看的时候就从

42
00:02:31,040 --> 00:02:33,600
从这个紫色这个指针所指的那一块

43
00:02:33,856 --> 00:02:37,184
先看先看他你刚已经满足了

44
00:02:37,440 --> 00:02:40,768
满足外界的需求在你现在可不可以再来一次大满足

45
00:02:41,792 --> 00:02:47,936
我现在只有1万个是某一些区块可能已经给光了有些去过还剩下一些空

46
00:02:48,192 --> 00:02:49,984
空姐到底哪一个区块是

47
00:02:50,496 --> 00:02:53,056
哪一个唱的哪个大块是可以

48
00:02:53,312 --> 00:02:54,336
给出去的呢

49
00:02:55,872 --> 00:02:56,640
很多

50
00:02:57,152 --> 00:02:58,176
不过优先

51
00:02:58,688 --> 00:03:01,760
从这个紫色的这一个指针看起

52
00:03:02,272 --> 00:03:03,552
这是他的作用

53
00:03:03,808 --> 00:03:06,624
在一个标并标示出来

54
00:03:08,416 --> 00:03:10,208
这当然是个经验法则了

55
00:03:10,464 --> 00:03:13,792
上一次这个也给过了也许这一次他还可以再给

56
00:03:15,328 --> 00:03:18,144
红色这个人这个叫的location

57
00:03:18,656 --> 00:03:20,192
这个意思是

58
00:03:20,448 --> 00:03:26,592
上一次回收拾回收到一份好那这一次要回收的话我也先从DNS

59
00:03:26,848 --> 00:03:28,384
然后确认一下

60
00:03:29,920 --> 00:03:35,040
刚刚曾经在我们朴实的脚是有希望的

61
00:03:36,576 --> 00:03:40,160
现在指针回收回来时落在哪一个

62
00:03:41,440 --> 00:03:43,488
刚刚有提过用夹杀法

63
00:03:44,256 --> 00:03:47,840
这个假说我刚刚说是从头开始加刷到尾巴

64
00:03:48,352 --> 00:03:50,400
10000个一个一个找

65
00:03:51,424 --> 00:03:55,776
这是最笨的方法但是也是最直接最直观

66
00:03:56,032 --> 00:04:02,176
可是为了再加上一个辅助的功能就是除了从头开始找之外

67
00:04:02,432 --> 00:04:07,808
外在这个之前先找一下上一次回收的那一块

68
00:04:08,064 --> 00:04:10,624
这个红色的指针指出来

69
00:04:12,672 --> 00:04:16,512
这是因为在计算机的这个

70
00:04:17,024 --> 00:04:19,583
领域投了我们发现一个事实

71
00:04:19,839 --> 00:04:21,375
这是数据有一种

72
00:04:21,631 --> 00:04:23,679
内聚性和区域性

73
00:04:25,471 --> 00:04:26,239
所以

74
00:04:26,751 --> 00:04:30,079
先前给过了你下次了先前还回来的

75
00:04:30,335 --> 00:04:34,687
这次游行回来也许就跟上一次的事其实是落在同一个

76
00:04:34,943 --> 00:04:36,991
同一个小区里头

77
00:04:38,783 --> 00:04:39,295
所以

78
00:04:40,319 --> 00:04:44,671
一个经验法则靠着两根指针去指着上一次

79
00:04:45,183 --> 00:04:47,999
曾经分配过的或者曾经回收过的

80
00:04:50,303 --> 00:04:51,583
最强的支撑

81
00:04:53,119 --> 00:04:58,239
好现在我开始看他总共也不过26行了虽然比前面大

82
00:04:58,495 --> 00:05:00,287
但是气质还是非常小

83
00:05:01,567 --> 00:05:07,711
我说过了Nokia located设计非常精致每一个总是非常的小

84
00:05:09,503 --> 00:05:11,807
这个OK的里头

85
00:05:12,063 --> 00:05:13,599
我在作家写的非常清楚

86
00:05:14,367 --> 00:05:17,439
如果马上就去判断这个指针

87
00:05:18,207 --> 00:05:19,231
她40

88
00:05:19,487 --> 00:05:23,839
这和他一开始当然是在整个系统运作的时候他是哪

89
00:05:25,119 --> 00:05:31,263
或者说是判断有指出来不过抱歉他说只是那块已经用光了

90
00:05:33,055 --> 00:05:36,383
Netflix available会逐一地点

91
00:05:36,639 --> 00:05:39,967
应用光的初始状态或者是

92
00:05:40,479 --> 00:05:41,247
用光了

93
00:05:41,759 --> 00:05:43,295
那么怎么办呢

94
00:05:44,575 --> 00:05:47,391
在唯一的补助机制没有了

95
00:05:48,159 --> 00:05:54,303
那么就只好从头早起10000个就从从0找到9999

96
00:05:54,559 --> 00:05:55,583
从头早起

97
00:05:56,095 --> 00:05:57,375
所以用一个form

98
00:05:59,935 --> 00:06:05,823
在我前面说这个楼梯这个这个北欧神话就是暴力

99
00:06:06,335 --> 00:06:09,919
现在这个地方那你看他的菠萝卜是这样写

100
00:06:12,223 --> 00:06:13,503
这里头

101
00:06:14,015 --> 00:06:15,807
有两个break

102
00:06:16,831 --> 00:06:18,111
有两个bricks

103
00:06:18,367 --> 00:06:19,647
会跳出来

104
00:06:19,903 --> 00:06:21,951
现在已经很少人这种写法

105
00:06:22,207 --> 00:06:23,231
非常暴力

106
00:06:24,767 --> 00:06:26,303
所以他在

107
00:06:26,559 --> 00:06:30,143
一直走反正如何条件就跳出来

108
00:06:31,167 --> 00:06:33,727
那他的条件是什么呢我们进去看

109
00:06:34,495 --> 00:06:36,543
这个啊

110
00:06:37,055 --> 00:06:38,847
爱是什么

111
00:06:39,103 --> 00:06:40,127
别太气了

112
00:06:40,383 --> 00:06:44,479
因为现在里头就10000是一堆放在一个vector little

113
00:06:44,735 --> 00:06:46,783
所以要用迭代器找

114
00:06:47,295 --> 00:06:48,319
哎这个迭代器

115
00:06:50,623 --> 00:06:53,951
迭代器如果只到尾巴了表示没找找

116
00:06:54,975 --> 00:06:57,791
先前这些这里有些条件都没有

117
00:06:58,303 --> 00:06:59,839
都没有能够符合吗

118
00:07:01,375 --> 00:07:01,887
你早早

119
00:07:03,423 --> 00:07:05,983
为什么会怎么样这个我有

120
00:07:06,239 --> 00:07:07,263
把这个

121
00:07:07,519 --> 00:07:08,543
慌起来了

122
00:07:10,591 --> 00:07:13,663
我看一下如果找到尾巴

123
00:07:14,175 --> 00:07:14,943
找找

124
00:07:15,455 --> 00:07:15,967
好

125
00:07:16,223 --> 00:07:22,367
如果在这个进行过程中是还没有大尾巴所以应该在很多次里面是不会进

126
00:07:22,623 --> 00:07:28,767
现在这里来了我们先看其他的这些情况他竟然没有大尾巴那么就跳到下面这里

127
00:07:29,023 --> 00:07:29,535
这里来了

128
00:07:32,351 --> 00:07:34,911
找到一个一个都去看看

129
00:07:35,167 --> 00:07:39,263
这一个吃苦这个唱歌有没有可用空间

130
00:07:40,799 --> 00:07:44,127
如果没有当然它就不符合就继续往下找

131
00:07:44,383 --> 00:07:46,175
如果有

132
00:07:46,943 --> 00:07:52,063
这个就是目标这1万个里面我找到了这一个他是有可用区块的

133
00:07:52,831 --> 00:07:53,599
于是

134
00:07:53,855 --> 00:07:54,623
我就把它

135
00:07:54,879 --> 00:07:55,903
调试起来

136
00:07:58,719 --> 00:08:04,607
紫色这个指针刚刚我不是解释过了吗他会标示出可有可用聚会的那个

137
00:08:05,631 --> 00:08:08,959
这个语法蛮特别的大家体会一下

138
00:08:10,751 --> 00:08:15,103
等一下再来解释他标识其他以后就离开了

139
00:08:16,895 --> 00:08:19,711
Bradley开到哪里去到下面这里来

140
00:08:21,247 --> 00:08:26,367
就通过刚刚标示出来的这个券可去掉用OK

141
00:08:27,135 --> 00:08:30,207
在俄罗佩的就是刚刚我们在我现在网上看

142
00:08:31,231 --> 00:08:34,047
我们刚刚在唱个这边看的OK这个函数

143
00:08:37,119 --> 00:08:38,143
现在回来

144
00:08:39,935 --> 00:08:40,447
所以

145
00:08:40,703 --> 00:08:42,239
在这个地方拨note

146
00:08:42,495 --> 00:08:44,799
Olap一个一个的卡

147
00:08:46,335 --> 00:08:47,103
看到

148
00:08:47,359 --> 00:08:48,127
目标了

149
00:08:48,383 --> 00:08:50,687
标识出来离开然后

150
00:08:51,199 --> 00:08:55,551
通过这个目标要用autocad这个就完成了一次的

151
00:08:57,087 --> 00:08:59,391
它就会往下面下层

152
00:08:59,647 --> 00:09:03,999
123现在讲的是二吗二就会往下一

153
00:09:04,511 --> 00:09:06,559
以我们刚才已经看过了

154
00:09:10,399 --> 00:09:12,959
好我们现在检讨一下这个特殊的语法

155
00:09:15,519 --> 00:09:21,663
也有的人会很直观的认为这两个操作符呢好像是可以互相抵消的

156
00:09:21,919 --> 00:09:23,711
一个是其应用

157
00:09:24,991 --> 00:09:26,015
赵

158
00:09:26,271 --> 00:09:27,295
捷运用

159
00:09:27,551 --> 00:09:28,831
Preference

160
00:09:29,087 --> 00:09:31,135
一个人拾取地址

161
00:09:31,647 --> 00:09:32,927
这样可以抵消啊

162
00:09:34,207 --> 00:09:35,999
在一般指针可以

163
00:09:37,279 --> 00:09:38,559
但这不是指针

164
00:09:38,815 --> 00:09:40,095
这是迭代器

165
00:09:40,607 --> 00:09:41,887
爱爱是什么

166
00:09:42,143 --> 00:09:44,191
第5行是一个迭代器

167
00:09:44,959 --> 00:09:49,311
所以这意思是先对迭代器取值

168
00:09:50,847 --> 00:09:52,383
取到的就是一个壳

169
00:09:53,663 --> 00:09:55,711
这个迭代器只是呛口

170
00:09:56,991 --> 00:09:57,503
这里

171
00:09:59,551 --> 00:10:02,367
取到那个唱个以后在其他的地址

172
00:10:04,415 --> 00:10:06,207
那就是这个唱歌

173
00:10:06,463 --> 00:10:07,487
头了

174
00:10:08,255 --> 00:10:11,327
我们看看找一张图片这个这是一个枪

175
00:10:12,607 --> 00:10:13,631
取地址

176
00:10:13,887 --> 00:10:15,423
这是最快这个地方

177
00:10:19,775 --> 00:10:23,359
啊不对我讲错了我是看啊这个事情的

178
00:10:23,615 --> 00:10:26,687
所有1万个唱可是这个东西

179
00:10:27,711 --> 00:10:31,039
所以接参考之后得到了这一个

180
00:10:31,295 --> 00:10:34,111
然后取一只是他的头

181
00:10:39,999 --> 00:10:41,535
这是对这个特殊语法

182
00:10:42,815 --> 00:10:43,839
解释

183
00:10:45,375 --> 00:10:51,519
我们继续看这个菠萝卜一直在走一直在走还没有到尾巴的时候就一直

184
00:10:51,775 --> 00:10:55,103
到这里来检查如果这边也都不能满足

185
00:10:55,359 --> 00:10:59,199
就表示这1万个唱歌的每一个场合都已经用光光了

186
00:10:59,455 --> 00:11:00,735
终于

187
00:11:00,991 --> 00:11:02,527
走到了尾巴

188
00:11:03,039 --> 00:11:05,087
到达尾端都没有找着

189
00:11:05,599 --> 00:11:06,623
那怎么办呢

190
00:11:07,647 --> 00:11:11,999
这时候加一个加一个新的价格进行变成10001格

191
00:11:12,255 --> 00:11:13,535
加一个新闻

192
00:11:14,047 --> 00:11:17,119
Ie11好一个动作

193
00:11:17,375 --> 00:11:19,679
因为现在这1万个是个Master

194
00:11:20,447 --> 00:11:23,007
放在百科里头睡觉

195
00:11:24,031 --> 00:11:26,847
放什么放一个临时对象

196
00:11:28,383 --> 00:11:29,407
这个唱歌

197
00:11:31,199 --> 00:11:32,479
这个唱歌就是

198
00:11:33,247 --> 00:11:34,271
这个东西

199
00:11:37,855 --> 00:11:39,135
这个语法

200
00:11:40,671 --> 00:11:43,999
当我们在使用标准库的时候常常会出现

201
00:11:44,255 --> 00:11:49,119
不论你是看到人家写应用程序或者是你看到标准库的源代码

202
00:11:50,143 --> 00:11:56,287
看到网络上的一些测试一些示范常常会看到这种语法

203
00:11:57,055 --> 00:11:59,871
Pacman后面直接加小括号

204
00:12:00,639 --> 00:12:01,663
Cabinn吗

205
00:12:03,199 --> 00:12:06,271
所以这样就是创建一个临时对象

206
00:12:06,783 --> 00:12:09,599
这个创建出来之后

207
00:12:09,855 --> 00:12:11,391
6park

208
00:12:11,647 --> 00:12:13,951
于是会拷贝一份

209
00:12:14,207 --> 00:12:15,487
放到容器

210
00:12:15,999 --> 00:12:20,863
拷贝过去之后这个临时对象生命就结束了

211
00:12:24,447 --> 00:12:25,983
一个动作

212
00:12:27,519 --> 00:12:29,311
这一万个

213
00:12:29,567 --> 00:12:31,871
呛个现在的10001个了

214
00:12:33,407 --> 00:12:34,431
10001个

215
00:12:34,687 --> 00:12:36,991
然后呢要用他人来集

216
00:12:37,503 --> 00:12:38,783
刚刚才看过呢

217
00:12:39,295 --> 00:12:40,831
是流水号码

218
00:12:41,599 --> 00:12:42,879
等等等

219
00:12:44,415 --> 00:12:46,463
风格整理好了

220
00:12:46,975 --> 00:12:47,999
准备好了

221
00:12:48,767 --> 00:12:49,535
然后

222
00:12:49,791 --> 00:12:53,375
此次还是15这两根指针这一次

223
00:12:55,679 --> 00:12:58,239
我们刚刚看的是紫色这个指针吗

224
00:12:58,751 --> 00:13:02,079
我们特别关注紫色因为现在讲的是分配

225
00:13:03,615 --> 00:13:05,663
OK唱歌

226
00:13:06,687 --> 00:13:11,295
这个指针就指向现在你刚才刚整理好了的10001格

227
00:13:11,807 --> 00:13:13,087
新的那个

228
00:13:13,343 --> 00:13:15,903
指出来然后又离开

229
00:13:17,439 --> 00:13:19,487
通过这个标兵这个指针

230
00:13:19,743 --> 00:13:20,511
去调用

231
00:13:21,791 --> 00:13:22,559
OK

232
00:13:24,351 --> 00:13:28,191
但是为什么这一个红色的叶子出来呢

233
00:13:29,983 --> 00:13:32,543
而且指向front指向头

234
00:13:33,311 --> 00:13:39,455
现在观察什么是我们现在是再分配内存他红色这个是在人回收

235
00:13:39,711 --> 00:13:41,503
搜有关着关他什么事

236
00:13:44,575 --> 00:13:46,879
在租借我们要写出来的这个

237
00:13:47,135 --> 00:13:47,647
要注意

238
00:13:48,671 --> 00:13:49,695
我现在告诉你

239
00:13:51,999 --> 00:13:55,327
在XX做不行

240
00:13:56,095 --> 00:13:59,423
可能会引发背后一个成长的动作

241
00:13:59,679 --> 00:14:01,727
他可能会搬到其他地方去

242
00:14:03,263 --> 00:14:06,591
可能也可能没有不知道

243
00:14:07,103 --> 00:14:12,479
但是对使用是不影响的不过如果发生翻动的话

244
00:14:13,247 --> 00:14:14,015
过去

245
00:14:14,527 --> 00:14:15,807
存在的那些

246
00:14:16,063 --> 00:14:18,879
迭代器iterator都失效

247
00:14:20,415 --> 00:14:22,207
因为他已经搬到另外一个地方去了

248
00:14:23,743 --> 00:14:24,511
所以

249
00:14:27,071 --> 00:14:28,607
就怕这种情况

250
00:14:28,863 --> 00:14:30,655
说既然有不需要

251
00:14:32,959 --> 00:14:36,799
可能搬动可能成长所以这些只要重视

252
00:14:38,079 --> 00:14:44,223
红色的这个指定要重视那样收到哪里去他帮助在目前他可能迟到的第3

253
00:14:44,479 --> 00:14:46,527
357个你800个

254
00:14:47,039 --> 00:14:50,879
现在靶子到哪里去不知道啊已经搬走了

255
00:14:52,415 --> 00:14:57,023
所以就只好只好把他知道同事了

256
00:14:59,583 --> 00:15:04,703
这个指针将会在回收我们的下一个函数的二楼可以这边

257
00:15:04,959 --> 00:15:06,239
回收的时候呢

258
00:15:06,495 --> 00:15:07,263
起作用

259
00:15:08,287 --> 00:15:10,847
这里为什么要做设定指向头

260
00:15:11,103 --> 00:15:12,383
看看我解释过了

261
00:15:12,639 --> 00:15:18,783
这是一个隐晦的由于下面一个隐晦的一个电话

262
00:15:19,039 --> 00:15:22,623
所以要做的一个安全措施这个

263
00:15:22,879 --> 00:15:24,671
作者还是非常

264
00:15:25,439 --> 00:15:27,231
非常有有现实非常

265
00:15:27,999 --> 00:15:32,863
谨慎一般人可能不会想到要从设计人是谁

266
00:15:33,375 --> 00:15:34,911
不是指针别大气

267
00:15:35,423 --> 00:15:39,263
没有重视他然后之后呢哪个地方崩溃掉了不知道

268
00:15:42,079 --> 00:15:43,615
算他厉害

269
00:15:46,943 --> 00:15:47,711
这个就是

270
00:15:47,967 --> 00:15:48,735
Allocate

271
00:15:49,503 --> 00:15:55,135
我们把这个概念刚刚讲的很仔细的现在很快的整理是如果我有1万个唱

272
00:15:56,159 --> 00:15:58,207
现在有人要来申请

273
00:15:58,463 --> 00:16:02,047
我该怎么办呢这1万个里面我先找出

274
00:16:02,559 --> 00:16:08,191
被我标识出来的先前曾经满足过的那个看看他能不能够

275
00:16:08,959 --> 00:16:10,751
他如果还有区块

276
00:16:11,007 --> 00:16:13,311
这边就结束了马上开了下面来

277
00:16:14,591 --> 00:16:18,175
如果他没有去快了那么我们只好从头

278
00:16:18,431 --> 00:16:19,199
早起

279
00:16:19,711 --> 00:16:25,343
一个一个枣看哪一个唱个有趣会找到也结束也跳出来

280
00:16:26,111 --> 00:16:28,159
没找到就落到这个地方

281
00:16:28,927 --> 00:16:33,535
就创建一个新的把它放进去就被10001个

282
00:16:34,303 --> 00:16:36,095
然后把这个标兵标好

283
00:16:36,351 --> 00:16:37,375
也跳出来

284
00:16:37,887 --> 00:16:38,655
讲究

285
00:16:39,679 --> 00:16:40,959
跳出来以后就是让

286
00:16:41,471 --> 00:16:43,519
在下面的兄弟去做

287
00:16:44,287 --> 00:16:47,103
这不干这一级的事情这是第2季

288
00:16:50,687 --> 00:16:54,271
所以这个逻辑也是非常的简单明了

289
00:16:57,855 --> 00:16:59,135
看上这一段话

290
00:17:01,951 --> 00:17:04,767
下次优先从此早起好

291
00:17:08,351 --> 00:17:08,863
好

292
00:17:10,143 --> 00:17:13,727
这个是二楼的接下来呢我们就要看Hello Kitty

293
00:17:14,495 --> 00:17:15,519
Allocate

1
00:00:06,144 --> 00:00:09,984
好我们现在开始了进行这个非常精彩的连环图片

2
00:00:11,264 --> 00:00:11,776
彻底

3
00:00:12,032 --> 00:00:12,800
掌握

4
00:00:13,056 --> 00:00:13,568
他的

5
00:00:13,824 --> 00:00:14,848
每一个细节

6
00:00:15,360 --> 00:00:21,504
这些地方图片怎么来的呢根据执行的数据来的数据是怎么来的呢你可以用调色

7
00:00:21,760 --> 00:00:22,272
士气

8
00:00:22,528 --> 00:00:24,064
进去看

9
00:00:24,320 --> 00:00:25,856
看到数据的变化

10
00:00:26,368 --> 00:00:28,928
我当时那对于这个环境比较

11
00:00:29,184 --> 00:00:33,536
调试器反正总之我也没有去用调制器或直接改源代码

12
00:00:34,560 --> 00:00:35,840
他这个要很小心了

13
00:00:36,352 --> 00:00:41,472
哈哈最好在感觉但把之前那你把你要改的东西复制一份

14
00:00:42,240 --> 00:00:45,312
因为你改了日期会变就算你是非常的有

15
00:00:45,824 --> 00:00:51,456
水准有信心我可以恢复原来的状态可是文件的日期变了

16
00:00:51,712 --> 00:00:57,856
也许日后你一看怎么这一个跟其他的300个都不太一样心生疑惑

17
00:00:58,368 --> 00:00:59,904
最好是靠逼分出来

18
00:01:01,440 --> 00:01:04,256
好然后在换名称然后再分工等

19
00:01:05,792 --> 00:01:09,120
OK啊这是一开始情况

20
00:01:10,144 --> 00:01:13,728
一开始这16根指针这是源代码的部分

21
00:01:14,496 --> 00:01:19,104
这边有一个变量叫freitas的最后中括号可见只是一个睿

22
00:01:19,360 --> 00:01:21,920
数值这个值是16

23
00:01:22,688 --> 00:01:26,272
这个后面我们看完整的源代码就会更清楚

24
00:01:26,528 --> 00:01:31,136
现在是把关键的东西抓出来的就是这个

25
00:01:31,648 --> 00:01:32,416
16

26
00:01:33,184 --> 00:01:35,232
16分子正一开始都是0

27
00:01:35,488 --> 00:01:36,512
目前的状况

28
00:01:38,816 --> 00:01:43,680
我们在探讨的这个家a它其实是一个

29
00:01:44,960 --> 00:01:47,264
他的真正的Class名称这么长

30
00:01:48,288 --> 00:01:52,640
等一下所有的看到源代码所有的动作都是在这个可以做

31
00:01:53,664 --> 00:01:57,760
至于他是一个无法这些就系急救后头再说了

32
00:01:59,808 --> 00:02:00,832
我在看

33
00:02:01,600 --> 00:02:02,880
这页

34
00:02:03,648 --> 00:02:07,744
容器客户客户要申请32个字节

35
00:02:08,768 --> 00:02:09,280
注意

36
00:02:09,792 --> 00:02:11,328
分配器的客户

37
00:02:11,584 --> 00:02:15,424
不是给你应用程序用的是给于容器用的

38
00:02:16,960 --> 00:02:21,568
我在第1讲一开始给那个一开始给你一个小例子

39
00:02:22,336 --> 00:02:24,640
当时就直接去用分配器

40
00:02:25,152 --> 00:02:26,944
而在当时我就说明了

41
00:02:27,968 --> 00:02:32,064
如果你直接去用分配器的话你必须记住

42
00:02:32,832 --> 00:02:34,112
你要多大

43
00:02:34,880 --> 00:02:36,672
因为现在没有cookie可以帮助了

44
00:02:37,184 --> 00:02:43,328
那会多大你自己要记住将来还的时候才告诉他他在知道要回收到哪一个

45
00:02:45,120 --> 00:02:46,656
这个事情没有人受得了

46
00:02:48,704 --> 00:02:50,240
只有容器

47
00:02:50,752 --> 00:02:56,896
容器的所有的元素都是一样的大小所以那个大小他在容器里面就已经济

48
00:02:57,152 --> 00:02:57,664
记录者

49
00:02:58,944 --> 00:03:02,272
容器的第1个模板参数是元素类型

50
00:03:02,528 --> 00:03:03,808
在那个类型

51
00:03:04,320 --> 00:03:05,856
去sizeof

52
00:03:06,624 --> 00:03:07,904
就可以知道它的大小

53
00:03:09,184 --> 00:03:10,976
把测试容器的一个特性

54
00:03:12,000 --> 00:03:14,304
所以这边那客户

55
00:03:14,560 --> 00:03:15,840
指的就是容器

56
00:03:16,096 --> 00:03:17,888
他申请32个字节

57
00:03:18,912 --> 00:03:25,056
由于作为空我现在讲这句话什么意思这里的破旧是我们说我前面

58
00:03:25,312 --> 00:03:27,104
战备值

59
00:03:27,360 --> 00:03:33,504
最刚刚提的概念现在把更进一步细化明朗化其实

60
00:03:34,016 --> 00:03:35,552
在整个系统里面

61
00:03:36,064 --> 00:03:41,440
总是把分配到的内存先放到账被子里的

62
00:03:41,952 --> 00:03:46,816
什么叫做放到战备此其实把这两根指针

63
00:03:48,096 --> 00:03:52,704
自过去的地方那一个加起来的地方我们就叫做长辈吃

64
00:03:52,960 --> 00:03:55,008
在10座上这样就可以了

65
00:03:56,800 --> 00:04:02,944
所以总是把分配东西先放到战备此然后再从站被雌蛙适当的空

66
00:04:03,200 --> 00:04:05,248
空间到链表来

67
00:04:05,504 --> 00:04:11,648
这个是刚刚一开始没有说的真正的动作其实是这样为什么要这

68
00:04:11,904 --> 00:04:12,416
这样呢

69
00:04:14,720 --> 00:04:20,095
大伙们看源代码的写法你会看到如果这样子去够吃的话

70
00:04:20,351 --> 00:04:22,911
代码写起来会特别漂亮

71
00:04:24,447 --> 00:04:26,495
好所以这句话说

72
00:04:26,751 --> 00:04:30,335
由于战备此为空

73
00:04:31,359 --> 00:04:37,503
32自己应该第3号13号是空的所以去看看赞呗此

74
00:04:37,759 --> 00:04:39,039
或有没有

75
00:04:39,807 --> 00:04:42,111
但是现在是一开始是空的

76
00:04:42,367 --> 00:04:43,647
拿不到了

77
00:04:44,159 --> 00:04:48,255
所以去所求并且还成功了

78
00:04:49,535 --> 00:04:53,375
记住证加水装备尺码加水

79
00:04:53,631 --> 00:04:55,167
加水进去加多少呢

80
00:04:55,679 --> 00:05:00,287
32乘以20现在要的是32所以32

81
00:05:00,543 --> 00:05:02,847
乘以20是他的设计

82
00:05:03,615 --> 00:05:05,407
陈颖儿怎么刚刚讲的

83
00:05:05,663 --> 00:05:06,431
两倍

84
00:05:07,455 --> 00:05:10,015
再加上一个run up

85
00:05:10,527 --> 00:05:12,575
这是刚刚没有提的一个细节

86
00:05:13,087 --> 00:05:16,159
这是一个追加了我这样形容她

87
00:05:16,671 --> 00:05:19,231
这个数据会越来越大

88
00:05:19,999 --> 00:05:21,535
他怎么设计的呢

89
00:05:21,791 --> 00:05:23,583
Crontab是一个函数

90
00:05:24,351 --> 00:05:30,495
后面代码就会出现它其实只是把一个数字调整到16的边界加装run up

91
00:05:30,751 --> 00:05:32,031
上调或下调

92
00:05:32,287 --> 00:05:34,079
上调到16的边界

93
00:05:35,103 --> 00:05:37,663
至于这个数字就是它的运作

94
00:05:37,919 --> 00:05:42,015
飞加量的运作方式这本要再说了目前是0

95
00:05:42,783 --> 00:05:43,807
这个意思是

96
00:05:45,087 --> 00:05:45,855
80

97
00:05:46,111 --> 00:05:46,879
Sheep

98
00:05:47,135 --> 00:05:50,463
又一次各位就是除以16的意思

99
00:05:51,743 --> 00:05:56,095
好目前你只要了解这些个追加亮一开始是你

100
00:05:56,607 --> 00:05:59,167
所以这样算出来是1280

101
00:05:59,935 --> 00:06:04,031
我们必须走过一遍把这些数字啊弄得很清楚

102
00:06:05,311 --> 00:06:06,591
好1280

103
00:06:07,103 --> 00:06:09,919
从中切出一个

104
00:06:11,711 --> 00:06:12,991
给就是这一个

105
00:06:14,015 --> 00:06:15,807
Return出去

106
00:06:16,831 --> 00:06:21,695
剩下的19个人放在第3号链表示第3号就指向这一个

107
00:06:22,207 --> 00:06:23,743
下面就有19个

108
00:06:25,279 --> 00:06:26,815
不是你们还有一半呢

109
00:06:27,839 --> 00:06:33,727
另外还有一半就是640 1280的一半是618来费用

110
00:06:36,287 --> 00:06:38,079
这会要怎么怎么去

111
00:06:38,591 --> 00:06:39,871
费用他们

112
00:06:40,127 --> 00:06:43,199
在代码里头就是打着两根指针指向这一块

113
00:06:43,455 --> 00:06:44,735
就好了

114
00:06:45,503 --> 00:06:46,783
现在现在这个图

115
00:06:48,319 --> 00:06:50,367
当然这里有一个从

116
00:06:50,879 --> 00:06:53,439
从中切出一个

117
00:06:53,695 --> 00:06:59,839
还有病吧有19个是中共这些就要用链表来存起来用嵌入式指针的概念

118
00:07:00,095 --> 00:07:01,375
打电起来

119
00:07:04,703 --> 00:07:06,495
这就是我们的第1个动作

120
00:07:08,031 --> 00:07:14,175
这是因为我们写的应用端写的使用一个容器容器发出来的需求是13

121
00:07:14,431 --> 00:07:16,991
直接导致这个结果

122
00:07:18,015 --> 00:07:19,807
这边有一个小块块

123
00:07:20,575 --> 00:07:22,623
我用这个来表现

124
00:07:23,647 --> 00:07:26,975
这这一整块是用malloc的

125
00:07:27,487 --> 00:07:31,839
所以上面有个空气下面也还有我就没有话了

126
00:07:32,607 --> 00:07:38,751
在后面的图不如讯息都会出现这个小会你就会知道这一块是有没有可能

127
00:07:39,007 --> 00:07:40,031
1块

128
00:07:42,847 --> 00:07:44,383
目前呢

129
00:07:44,895 --> 00:07:48,991
累计申请量申请的累积量是1280

130
00:07:49,759 --> 00:07:53,343
赞佩慈和还剩多少600次

131
00:07:54,111 --> 00:07:56,415
在这整个系统里面包括

132
00:07:57,695 --> 00:07:59,231
只是这个

133
00:08:02,303 --> 00:08:08,447
这个号我们一般概念讲内存此我们可能要整个就是一个内存池设计

134
00:08:09,983 --> 00:08:11,519
那说话当然也对

135
00:08:11,775 --> 00:08:17,919
这在这里这里的作者是蓝色以后每页出现蓝色那块就是谁

136
00:08:21,503 --> 00:08:23,807
20作文的第1个动作

137
00:08:24,063 --> 00:08:25,087
这句话

138
00:08:26,111 --> 00:08:27,135
等下就会

139
00:08:27,647 --> 00:08:29,951
就会呈现出来所以现在先不谈

140
00:08:30,719 --> 00:08:31,487
下一页

141
00:08:33,279 --> 00:08:36,351
刚刚不谈的那一句话到时候一遍在这里

142
00:08:37,631 --> 00:08:39,935
好我们来看看

143
00:08:40,191 --> 00:08:44,031
非次呢接下来你又创建了一个容器

144
00:08:44,799 --> 00:08:46,335
要的每一个元素

145
00:08:46,591 --> 00:08:47,103
是

146
00:08:47,871 --> 00:08:49,407
64

147
00:08:51,455 --> 00:08:55,039
这时候由于长辈子总是先看上辈子这个

148
00:08:55,295 --> 00:08:58,111
64GB 7号17号是空的

149
00:08:59,391 --> 00:09:03,999
这个没有你在你在复习的时候你要前后比对

150
00:09:04,255 --> 00:09:05,535
看看有什么变化

151
00:09:06,047 --> 00:09:07,583
上夜空的吧

152
00:09:08,607 --> 00:09:10,399
所以现在到这里来呢

153
00:09:10,655 --> 00:09:13,215
这空的那就要把它填充上去

154
00:09:14,495 --> 00:09:17,055
充值手机要充值

155
00:09:17,311 --> 00:09:20,383
前冲上去要重犯被指来看

156
00:09:20,895 --> 00:09:23,455
上面时尚业有640个

157
00:09:24,735 --> 00:09:26,015
所以拿来切割

158
00:09:27,807 --> 00:09:29,087
切出来有10个

159
00:09:29,855 --> 00:09:30,879
是的是的

160
00:09:32,159 --> 00:09:35,487
第1个给出去所以这个指针指向下一个

161
00:09:35,999 --> 00:09:36,767
剩下9

162
00:09:40,095 --> 00:09:42,143
这句话是时候就可以理解了

163
00:09:42,399 --> 00:09:44,703
在这个设计上是这样子的

164
00:09:45,471 --> 00:09:48,031
从上废池切割出来的

165
00:09:48,287 --> 00:09:52,895
数量在永远在一到20之间不多于20

166
00:09:53,919 --> 00:09:57,759
后面你会看到战备只会越来越大

167
00:09:58,527 --> 00:10:04,671
越来越大也许可以切出20以上是这个设计说我永远最多70个

168
00:10:07,743 --> 00:10:10,815
但也可能连一个都切不切不出来

169
00:10:12,863 --> 00:10:14,399
也许下现在这个是零吗

170
00:10:15,167 --> 00:10:19,775
上辈子是你我还是把它画出来了其实应该不用画但是还是画出来他这里

171
00:10:20,287 --> 00:10:22,847
他到下一页了他就出来了

172
00:10:24,639 --> 00:10:26,431
但也许这是一个碎片

173
00:10:27,711 --> 00:10:31,551
不能满足下一次的动作那就是碎片发生了

174
00:10:32,063 --> 00:10:35,391
我们就会可以看到碎片他如何

175
00:10:35,647 --> 00:10:36,159
处理

176
00:10:42,047 --> 00:10:43,327
好

177
00:10:43,583 --> 00:10:46,655
在目前的累计申请量是1280

178
00:10:46,911 --> 00:10:49,215
我的大小已经变了变成0了

179
00:10:49,983 --> 00:10:53,055
每一张图片我都会有资料数据

180
00:10:54,079 --> 00:10:57,663
因为这个数据关系到哪家量

181
00:10:59,199 --> 00:11:00,479
马上就要出现了

182
00:11:03,807 --> 00:11:05,087
我们再往下看

183
00:11:06,367 --> 00:11:09,183
这时候你又写了一个容器

184
00:11:10,463 --> 00:11:12,511
容器发出来的需求是

185
00:11:13,279 --> 00:11:14,559
96个字节

186
00:11:17,119 --> 00:11:18,655
96个字节

187
00:11:18,911 --> 00:11:22,239
然后就16应该归这一个链表来观

188
00:11:22,751 --> 00:11:25,311
这个电表在上映射它是空的

189
00:11:26,079 --> 00:11:28,127
于是要充值

190
00:11:28,895 --> 00:11:30,687
充值要从哪里拿呢

191
00:11:31,199 --> 00:11:32,223
先从

192
00:11:32,735 --> 00:11:34,271
长辈子来了

193
00:11:35,551 --> 00:11:37,599
23页战备值是零

194
00:11:38,367 --> 00:11:39,903
看看乐视

195
00:11:40,415 --> 00:11:41,951
现在回到下一页来

196
00:11:42,975 --> 00:11:44,255
上辈子是病吗

197
00:11:45,279 --> 00:11:46,303
那怎么办呢

198
00:11:46,815 --> 00:11:49,119
所以只好用没了

199
00:11:49,887 --> 00:11:51,167
去取得

200
00:11:52,447 --> 00:11:55,007
96现在1000的10加96

201
00:11:55,263 --> 00:11:57,055
乘以20

202
00:11:57,311 --> 00:11:58,591
陈颖儿

203
00:11:58,847 --> 00:12:00,895
加一个追加量

204
00:12:02,687 --> 00:12:05,247
好追加上到底怎么算现在可以

205
00:12:05,503 --> 00:12:06,271
告诉你了

206
00:12:07,039 --> 00:12:10,367
追加量就是把目前的

207
00:12:11,135 --> 00:12:12,671
申请总量

208
00:12:13,695 --> 00:12:15,231
目前是多少目前要看

209
00:12:15,487 --> 00:12:16,255
上页

210
00:12:16,767 --> 00:12:17,535
1280

211
00:12:19,839 --> 00:12:21,631
上一页11月8日

212
00:12:22,911 --> 00:12:23,935
现在呢

213
00:12:25,471 --> 00:12:28,287
就把总量除以16

214
00:12:28,799 --> 00:12:34,175
在调到8点解这个函数就是调到发的边界的意思

215
00:12:35,711 --> 00:12:38,783
所以我把这一个东西这个追加量

216
00:12:41,855 --> 00:12:47,999
就觉得比较多飞越要越多将来会越要越多因为这一个重量

217
00:12:49,023 --> 00:12:51,327
累计量他会越来越大

218
00:12:53,631 --> 00:12:56,191
最差这个设计上有一点点

219
00:12:57,215 --> 00:13:03,359
我能够去联想这个这个团队当然没有在他的源代码里面做注释

220
00:13:03,615 --> 00:13:09,759
更没有的任何的技术文档里没有开放出来的技术文档里面告诉我为什么他要交

221
00:13:10,015 --> 00:13:11,295
加这个追加量

222
00:13:11,807 --> 00:13:17,951
这是我们可以去联想一件事情在计算机领域里头很多了

223
00:13:18,207 --> 00:13:19,487
动作都是

224
00:13:19,743 --> 00:13:21,023
越来越快

225
00:13:21,791 --> 00:13:23,071
越闹越大

226
00:13:24,607 --> 00:13:25,887
都有这样的趋势

227
00:13:28,191 --> 00:13:29,727
如果你体验过

228
00:13:29,983 --> 00:13:36,127
现在你很难体验这件事情就是你在你哪里的鼠标在你的

229
00:13:36,383 --> 00:13:37,663
桌子上面滑动

230
00:13:39,199 --> 00:13:40,735
你等速滑动

231
00:13:42,015 --> 00:13:45,087
但这个鼠标在屏幕上会越跑越快

232
00:13:46,623 --> 00:13:48,415
现在由于70

233
00:13:48,927 --> 00:13:49,951
鼠标的

234
00:13:50,207 --> 00:13:51,999
姐姐都非常的高

235
00:13:52,255 --> 00:13:56,095
你可能已经感受不到了再以前比较容易感受到

236
00:13:57,631 --> 00:14:03,775
所以也许是要借鉴于这一种设计的理念越闹越大越要越

237
00:14:04,031 --> 00:14:04,543
华

238
00:14:05,055 --> 00:14:09,407
所以这个团队也说那我们要那也要越来越大

239
00:14:09,663 --> 00:14:15,807
至于为什么这个越来越大这个追加量的设计是把累计量技术

240
00:14:16,063 --> 00:14:17,087
除以16

241
00:14:18,111 --> 00:14:18,879
不得而知

242
00:14:19,647 --> 00:14:21,439
他的一个经验值吧

243
00:14:23,999 --> 00:14:28,095
当然这样子反而带来的一个安全阀门

244
00:14:29,375 --> 00:14:31,167
这个后面再讲他

245
00:14:31,423 --> 00:14:32,959
他越要越大

246
00:14:33,215 --> 00:14:36,287
反而带来了一个安全阀门

247
00:14:37,567 --> 00:14:40,383
好我们就有这么一件事情后面再说

248
00:14:42,175 --> 00:14:46,271
说这次花这么大有一个追加量他就很大了

249
00:14:46,527 --> 00:14:49,343
但是永远切最多20个

250
00:14:50,623 --> 00:14:53,695
切出来的第1个给出去剩下19个

251
00:14:54,719 --> 00:14:56,511
上辈子欠再乘2000

252
00:14:57,023 --> 00:15:03,167
这个都可以拿比来算一算要狠却怕死的掌握到这一些

253
00:15:03,423 --> 00:15:04,447
数字的变化

254
00:15:05,471 --> 00:15:09,311
我们就胸中自有龟和就很清楚她的行为了

255
00:15:12,127 --> 00:15:13,407
在这个图里

256
00:15:14,687 --> 00:15:15,967
这边打人小气

257
00:15:16,479 --> 00:15:17,503
我们再看上一页

258
00:15:19,551 --> 00:15:21,599
上一页

259
00:15:22,111 --> 00:15:24,415
然后再看下一页现在进行到这里

260
00:15:25,695 --> 00:15:31,839
这些由于战备使用光了只好重新用malloc分配这边有大狗屁

261
00:15:32,351 --> 00:15:33,887
看看这个也太空气

262
00:15:34,399 --> 00:15:37,471
这个没有毒因为这一块其实是这一块

263
00:15:38,239 --> 00:15:39,519
一次就拿到的

264
00:15:41,567 --> 00:15:45,919
在后头的画面上当你看到这种动作

265
00:15:46,175 --> 00:15:51,295
这种东西就是空气也就是那一块是用malloc

266
00:15:52,575 --> 00:15:54,367
当你看到这种线

267
00:15:55,647 --> 00:16:01,791
我是要告诉你这不是指正我现在告诉你这两块其实当初是

268
00:16:02,303 --> 00:16:03,839
莲子连在一起

269
00:16:04,863 --> 00:16:06,143
应该花的处理

270
00:16:07,167 --> 00:16:09,727
次真拉过来但是画不下去了

271
00:16:12,287 --> 00:16:15,615
我们很快地拼一看后都有些什么图你看像这样

272
00:16:16,639 --> 00:16:17,663
向这些

273
00:16:18,175 --> 00:16:19,967
小枝叶这些线条

274
00:16:22,015 --> 00:16:25,855
让你感觉拿起会妻子本来是同一块

275
00:16:26,367 --> 00:16:27,903
这些人就是谷歌

276
00:16:31,999 --> 00:16:33,535
好我们再回到前面

277
00:16:34,815 --> 00:16:36,351
刚刚谈到的是

278
00:16:36,607 --> 00:16:37,631
这个画面

279
00:16:37,887 --> 00:16:39,167
首页

280
00:16:41,215 --> 00:16:43,263
好我们再往下看第5个动作

281
00:16:44,287 --> 00:16:47,103
其实就是按照这种方式依次类推

282
00:16:50,431 --> 00:16:54,527
我想表现一些特殊的情况我们来看看这是第5个动作

283
00:16:56,831 --> 00:17:00,159
你又在代码创建了一个容器

284
00:17:00,671 --> 00:17:01,951
他要的是88

285
00:17:02,975 --> 00:17:06,303
88你看应该地址号列表

286
00:17:06,815 --> 00:17:12,959
我怎么知道呢我爸88 789因为从零算起说要减28除以8

287
00:17:13,215 --> 00:17:15,263
81再见依旧是第4号

288
00:17:16,031 --> 00:17:18,079
一只好上也是空的

289
00:17:19,359 --> 00:17:21,151
这要去充值

290
00:17:21,919 --> 00:17:24,479
充值就要先看准备吃

291
00:17:25,759 --> 00:17:27,551
商业占碑是很大

292
00:17:27,807 --> 00:17:28,575
看一下

293
00:17:29,855 --> 00:17:31,903
赏月的战备此2000

294
00:17:32,927 --> 00:17:33,951
所以现在

295
00:17:34,719 --> 00:17:36,511
去把这个2000来

296
00:17:37,279 --> 00:17:39,839
上辈子有一辆所以取

297
00:17:40,095 --> 00:17:42,655
取出来可以划分几个呢

298
00:17:42,911 --> 00:17:45,215
尽量多还是不能多过20个

299
00:17:45,471 --> 00:17:46,239
他刚起锅了

300
00:17:47,519 --> 00:17:52,127
花了20个第1个给出去正19个的话这个图

301
00:17:55,455 --> 00:17:56,735
三杯子送多少

302
00:17:57,759 --> 00:17:59,039
这上面把剪掉

303
00:18:00,575 --> 00:18:02,111
赏月是2000

304
00:18:02,879 --> 00:18:05,183
检查最易消耗掉的

305
00:18:05,439 --> 00:18:06,463
剩下240

306
00:18:11,327 --> 00:18:12,351
这次

307
00:18:12,607 --> 00:18:13,631
第5个画面

308
00:18:15,423 --> 00:18:16,447
这个画面

309
00:18:17,727 --> 00:18:21,823
等同于我们在代码里面已经创建了四个容器

310
00:18:23,359 --> 00:18:23,871
他们

311
00:18:25,151 --> 00:18:31,295
需要的元素大小都不相同分别有这四条链表来公

312
00:18:33,343 --> 00:18:34,879
可供应的一个

313
00:18:36,671 --> 00:18:38,207
而这些动作里面

314
00:18:38,719 --> 00:18:39,231
是

315
00:18:39,743 --> 00:18:41,791
用到了两次的没了

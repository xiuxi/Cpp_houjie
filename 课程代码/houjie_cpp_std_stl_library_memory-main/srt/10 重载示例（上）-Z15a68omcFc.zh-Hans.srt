1
00:00:05,888 --> 00:00:09,472
我现在先用那个小程序来让大家安心

2
00:00:09,728 --> 00:00:12,544
安什么心那就是前面谈的

3
00:00:13,056 --> 00:00:14,848
前面谈的这个

4
00:00:15,360 --> 00:00:16,384
看这个

5
00:00:17,920 --> 00:00:18,944
全局的

6
00:00:19,200 --> 00:00:25,344
这三夜怎么样把这些流程接管过来我就通通都接管过来打印一些信息

7
00:00:25,600 --> 00:00:26,112
一起出来

8
00:00:26,880 --> 00:00:29,184
让我们很确定这样子的

9
00:00:29,696 --> 00:00:30,976
姐姐姐口

10
00:00:31,744 --> 00:00:32,512
这样子的

11
00:00:33,024 --> 00:00:34,304
不是是正确的

12
00:00:35,328 --> 00:00:38,400
好我现在有一个内教父

13
00:00:39,424 --> 00:00:42,496
我在里头我就写了这四个函数

14
00:00:43,776 --> 00:00:49,920
我没有再去定义去改变这个全局我刚刚说全局那个影响很大一般人也不

15
00:00:50,176 --> 00:00:51,712
我也做我们也不要去做了

16
00:00:52,992 --> 00:00:54,784
所以我现在写的四个函数

17
00:00:55,808 --> 00:00:57,600
这四个数的写法

18
00:00:57,856 --> 00:00:58,880
右手边

19
00:00:59,136 --> 00:01:01,184
刚提过节打不重要

20
00:01:01,440 --> 00:01:04,000
重要是它有没有被我接管过来

21
00:01:04,512 --> 00:01:06,560
当使用者在News

22
00:01:06,816 --> 00:01:08,096
Honda Fit

23
00:01:08,352 --> 00:01:12,192
一个负的时候不只是另一个

24
00:01:13,216 --> 00:01:15,520
睿睿智没有写出来

25
00:01:16,544 --> 00:01:19,872
Honda City girls有没有见到这里来

26
00:01:20,384 --> 00:01:22,176
听到这里的话就是这里

27
00:01:22,688 --> 00:01:24,736
这里的话我就会有一些输出

28
00:01:25,760 --> 00:01:28,576
我这边我没有我没有练出来的很长

29
00:01:29,088 --> 00:01:30,624
等一下会有事情结果

30
00:01:31,136 --> 00:01:37,280
为了让程序能够正常运作所以我要模拟对我拉过来之后我其实也没做什么特殊

31
00:01:37,536 --> 00:01:42,656
管理仍然是用malloc和free去分配跟释放内存

32
00:01:44,704 --> 00:01:47,520
重点是我要证明对我接管过来

33
00:01:49,312 --> 00:01:50,592
下一页

34
00:01:51,616 --> 00:01:54,688
帮我写好刚刚那个样子之后

35
00:01:55,968 --> 00:01:57,248
我开始使用了

36
00:01:58,528 --> 00:01:59,552
这是

37
00:02:00,320 --> 00:02:04,160
对翻译的附着是对数组的赋

38
00:02:04,672 --> 00:02:06,976
这里有1234动作

39
00:02:07,744 --> 00:02:08,768
执行结果

40
00:02:09,024 --> 00:02:09,792
在这边

41
00:02:10,560 --> 00:02:15,680
12340这边的1234下面是另外一个

42
00:02:16,704 --> 00:02:22,080
上下差别在哪里呢我这个不如果是没有驱寒

43
00:02:22,336 --> 00:02:26,176
Virtual destructed我有上下的差别

44
00:02:26,688 --> 00:02:29,760
这里到怎么要传到github

45
00:02:30,272 --> 00:02:31,552
没有特殊意义

46
00:02:31,808 --> 00:02:37,952
我只是要改变他的大小因为加上了virtual方选区函数的那个队

47
00:02:38,208 --> 00:02:40,000
对象的大小会变大一些

48
00:02:41,024 --> 00:02:43,072
最上面是一个是12

49
00:02:43,840 --> 00:02:45,120
下面这个是16

50
00:02:45,376 --> 00:02:50,240
我只是把它变大一点然后再次观察只是为了这样

51
00:02:52,288 --> 00:02:53,056
好

52
00:02:53,568 --> 00:02:59,712
在这个执行结果里面我们会看到我们就能上面这个来讲这里是1234对应的解

53
00:02:59,968 --> 00:03:04,064
结果这个12345每一会我都把它分开来了

54
00:03:04,320 --> 00:03:07,392
就可以看出来都有

55
00:03:08,160 --> 00:03:09,440
我叔叔的一些

56
00:03:09,696 --> 00:03:10,464
字符串

57
00:03:12,000 --> 00:03:14,560
可以确认确实是落到我的手中了

58
00:03:16,864 --> 00:03:18,144
其中的一

59
00:03:18,912 --> 00:03:20,704
会被分为两个动作

60
00:03:21,472 --> 00:03:24,288
分配内存跟调用构造函数

61
00:03:25,568 --> 00:03:26,336
饿了

62
00:03:27,104 --> 00:03:30,176
现在用析构函数在释放内存

63
00:03:30,944 --> 00:03:32,480
这就是我们前面已经写过的

64
00:03:33,504 --> 00:03:35,040
那么三翻四呢

65
00:03:36,320 --> 00:03:37,856
接收到数组

66
00:03:38,368 --> 00:03:40,672
速度的话我们前面也谈过了

67
00:03:41,184 --> 00:03:42,464
他会有见过

68
00:03:42,720 --> 00:03:47,584
他会有五个然后建构的时候构造的时候会这样的够的时候会这样

69
00:03:48,352 --> 00:03:49,376
都表现出来了

70
00:03:55,008 --> 00:04:00,896
先有这个小例子确认接管这个整个行为

71
00:04:03,968 --> 00:04:04,736
下一页

72
00:04:05,760 --> 00:04:08,576
如果使用者

73
00:04:09,600 --> 00:04:12,160
宁夏商业使用使得这个地方

74
00:04:13,952 --> 00:04:18,559
如果使用者他在六根里的指令按比例的时候

75
00:04:19,583 --> 00:04:22,911
它是用这种形式前面有家一个这种叫做

76
00:04:23,167 --> 00:04:24,959
全局的作用域

77
00:04:25,471 --> 00:04:25,983
符号

78
00:04:26,751 --> 00:04:29,311
再看一次上夜是这样没有

79
00:04:30,079 --> 00:04:32,383
没有那个双胞号下一页呢

80
00:04:33,407 --> 00:04:34,943
有了什么号

81
00:04:35,455 --> 00:04:36,223
那么

82
00:04:36,479 --> 00:04:38,271
这样调用

83
00:04:39,039 --> 00:04:43,135
就会绕过商业所写的全部的

84
00:04:44,159 --> 00:04:45,183
从反数

85
00:04:46,975 --> 00:04:49,023
很少人这样子用吧

86
00:04:51,583 --> 00:04:56,191
什么时候会这样用我们也不知道不过是一家家有提供这样的

87
00:04:56,447 --> 00:04:57,983
语法用法

88
00:05:00,031 --> 00:05:00,543
所以

89
00:05:00,799 --> 00:05:02,079
为照顾所有的

90
00:05:02,847 --> 00:05:05,151
这样子写的话你看这个输出结果

91
00:05:05,407 --> 00:05:08,223
在同一个故事连续上页的故事

92
00:05:08,991 --> 00:05:10,015
他的这篇

93
00:05:11,039 --> 00:05:14,623
所有上一页的那些输出的字符串

94
00:05:15,391 --> 00:05:16,927
为我安排的字符串

95
00:05:17,695 --> 00:05:18,719
在更上一页

96
00:05:18,975 --> 00:05:19,999
我的血的时候

97
00:05:20,511 --> 00:05:22,303
这里会有安排的一些事要

98
00:05:24,351 --> 00:05:25,631
这里的出租

99
00:05:27,935 --> 00:05:29,727
他的下一个这边匆匆没有了

100
00:05:30,239 --> 00:05:33,567
都被绕过去后没有进入我

101
00:05:34,079 --> 00:05:35,615
重返这些函数

102
00:05:39,455 --> 00:05:42,527
我的一次引导你看到的这个新的东西

103
00:05:47,647 --> 00:05:48,927
好这是

104
00:05:49,183 --> 00:05:50,463
一个小例子

105
00:05:51,999 --> 00:05:52,767
接下来

106
00:05:53,023 --> 00:05:58,911
我们手上的那几把刀子一般的operator new array的operator New

107
00:05:59,167 --> 00:06:01,215
全局到

108
00:06:01,471 --> 00:06:02,751
OK重法

109
00:06:03,519 --> 00:06:07,359
还有一个plasma牛排也可以重返

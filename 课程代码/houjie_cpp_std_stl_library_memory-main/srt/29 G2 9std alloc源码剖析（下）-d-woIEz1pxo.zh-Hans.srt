1
00:00:33,792 --> 00:00:39,936
有碎片要去做处理如果可以签三个就73个如果装备只是空

2
00:00:40,192 --> 00:00:40,704
宫的

3
00:00:41,216 --> 00:00:43,264
然后单臂此还要再去

4
00:00:43,776 --> 00:00:46,592
据钱满了保证水位抬高

5
00:00:47,360 --> 00:00:53,248
我们当时想的运作模式是这样看看怎么样把这个动作设计出来

6
00:00:55,040 --> 00:00:55,552
好

7
00:00:56,576 --> 00:00:57,344
首先

8
00:00:58,880 --> 00:01:02,208
不是变量啊好我们看这个好了184号

9
00:01:02,464 --> 00:01:06,048
这个变量较80剩下多少个自己

10
00:01:07,584 --> 00:01:09,376
谁剩下多少自己呢

11
00:01:09,632 --> 00:01:10,912
尾巴剪头

12
00:01:11,168 --> 00:01:13,216
这两根指针我前面提供特别

13
00:01:13,472 --> 00:01:15,520
它就是指向上飞驰

14
00:01:16,288 --> 00:01:20,128
华盛顿是这样尾巴剪头这个程度

15
00:01:20,640 --> 00:01:23,456
这个由于它都是指针指向

16
00:01:23,712 --> 00:01:28,064
纸箱应该往前看他是什么类型

17
00:01:28,320 --> 00:01:31,136
4.1解的就是自己的多

18
00:01:31,392 --> 00:01:32,160
告诉

19
00:01:32,928 --> 00:01:35,488
建完之后现在开始了

20
00:01:37,024 --> 00:01:38,816
如果剩下来的

21
00:01:39,072 --> 00:01:40,608
莫过于

22
00:01:41,632 --> 00:01:42,656
所要求的

23
00:01:43,424 --> 00:01:47,776
什么是所要求的能偷偷拍子是什么偷偷拍子是

24
00:01:48,800 --> 00:01:51,360
要20个每个这么大

25
00:01:52,640 --> 00:01:53,664
这个传进来

26
00:01:53,920 --> 00:01:57,504
刚开始攒起来是28成起来

27
00:01:57,760 --> 00:02:02,112
最好的意思就是我能不能满足20个的

28
00:02:03,392 --> 00:02:05,184
如果成功的话

29
00:02:06,208 --> 00:02:10,560
这边的指针指针的移动我们看这个土豪了

30
00:02:11,072 --> 00:02:12,096
从这块

31
00:02:12,864 --> 00:02:18,240
如果这一块可以满足20个那么我就把这个水位下降

32
00:02:20,032 --> 00:02:22,080
然后把这个指针传回去

33
00:02:22,336 --> 00:02:23,360
这就是20个

34
00:02:25,408 --> 00:02:26,176
将就好了

35
00:02:29,760 --> 00:02:31,552
这个长辈子变小

36
00:02:32,576 --> 00:02:34,624
这是第1个

37
00:02:35,648 --> 00:02:37,696
所以移动之后recon

38
00:02:37,952 --> 00:02:38,720
结束了

39
00:02:41,536 --> 00:02:45,376
如果不能满足20个的话我们往下看

40
00:02:45,888 --> 00:02:47,936
看看那能不能满足一个

41
00:02:48,704 --> 00:02:50,240
反正我跟

42
00:02:51,008 --> 00:02:52,288
这个整个设计就是

43
00:02:52,800 --> 00:02:53,312
抓

44
00:02:53,568 --> 00:02:54,592
最多20个

45
00:02:55,616 --> 00:02:56,384
最少一个

46
00:02:56,640 --> 00:02:58,688
如果连一个都没有那种碎片

47
00:02:59,200 --> 00:03:00,480
所以看看

48
00:03:00,992 --> 00:03:02,528
可以大于

49
00:03:03,040 --> 00:03:04,064
一个吗

50
00:03:05,344 --> 00:03:06,624
我们有助减轻处

51
00:03:08,160 --> 00:03:13,280
大鱼的话那么往下坐着看看那么到底可以切几个是用厨房

52
00:03:13,536 --> 00:03:14,816
到底可以吃几个呢

53
00:03:16,864 --> 00:03:21,728
切完之后一样水位下降但是这时候不是20个

54
00:03:21,984 --> 00:03:24,800
而是从出来的看看是可以接近

55
00:03:25,824 --> 00:03:27,616
然后你就回去

56
00:03:27,872 --> 00:03:29,408
这时候那个

57
00:03:30,176 --> 00:03:36,064
这个传进来的offset变化在这里

58
00:03:36,576 --> 00:03:40,672
现在就等于复制给他是什么出出来的结果

59
00:03:42,208 --> 00:03:42,976
OK

60
00:03:44,256 --> 00:03:47,072
你看这个非常的

61
00:03:48,096 --> 00:03:51,680
泛醇非常的简单的一种逻辑

62
00:03:52,960 --> 00:03:58,848
好继续往下如果也不是20个也不是一个

63
00:04:00,384 --> 00:04:02,688
怎么不是落在一到20之间

64
00:04:04,480 --> 00:04:06,272
要怎么办呢

65
00:04:07,296 --> 00:04:08,320
那就是

66
00:04:08,832 --> 00:04:09,856
碎片

67
00:04:10,368 --> 00:04:11,648
或者是0

68
00:04:12,160 --> 00:04:13,184
设定为零

69
00:04:14,208 --> 00:04:16,256
可能就是这样

70
00:04:17,536 --> 00:04:18,303
好

71
00:04:18,559 --> 00:04:19,839
那么就先

72
00:04:20,095 --> 00:04:21,631
准备一个

73
00:04:22,143 --> 00:04:26,239
等一下要的大小他会马上就要去要一大块了

74
00:04:27,519 --> 00:04:28,543
然后

75
00:04:28,799 --> 00:04:31,359
处理完之后下面这个框框

76
00:04:32,127 --> 00:04:36,479
就是把碎片做充分运用

77
00:04:38,015 --> 00:04:39,295
我们先看看上面这个

78
00:04:40,063 --> 00:04:41,343
Best escape

79
00:04:41,855 --> 00:04:43,903
我等一下准备要拿多少呢

80
00:04:44,927 --> 00:04:47,999
把刚刚传出来的偷偷拍

81
00:04:48,255 --> 00:04:50,559
就是20个

82
00:04:51,839 --> 00:04:52,607
20个

83
00:04:53,375 --> 00:04:54,655
再乘以二

84
00:04:55,423 --> 00:04:57,727
再加上一个追加量

85
00:04:59,263 --> 00:05:05,407
啊就是现在这里了我们前面是33没婚图片一直在讲这个事情现在就写出来

86
00:05:08,223 --> 00:05:10,527
这只是计算那个大小

87
00:05:11,295 --> 00:05:13,087
还没有真正去哪

88
00:05:13,599 --> 00:05:16,415
在哪之前得先把碎片

89
00:05:16,927 --> 00:05:17,695
我处理

90
00:05:18,719 --> 00:05:21,023
怎么处理你可以想想看

91
00:05:21,791 --> 00:05:23,583
这个碎片知道大小

92
00:05:25,119 --> 00:05:26,911
也就知道他应该

93
00:05:27,423 --> 00:05:29,727
落到哪一个链表去

94
00:05:31,007 --> 00:05:35,871
就把那个链表指针拉过来把这个拉过去只针对啦

95
00:05:36,895 --> 00:05:37,663
就

96
00:05:38,687 --> 00:05:44,063
就是我们人类口中所说的把这一块挂过去

97
00:05:45,599 --> 00:05:48,415
这个指针拉动就在这几个地方

98
00:05:49,183 --> 00:05:50,463
我就不带你看了

99
00:05:52,511 --> 00:05:56,863
这边先判断碎片该有的几号链表来

100
00:05:57,375 --> 00:05:58,911
回收

101
00:05:59,423 --> 00:06:00,959
或者叫挂上去

102
00:06:01,727 --> 00:06:03,263
然后指针拉动

103
00:06:07,359 --> 00:06:10,175
处理好碎片之后

104
00:06:12,479 --> 00:06:15,807
下一页继续下去这个函数总共就这两页

105
00:06:18,367 --> 00:06:19,903
调用malloc

106
00:06:20,671 --> 00:06:22,719
这是真正分配那种的动作

107
00:06:23,231 --> 00:06:29,375
现在那上辈子你就是空了碎片处理好了他已经变成0了

108
00:06:29,631 --> 00:06:31,935
分配的结果

109
00:06:32,703 --> 00:06:36,287
放到l3这个地方

110
00:06:36,799 --> 00:06:38,591
Stop with是什么

111
00:06:39,871 --> 00:06:42,687
就是这个赞呗持的起点

112
00:06:44,735 --> 00:06:50,111
所以这个分配的动作等同于你分配到了东西

113
00:06:50,879 --> 00:06:53,951
换柱到战备值表示一样的意思

114
00:06:54,207 --> 00:06:57,279
分配到了东西拿这个纸质一次

115
00:06:58,815 --> 00:07:00,607
死亡之后

116
00:07:00,863 --> 00:07:02,911
如果分配成功

117
00:07:03,679 --> 00:07:08,031
失败的话做这些事情成功的话就跳到下面这个地方来

118
00:07:09,055 --> 00:07:10,591
Grand prix

119
00:07:11,103 --> 00:07:12,383
别把它治好

120
00:07:13,663 --> 00:07:16,735
结束点是起点加上长度

121
00:07:20,575 --> 00:07:24,159
这个与分配的结果值放在几点

122
00:07:24,671 --> 00:07:29,279
成功的话跳到这里来终点颜色

123
00:07:30,559 --> 00:07:32,095
那就是等于

124
00:07:33,631 --> 00:07:35,423
我们口语所说的

125
00:07:35,679 --> 00:07:40,287
把分配的内存放到栈被子里头就是这个意思

126
00:07:45,663 --> 00:07:51,807
成功的话大部分时候都会成功吗你的电脑里都有很多的内容成功

127
00:07:52,063 --> 00:07:55,903
于是到这里来玩了之后这里有一个递归

128
00:07:57,439 --> 00:07:59,743
我们一般见到的龟都很害怕

129
00:08:00,767 --> 00:08:02,815
分数理逻辑是非常单纯的

130
00:08:03,839 --> 00:08:06,399
现在上辈子用吗yoyoyo

131
00:08:07,167 --> 00:08:08,191
满了吗

132
00:08:08,447 --> 00:08:11,775
不知道是不是满了但是已经有内容了

133
00:08:12,031 --> 00:08:15,871
于是在一次调用这个函数又回到刚刚的地方

134
00:08:16,127 --> 00:08:22,271
再一次检查这个赞呗此都不够20个或者多个有没有多于一个

135
00:08:24,575 --> 00:08:27,135
这时候一定这里会吗

136
00:08:29,183 --> 00:08:30,719
鱼翅

137
00:08:32,511 --> 00:08:38,655
非这个画面切的如此的干净漂亮虽然她有必归听起来是让人害怕的但是其实

138
00:08:38,911 --> 00:08:41,215
非常好的一个设计

139
00:08:42,495 --> 00:08:45,567
这里一定需要订个下来的好好的思考

140
00:08:55,551 --> 00:08:56,575
好所以回到

141
00:08:57,087 --> 00:09:00,415
总共两页的页

142
00:09:00,671 --> 00:09:01,951
Alex

143
00:09:28,319 --> 00:09:34,463
或者说那个累计量加上这个现在要分配的量加起来大雨

144
00:09:34,719 --> 00:09:35,487
10000

145
00:09:35,999 --> 00:09:39,071
我就不去没了我就当成是失败

146
00:09:39,839 --> 00:09:42,399
用这种方法来模拟

147
00:09:46,751 --> 00:09:49,311
那么如果真的失败

148
00:09:50,079 --> 00:09:55,199
或者被我假假假装模拟致失败就会跳到下面这里了

149
00:09:58,271 --> 00:09:59,807
这里做什么事情呢

150
00:10:00,831 --> 00:10:04,927
我们去回忆先前我们再说它失败的时候他怎么办

151
00:10:05,439 --> 00:10:08,511
发微信找这个画面上比较右边的电表

152
00:10:09,023 --> 00:10:12,351
找到最靠近的一个挖出一个出来

153
00:10:12,607 --> 00:10:14,911
这里就是做这个这个事情

154
00:10:15,935 --> 00:10:19,263
这边有个注解非常有趣我们先不要看他

155
00:10:19,775 --> 00:10:21,055
这里的菠萝卜

156
00:10:21,311 --> 00:10:23,359
就是开始往右边走

157
00:10:24,639 --> 00:10:30,783
没有例子例如

158
00:10:31,039 --> 00:10:32,575
往右边长

159
00:10:33,087 --> 00:10:35,135
如果有找到这边

160
00:10:37,951 --> 00:10:41,023
任何一个链表现找钱莹找到了

161
00:10:42,047 --> 00:10:43,327
就是出一块

162
00:10:44,095 --> 00:10:50,239
只有1块你也不可能拿两块你那两块又是链表练起来的他是不是连续不知道

163
00:10:50,495 --> 00:10:52,287
你只能拿1块

164
00:10:53,823 --> 00:10:55,615
那你会来

165
00:10:55,871 --> 00:10:57,407
注意这个有趣的事情

166
00:10:57,919 --> 00:11:01,247
他把这一块放到站被子里去

167
00:11:03,295 --> 00:11:09,183
我提过了其实内存的补充永远是补充到赞贝起来

168
00:11:10,207 --> 00:11:13,791
所以这两个指针指的是这一块

169
00:11:14,047 --> 00:11:15,071
头真伪

170
00:11:16,863 --> 00:11:19,167
然后又一次递归调用

171
00:11:21,471 --> 00:11:23,007
他很漂亮

172
00:11:24,287 --> 00:11:30,431
不管是刚刚没那么成功或者是现在那是往右边找到1块

173
00:11:30,687 --> 00:11:32,223
都是关注到

174
00:11:32,735 --> 00:11:35,039
充值到这个赞呗此理

175
00:11:35,807 --> 00:11:37,599
然后再次调用

176
00:11:40,671 --> 00:11:43,743
那些在过去的调用就一定会成功了

177
00:11:46,047 --> 00:11:47,071
这样就得到了

178
00:11:47,839 --> 00:11:48,863
1块钱了

179
00:11:49,119 --> 00:11:55,263
这个空间是20那么多还是一致的多还是三还是期这个不一定就看运作的形式

180
00:11:58,591 --> 00:12:00,639
这个就是整个

181
00:12:00,895 --> 00:12:02,431
这家这个函数叫什么

182
00:12:03,199 --> 00:12:06,015
枪配行为

183
00:12:06,527 --> 00:12:08,831
先检查站被吃

184
00:12:09,599 --> 00:12:10,367
然后

185
00:12:10,623 --> 00:12:12,927
有碎片数量上的处理

186
00:12:13,695 --> 00:12:14,975
处理完毕之后

187
00:12:15,231 --> 00:12:17,023
有没有去补充它

188
00:12:18,047 --> 00:12:18,815
这个就是

189
00:12:19,071 --> 00:12:20,863
枪

190
00:12:24,959 --> 00:12:28,543
我们在这个地方看到

191
00:12:30,335 --> 00:12:33,663
前面我有一个讨论说710000

192
00:12:34,431 --> 00:12:36,991
消耗掉9688还有312

193
00:12:38,783 --> 00:12:44,927
我当时有给出一个线程一个提示其实可以如果这里失败的话

194
00:12:47,231 --> 00:12:51,583
可以不断的简单简单再简单然后再没了

195
00:12:52,351 --> 00:12:54,911
就能够把它312用掉

196
00:12:55,423 --> 00:12:58,239
他对我们是好事情的都是还有那么一些余量

197
00:13:00,799 --> 00:13:03,615
他没有那么做就是要做很简单

198
00:13:03,871 --> 00:13:04,895
很简单

199
00:13:05,663 --> 00:13:07,455
关键在于

200
00:13:07,711 --> 00:13:09,247
这段注记

201
00:13:13,855 --> 00:13:19,999
我们马上要来探讨这些剩下的一些小地方以及这段数据

202
00:13:20,255 --> 00:13:22,559
姐觉得这个最大不同东西

203
00:13:23,327 --> 00:13:26,911
Pandas这个叫什么卡拉OK这个函数

204
00:13:27,679 --> 00:13:29,215
最后剩下这一小片段

205
00:13:30,751 --> 00:13:32,287
这个其实已经离开了

206
00:13:32,543 --> 00:13:33,311
这个

207
00:13:33,567 --> 00:13:36,895
Thank you last night是什么呢

208
00:13:37,151 --> 00:13:40,223
在那个Class里头+这个

209
00:13:40,479 --> 00:13:43,295
后来被命名为AC这个东西

210
00:13:43,551 --> 00:13:44,575
阿里头有一些

211
00:13:44,831 --> 00:13:49,183
静态的数据我们要在Class外楼作为自定义

212
00:13:49,439 --> 00:13:51,743
有人把它叫做次出纸

213
00:13:51,999 --> 00:13:53,279
其实在

214
00:13:54,047 --> 00:14:00,191
在技术的层面上来讲不太对这些动作不能叫社出

215
00:14:01,215 --> 00:14:02,751
这些动作叫定义

216
00:14:03,007 --> 00:14:05,311
小说实际有了这些动作

217
00:14:06,079 --> 00:14:11,199
天气才能够为它分配内存分配空间

218
00:14:11,967 --> 00:14:17,343
只不过大部分的人在这边梳顺顺费顺便色的初值

219
00:14:18,623 --> 00:14:19,647
什么呢

220
00:14:20,159 --> 00:14:20,927
Starbury

221
00:14:22,463 --> 00:14:23,487
上辈子头

222
00:14:23,743 --> 00:14:24,767
上面是地位

223
00:14:25,279 --> 00:14:28,095
还有一个就是累计量

224
00:14:28,607 --> 00:14:29,887
一开始都是

225
00:14:30,655 --> 00:14:35,007
这个领域不同啊这个是整数的脸这两个都是指针的人

226
00:14:37,055 --> 00:14:39,615
这个都是变很早起的新家的写法了

227
00:14:39,871 --> 00:14:41,663
现在谁家的2.0

228
00:14:41,919 --> 00:14:43,455
睡觉家2011

229
00:14:43,711 --> 00:14:44,479
校友

230
00:14:45,759 --> 00:14:49,855
子真的就有特别有一个关键字叫North point

231
00:14:50,623 --> 00:14:52,159
提示大家提醒大家

232
00:14:52,927 --> 00:14:54,719
另外16根指针

233
00:14:55,999 --> 00:14:57,023
一开始都是0

234
00:15:02,911 --> 00:15:03,935
这个

235
00:15:04,447 --> 00:15:05,983
比如以这个来讲好了

236
00:15:07,519 --> 00:15:10,335
这是一个变量这个数组

237
00:15:10,591 --> 00:15:13,919
他前面这么长让人看得很害怕

238
00:15:14,687 --> 00:15:17,759
那是因为它落在一个

239
00:15:18,527 --> 00:15:24,671
模板类里头template Class Class template洛在哪个里头

240
00:15:24,927 --> 00:15:28,511
所以他的全名又带着这个键挂号

241
00:15:29,279 --> 00:15:33,887
他是什么类型的商议好一种看起来很可怕

242
00:15:34,911 --> 00:15:36,447
其实他就只是一个

243
00:15:36,703 --> 00:15:38,495
静态数据

244
00:15:38,751 --> 00:15:41,567
备份定义在Class的外头

245
00:15:42,079 --> 00:15:44,639
你慢慢的去解析这些

246
00:15:44,895 --> 00:15:45,663
我把

247
00:15:48,479 --> 00:15:51,807
好这就是整个程序290行

248
00:15:52,063 --> 00:15:58,207
我们还有第1集分配器没有团但我也说过了在4点9的时候现在这事儿

249
00:15:58,463 --> 00:16:02,303
2.9在4.9配上新的版本不要那个第1集

250
00:16:03,071 --> 00:16:09,215
所以只有一期内有一些小东西在于语法上值得探讨的问

251
00:16:09,471 --> 00:16:13,311
放在后头的下一集基本上已经可以不要了

252
00:16:14,591 --> 00:16:15,615
我们再往下

253
00:16:16,127 --> 00:16:17,919
现在我来个大整理

254
00:16:19,967 --> 00:16:22,015
加上这个整理之后你就

255
00:16:22,271 --> 00:16:23,807
这个这个

256
00:16:24,063 --> 00:16:26,111
任督二脉就全部打通了

257
00:16:28,671 --> 00:16:29,695
我现在

258
00:16:29,951 --> 00:16:31,231
设置一个容器

259
00:16:33,535 --> 00:16:35,071
创建一个容器出来

260
00:16:35,583 --> 00:16:37,375
所以我这个适合呢

261
00:16:37,631 --> 00:16:43,519
2点9我要用刚刚讲了那个分配器那个分配器是默认

262
00:16:43,775 --> 00:16:45,567
在这边不必写出来

263
00:16:45,823 --> 00:16:48,895
在2.9底下还是没人

264
00:16:51,199 --> 00:16:54,015
接下来我放一个元素进去

265
00:16:54,271 --> 00:16:55,551
我现在这里有住校服

266
00:16:56,831 --> 00:16:59,647
我这边那就建立一个临时对象

267
00:16:59,903 --> 00:17:01,439
临时对象要内存

268
00:17:02,463 --> 00:17:05,535
这个内存跟张的讨论一点关系都没有

269
00:17:05,791 --> 00:17:08,863
因为这个不是动态分配所得

270
00:17:10,911 --> 00:17:13,215
是一块内存也就是1块

271
00:17:14,495 --> 00:17:16,287
这一表示它的梳子

272
00:17:17,311 --> 00:17:19,359
最快是从stack来的

273
00:17:19,871 --> 00:17:20,895
Sex

274
00:17:21,407 --> 00:17:24,223
叫the stack

275
00:17:26,271 --> 00:17:29,087
而我们刚的讨论都是从系统来的

276
00:17:29,599 --> 00:17:30,367
推

277
00:17:32,159 --> 00:17:35,231
在这一块内存在这里

278
00:17:35,487 --> 00:17:39,583
His back的时候会去back这个容器要

279
00:17:40,095 --> 00:17:46,239
准备一块空间来放这个东西于是他到刚刚他相分配器

280
00:17:46,495 --> 00:17:52,639
这种戏码他向他背后的分配器发出需求经过刚刚的那一些

281
00:17:52,895 --> 00:17:54,687
设计那个运作

282
00:17:55,455 --> 00:17:57,247
得到了一块内存

283
00:17:57,759 --> 00:17:59,807
这块就是刚刚那个

284
00:18:00,319 --> 00:18:01,855
哪来的这边游戏

285
00:18:03,903 --> 00:18:04,927
不大古迹

286
00:18:06,975 --> 00:18:13,119
为什么化成这样呢因为这个地方我使用的是链表所以这个故事

287
00:18:13,375 --> 00:18:19,263
这个复制元素链表本身需要两根指针所以他跟那

288
00:18:19,519 --> 00:18:25,663
他跟分配器要的那块不只是顾本身的大小还要加上两个字这一整块

289
00:18:28,991 --> 00:18:32,063
这个analog.com看

290
00:18:32,319 --> 00:18:36,159
他的16条链表里面哪一根可以提供这种辣椒

291
00:18:36,415 --> 00:18:36,927
好

292
00:18:37,183 --> 00:18:37,951
提供了

293
00:18:39,231 --> 00:18:40,767
不大不必要注意

294
00:18:41,535 --> 00:18:44,607
如果有100万个这个东西就可以少掉

295
00:18:45,119 --> 00:18:46,399
800万个字节

296
00:18:47,679 --> 00:18:53,823
好吗到时候身份作为一个咖啡的动作为什么会有咖啡的动作因为

297
00:18:54,079 --> 00:18:54,591
Sex

298
00:18:54,847 --> 00:18:55,871
WhatsApp

299
00:18:56,895 --> 00:18:58,175
这个函数会做咖啡

300
00:18:58,431 --> 00:19:00,735
所以这个内容吗放到这里来了

301
00:19:02,271 --> 00:19:05,087
继续往下做这个临时对象

302
00:19:05,343 --> 00:19:06,879
生命就消失了

303
00:19:07,391 --> 00:19:08,415
这个就不见了

304
00:19:12,511 --> 00:19:13,535
没有古迹

305
00:19:13,791 --> 00:19:14,559
非常好

306
00:19:16,351 --> 00:19:17,119
我继续做

307
00:19:17,631 --> 00:19:19,679
这边有一行无意写错的

308
00:19:20,447 --> 00:19:21,983
那我们先不去讨论他了

309
00:19:23,263 --> 00:19:25,055
类型type

310
00:19:27,615 --> 00:19:29,407
不管它继续往下做

311
00:19:31,455 --> 00:19:36,063
刚刚我是用一个临时对象来放进去现在我敢用

312
00:19:36,575 --> 00:19:38,623
动态分配的方式延续

313
00:19:39,903 --> 00:19:42,207
所以我另一个另外一个库

314
00:19:42,975 --> 00:19:46,303
溜出来的这个东西在不许被放进去

315
00:19:47,583 --> 00:19:53,727
我要用这两种方式来让你更好的理解上面这个是带来的下面这个字

316
00:19:55,263 --> 00:20:01,407
所以这个东西本来的大家已经知道在第1讲一边看闻一闻六背后的方法

317
00:20:01,663 --> 00:20:06,783
啊一直往下最后就是没Lock所以得到了这个不能是带着股价的

318
00:20:08,063 --> 00:20:09,087
带着工具

319
00:20:10,623 --> 00:20:13,695
把这个东西不具备扩容兴趣

320
00:20:14,975 --> 00:20:17,791
容器就像分配器发出需求

321
00:20:18,047 --> 00:20:21,119
获得了第2个最快节点

322
00:20:22,655 --> 00:20:24,191
这个是不带cookie的

323
00:20:25,983 --> 00:20:27,263
然后这一个

324
00:20:27,519 --> 00:20:28,799
Hbase这个就

325
00:20:29,055 --> 00:20:30,079
Copy过来了

326
00:20:31,871 --> 00:20:38,015
当然在这一段是根本不知道有什么空气的存在不知道他提过来

327
00:20:39,039 --> 00:20:40,063
继续往下

328
00:20:40,831 --> 00:20:42,879
我们写应用程序的语言

329
00:20:43,391 --> 00:20:47,487
应该很清楚的当你有牛的时候你要搭配比例子

330
00:20:48,511 --> 00:20:51,583
没有搭配的地址那就把这块撒掉了

331
00:20:53,119 --> 00:20:55,167
这个容器的松下又变成

332
00:20:56,191 --> 00:20:58,239
这些通通都是不带过去

333
00:20:59,775 --> 00:21:00,543
非常好

334
00:21:04,127 --> 00:21:06,431
我们就把刚刚学到的分配器

335
00:21:06,943 --> 00:21:10,015
看这个容器做了这个观念上的结合

336
00:21:14,111 --> 00:21:17,184
继续往下我们的进行批斗大会

337
00:21:17,952 --> 00:21:19,488
我们来看一看

338
00:21:19,744 --> 00:21:22,304
这个我所谓的高楼啊

339
00:21:23,072 --> 00:21:26,144
设计的非常好可是里面一些小细节的

340
00:21:26,656 --> 00:21:28,704
我觉得值得检讨

341
00:21:30,752 --> 00:21:31,776
这个比较小

342
00:21:32,288 --> 00:21:37,920
这边都有出现很好所以你很容易回头去看看他落在哪个地方

343
00:21:39,456 --> 00:21:42,272
这三个是同一件事情先谈这个

344
00:21:44,832 --> 00:21:45,856
M

345
00:21:46,112 --> 00:21:47,648
他是要比对

346
00:21:48,160 --> 00:21:54,048
比如这个比对Supreme这是一根指针的指针是不是闹是不是零

347
00:21:54,560 --> 00:21:56,096
或者这个屁是不是零

348
00:21:56,864 --> 00:22:00,704
或者这个nfs就是就是先前那个20

349
00:22:01,984 --> 00:22:05,824
他最后会被反应出来结果是不是一

350
00:22:06,336 --> 00:22:08,384
你们注意到你会这样写吗

351
00:22:10,432 --> 00:22:12,736
通常每个变量现在左手边

352
00:22:13,504 --> 00:22:14,272
啊你呀

353
00:22:15,296 --> 00:22:19,392
你要你要比较自己的右手边就跟他刚好相反

354
00:22:22,208 --> 00:22:23,488
这样写比较好

355
00:22:24,768 --> 00:22:26,560
建议大家要学习他

356
00:22:29,120 --> 00:22:35,264
为什么呢这个细节我想就不要再谈了主要就是怕如果你颠倒过来写而已

357
00:22:35,520 --> 00:22:40,128
你把两个等号不小心写成一个等号的话建议会通过

358
00:22:40,640 --> 00:22:41,152
这个

359
00:22:41,664 --> 00:22:47,040
困难这个这个bug这个臭手非常难查出来

360
00:22:47,552 --> 00:22:52,160
因为你心里头想得是那样你手下写的是这样

361
00:22:52,416 --> 00:22:55,232
可是你永远不知道原来你是处在这样

362
00:22:57,024 --> 00:23:00,352
所以最好的方法是把他换过来像他这样写

363
00:23:01,376 --> 00:23:05,216
那么即时写错了那编译器马上帮你申测出来

364
00:23:06,240 --> 00:23:07,264
我有问题了

365
00:23:08,544 --> 00:23:10,592
这个是需要跟他学习的

366
00:23:12,128 --> 00:23:14,432
好奇他向着一个写法

367
00:23:15,968 --> 00:23:19,040
这个在197行准备了一个变量

368
00:23:19,552 --> 00:23:22,880
这个变量一直到207号还是用到的

369
00:23:23,392 --> 00:23:24,928
这中间经过了多少

370
00:23:25,696 --> 00:23:27,488
经过了很多的步骤

371
00:23:28,768 --> 00:23:30,816
我希望我们不要有这种写法

372
00:23:32,096 --> 00:23:37,728
我们需要在207场需要这个变量我们在206行把它整理好就好了

373
00:23:39,008 --> 00:23:43,104
你不要先准备了一个变量经过了很多时间才能用它

374
00:23:43,360 --> 00:23:45,408
谁知道中间发生了什么事呢

375
00:23:46,944 --> 00:23:51,040
特别是如果是这是指针的话

376
00:23:51,552 --> 00:23:52,832
特别特别危险

377
00:23:56,160 --> 00:24:00,512
因为中间发生的事情可能会造成指针失效

378
00:24:01,024 --> 00:24:03,072
你看代码说你看不出来

379
00:24:05,888 --> 00:24:08,960
但是那些代码所发生的变化使得这个指针

380
00:24:09,216 --> 00:24:10,240
失效

381
00:24:10,496 --> 00:24:12,800
而后面你不知道你继续用了

382
00:24:13,568 --> 00:24:16,128
这个臭虫也是非常难查出来

383
00:24:17,408 --> 00:24:18,688
所以不建议这么做

384
00:24:19,968 --> 00:24:20,992
不建议怎么说

385
00:24:25,344 --> 00:24:27,136
好了上面这个呢

386
00:24:30,208 --> 00:24:36,352
这个是先前我们看到吧的头我说为了帮助你理解最好你就把他的头拿掉吧烦

387
00:24:36,608 --> 00:24:38,656
反正你也不太熟悉而且也没有用

388
00:24:40,960 --> 00:24:44,544
如果在上面这个写法只是声明一个变量

389
00:24:46,592 --> 00:24:47,616
上课

390
00:24:48,640 --> 00:24:54,272
你把这个关键是拿掉你会感觉这个变量就是指针的指针

391
00:24:55,296 --> 00:24:57,600
Hundreds of Beijing

392
00:24:58,880 --> 00:25:00,416
那还可以理解

393
00:25:01,696 --> 00:25:03,232
但是下面这样呢

394
00:25:04,512 --> 00:25:08,864
他跟上面的差别在于它一行里面声明的两个变量

395
00:25:09,632 --> 00:25:10,656
来个屁

396
00:25:11,168 --> 00:25:13,472
这是一个逗点的是两个变量

397
00:25:14,240 --> 00:25:15,776
哇塞下怎么翻到

398
00:25:17,312 --> 00:25:18,336
我们看右手边

399
00:25:19,360 --> 00:25:21,664
如果我把把的吞拿掉的话

400
00:25:22,176 --> 00:25:23,712
那就变成右边这样

401
00:25:26,272 --> 00:25:27,552
怎么有空格

402
00:25:28,064 --> 00:25:29,344
你觉得这是什么

403
00:25:32,160 --> 00:25:32,928
我想

404
00:25:33,184 --> 00:25:35,232
也许五个人有五个解释

405
00:25:36,256 --> 00:25:40,096
而且大家理解都不同最后呢通风都是错也很可能

406
00:25:42,656 --> 00:25:46,496
有这样子可能会有下面这四种想法

407
00:25:47,264 --> 00:25:49,056
我也不去一一的去

408
00:25:49,824 --> 00:25:53,408
爱你去看了这14种里面有三种错误的

409
00:25:55,200 --> 00:25:56,480
对的只有这一种

410
00:26:00,320 --> 00:26:01,344
而这个

411
00:26:02,112 --> 00:26:03,648
其实意义是这样

412
00:26:04,928 --> 00:26:06,720
你可能会大吃惊啊

413
00:26:08,000 --> 00:26:11,584
这个屁10000是PowerPoint这个可以理解

414
00:26:12,864 --> 00:26:15,424
这个劈中竟然只是一个普通的

415
00:26:15,936 --> 00:26:18,752
17个point

416
00:26:21,312 --> 00:26:25,408
这个我也不知道怎么解释反正呢与法是这样

417
00:26:28,736 --> 00:26:34,880
所以写成像他这样写成这种形式是非常容易让人

418
00:26:35,136 --> 00:26:35,904
估价

419
00:26:37,696 --> 00:26:39,488
何不写成两行

420
00:26:41,536 --> 00:26:47,680
我自己写代码或者我看学生的代码是非常重视这个可读性可读性

421
00:26:48,448 --> 00:26:52,800
这样子写着质量航空柜把它放在银行的中间有个分号

422
00:26:53,568 --> 00:26:55,872
一般写我们会形成两个

423
00:26:56,128 --> 00:26:57,920
这样就好多了

424
00:27:00,224 --> 00:27:05,600
这都是语法上的小细节整个设计还是非常非常棒的

425
00:27:06,880 --> 00:27:11,232
好说这个潜逃过了这个检讨过了这个检讨过了

426
00:27:13,024 --> 00:27:14,048
这个呢

427
00:27:15,584 --> 00:27:16,864
香港没有出现

428
00:27:17,376 --> 00:27:20,192
这个是出现在第1次分配器

429
00:27:24,032 --> 00:27:26,080
你没打算带大家去看第1集

430
00:27:26,336 --> 00:27:32,480
可是这么这一行可以拿出来作为一个一个

431
00:27:32,992 --> 00:27:35,552
茶余饭后的谈资

432
00:27:38,112 --> 00:27:39,648
我敢打赌你看不懂这样

433
00:27:41,440 --> 00:27:44,000
注意这边有很多的小括号

434
00:27:45,024 --> 00:27:46,816
右括号中括号

435
00:27:50,912 --> 00:27:53,472
你可以停下来花50分钟就想这样

436
00:27:55,776 --> 00:27:57,568
不过现在我要告诉你结果

437
00:27:59,104 --> 00:28:01,408
骑行等同于质量

438
00:28:05,760 --> 00:28:06,784
慢慢体会吧

439
00:28:07,296 --> 00:28:08,576
这是语法的部分

440
00:28:09,600 --> 00:28:15,232
等同于右边非常什么意思是说我这个函数叫that American Journal

441
00:28:15,744 --> 00:28:21,888
而前面我有提过的一景其实是在模拟您很多年的老友一个函数叫

442
00:28:22,144 --> 00:28:24,704
That will handle

443
00:28:24,960 --> 00:28:27,776
这个就是再无其他

444
00:28:28,032 --> 00:28:28,800
Malik

445
00:28:29,056 --> 00:28:29,568
Hello

446
00:28:31,104 --> 00:28:32,384
也就是这个函数

447
00:28:34,432 --> 00:28:39,808
意思是说这个函数接受H并且返回

448
00:28:40,064 --> 00:28:43,648
H是什么呢上面这个

449
00:28:46,464 --> 00:28:52,608
硬要把这两行写成飞行带来什么好处呢没有任何好处只有坏处就

450
00:28:52,864 --> 00:28:54,144
没有人看得懂

451
00:28:55,168 --> 00:28:56,704
设置一个限制

452
00:28:57,216 --> 00:28:58,496
我非常不赞成

453
00:29:01,312 --> 00:29:07,456
而这是右手边的吗前面提到了我再查一遍查到这里来

454
00:29:07,712 --> 00:29:09,504
来比对一下这是一个全等

455
00:29:11,552 --> 00:29:12,832
他就是在模拟的

456
00:29:13,856 --> 00:29:15,392
下面就是在玻璃上

457
00:29:22,304 --> 00:29:25,888
剩下的是一个比较大的检讨

458
00:29:26,656 --> 00:29:27,936
比较大的剪头

459
00:29:28,192 --> 00:29:29,728
我们在这两段

460
00:29:30,496 --> 00:29:32,032
这是一个重要的注解

461
00:29:34,848 --> 00:29:37,920
那这个是什么这个是我们前面检讨过

462
00:29:38,688 --> 00:29:41,504
他整个系统的没有归还没有睡

463
00:29:42,784 --> 00:29:44,064
不是说没有给定

464
00:29:44,832 --> 00:29:49,440
全部都会收到他的手上可能串的1000000 10000000个元素都在他手上

465
00:29:49,952 --> 00:29:51,744
这件事情我们现在回来检讨

466
00:29:53,024 --> 00:29:57,376
好我们先回到这个地方来210到210次

467
00:30:00,448 --> 00:30:03,776
21282 14日落在最快

468
00:30:06,080 --> 00:30:07,616
这会是

469
00:30:08,384 --> 00:30:12,992
很大的一个函数我们看上也就是这个枪

470
00:30:14,272 --> 00:30:16,832
啊回到这边儿1234

471
00:30:17,088 --> 00:30:21,184
这个发生地点是当没有失败的时候

472
00:30:23,744 --> 00:30:25,024
之前我曾经

473
00:30:25,280 --> 00:30:31,424
有过一个我们说提醒你我们可不可以这么做呢当失败的时候拿出12

474
00:30:32,448 --> 00:30:36,800
在数123主页总是有机会用到那个最剩余的量

475
00:30:39,872 --> 00:30:41,408
而且写起来很简单

476
00:30:42,944 --> 00:30:45,504
发给了这段住就来看看

477
00:30:47,296 --> 00:30:49,088
他说当失败的时候

478
00:30:49,344 --> 00:30:51,136
Try to make you

479
00:30:51,648 --> 00:30:56,512
是的去做做什么呢with What We have

480
00:30:58,304 --> 00:31:02,144
做什么在他手上有什么东西来做

481
00:31:03,424 --> 00:31:04,960
但他手上有什么

482
00:31:05,728 --> 00:31:08,800
他手上所拥有的就是他右手边那一些

483
00:31:09,312 --> 00:31:15,456
现在已经山穷水尽了已经没有那种可以拿了只剩下他手上就是右手边比较

484
00:31:15,712 --> 00:31:21,856
把那块他说他试着从那些里面去取也就是下面这些动作

485
00:31:24,160 --> 00:31:27,232
他又继续说这样不会带来伤害

486
00:31:30,560 --> 00:31:34,656
我们不试着去做比较小的铝块

487
00:31:35,936 --> 00:31:42,080
我先前的提示就是我们可以试着去比较小的去他说他不

488
00:31:42,336 --> 00:31:43,104
不打算怎么做

489
00:31:44,896 --> 00:31:48,480
因为那样的话会导致

490
00:31:49,248 --> 00:31:50,528
大反差

491
00:31:52,320 --> 00:31:55,392
在multiprocess模型上面

492
00:31:55,904 --> 00:32:00,768
多进程的机器上面会导致大灾难

493
00:32:02,304 --> 00:32:05,888
如果他一再拿的话会导致大灾难

494
00:32:06,656 --> 00:32:08,192
我一直想不通

495
00:32:08,448 --> 00:32:09,472
为什么

496
00:32:10,240 --> 00:32:12,032
为什么会大灾难

497
00:32:13,056 --> 00:32:14,080
不会啊

498
00:32:16,640 --> 00:32:22,784
竭泽而渔把那个把那个鱼都不光光对你非常好

499
00:32:23,040 --> 00:32:23,808
好啊

500
00:32:24,064 --> 00:32:26,112
怎么会有大灾难的想不通

501
00:32:27,648 --> 00:32:31,744
后来经过漫长的一段时间换一个角度想

502
00:32:32,000 --> 00:32:37,888
所以人生也是这样子你在很多事情上跟你换一个角度想突然之间豁然开了

503
00:32:38,400 --> 00:32:41,984
原来他是站在别人的角度想这个事情

504
00:32:42,752 --> 00:32:47,616
你觉得儿与把鱼都不关了别人吃什么

505
00:32:49,408 --> 00:32:51,968
所以他特别说在一个播

506
00:32:52,224 --> 00:32:55,808
多进程的环境下别人也在望

507
00:32:56,320 --> 00:33:02,464
你吃光光别人就完蛋了不是对你

508
00:33:03,232 --> 00:33:04,256
是对别人

509
00:33:07,072 --> 00:33:10,912
这样想起来也原来如此他是这样的设计

510
00:33:14,752 --> 00:33:17,312
当然你说我才不管那么多呢

511
00:33:17,568 --> 00:33:19,360
我就是要把吃光墨镜

512
00:33:19,616 --> 00:33:23,200
那你就去改这段对你非常好

513
00:33:24,224 --> 00:33:26,272
好这个是人生

1
00:00:06,912 --> 00:00:08,192
我看下张图片

2
00:00:09,984 --> 00:00:14,848
是我的一个要谈的容器有这么多时来给我第1个要谈的就是list

3
00:00:15,616 --> 00:00:16,896
因为彼此的刺

4
00:00:18,432 --> 00:00:21,760
他不是最简单的最简单的应该是呃对然后是Master

5
00:00:22,016 --> 00:00:24,576
ASUS是最具代表性

6
00:00:25,344 --> 00:00:31,488
而且大家在如果你是在学校里面你是学计算机的话那可能你都是

7
00:00:31,744 --> 00:00:32,256
错过

8
00:00:32,512 --> 00:00:33,280
链表

9
00:00:33,536 --> 00:00:38,400
对你是比较熟悉的东西

10
00:00:39,424 --> 00:00:41,728
Vista的源代码在这里

11
00:00:46,080 --> 00:00:52,224
前面我们已经看过了他使用的分配器默认识这一个这个是个六2.91版的最大

12
00:00:52,480 --> 00:00:56,064
默认是很棒的AOC这个东西

13
00:00:59,904 --> 00:01:01,440
我首先想带你看

14
00:01:01,952 --> 00:01:03,232
一个list里面

15
00:01:03,488 --> 00:01:08,096
他需要些什么样的东西才能够去控制一个双向链表

16
00:01:08,864 --> 00:01:11,936
和单向链表的指示的方向和单向

17
00:01:12,448 --> 00:01:15,008
后面看到结果直到它是双向

18
00:01:16,544 --> 00:01:21,920
整个Beast Class里面的Beta只有这一个绿色的这个node

19
00:01:22,176 --> 00:01:23,200
名字叫note

20
00:01:23,456 --> 00:01:24,224
而且你怎么

21
00:01:24,736 --> 00:01:26,784
愤怒的是什么态度呢

22
00:01:27,040 --> 00:01:28,064
Taptap

23
00:01:29,344 --> 00:01:30,624
京菜谱是什么

24
00:01:31,648 --> 00:01:36,512
而如果你自己也要像我这样就看源代码得有一个比较困难

25
00:01:36,768 --> 00:01:38,048
比较困扰的就是

26
00:01:38,304 --> 00:01:42,144
在他的Class里面的总是会有一大堆自己的态度的方案

27
00:01:42,656 --> 00:01:48,800
他会把一些菜谱重新命名所以我们看到一个不知道的太多了我们在网上看看了她也许她

28
00:01:49,056 --> 00:01:49,568
前面

29
00:01:49,824 --> 00:01:52,128
有一个新的秘密

30
00:01:52,640 --> 00:01:53,664
所以再来一次

31
00:01:54,432 --> 00:01:55,456
这个list

32
00:01:55,712 --> 00:01:57,504
有一个Beta叫什么呢

33
00:01:58,016 --> 00:02:00,320
他是什么太笨的林海

34
00:02:00,576 --> 00:02:03,648
太不是什么不知道啊晚上看

35
00:02:03,904 --> 00:02:04,416
看到了

36
00:02:05,184 --> 00:02:06,976
那个菜是什么呢

37
00:02:07,232 --> 00:02:10,304
是一个指针指向

38
00:02:11,584 --> 00:02:15,424
The best new的又是什么呢我知道但是已经

39
00:02:15,680 --> 00:02:16,192
无所谓了

40
00:02:17,728 --> 00:02:19,008
我现在只想知道

41
00:02:19,520 --> 00:02:21,312
这个绿色的肉到底多大

42
00:02:23,360 --> 00:02:27,200
刚刚这样子分析的结果网上看了结果他是一个指针

43
00:02:27,712 --> 00:02:30,528
指向某个东西不管他指向什么

44
00:02:30,784 --> 00:02:32,320
但是它的大小就是

45
00:02:32,576 --> 00:02:34,112
一个字四个字节

46
00:02:34,368 --> 00:02:36,160
在32位电脑上面

47
00:02:37,696 --> 00:02:42,304
一个字34个字节所以如果我sizeof

48
00:02:43,328 --> 00:02:46,656
我用sizeof这个这个这个动作去取

49
00:02:46,912 --> 00:02:50,752
一个list的对象的话它的大小应该是

50
00:02:53,824 --> 00:02:54,848
四个字节

51
00:02:55,616 --> 00:02:56,640
我们回到前面来

52
00:02:56,896 --> 00:02:57,664
刚刚

53
00:02:58,432 --> 00:02:59,456
我整理出来的图

54
00:03:00,480 --> 00:03:01,248
这个是list

55
00:03:02,272 --> 00:03:03,552
它的大小呢

56
00:03:04,576 --> 00:03:08,160
在科目二点900之下它的大小是

57
00:03:09,696 --> 00:03:12,000
不过到了4点988

58
00:03:12,512 --> 00:03:16,864
有点变化啊等一下我可以打出4.9杆的设计给你看

59
00:03:20,704 --> 00:03:23,008
好除了关注这一个就是

60
00:03:23,264 --> 00:03:26,336
一个list本身到底是什么

61
00:03:27,104 --> 00:03:28,128
画图画的字

62
00:03:30,176 --> 00:03:32,736
说他本身是一个指针

63
00:03:35,040 --> 00:03:36,320
儿子像什么呢

64
00:03:37,344 --> 00:03:39,136
Listnode

65
00:03:39,904 --> 00:03:46,048
Listnode是这是个节点我们在讲练表的时候都会讲到节点一个节点

66
00:03:46,304 --> 00:03:48,096
Listening

67
00:03:48,608 --> 00:03:49,376
上面这里

68
00:03:51,168 --> 00:03:52,192
Methanol

69
00:03:53,472 --> 00:03:59,616
他的一个节点是什么我这个图因为是已经分析过源代码之后画出来了之后我们直接看地图还会更快

70
00:03:59,872 --> 00:04:00,384
坏血

71
00:04:00,640 --> 00:04:04,480
由于这个要实现出一个双向链表

72
00:04:04,736 --> 00:04:09,344
所以除了绿色的数据本身之外还要附带两根指针

73
00:04:10,112 --> 00:04:11,648
一个铜钱一个往后吃

74
00:04:12,160 --> 00:04:13,952
这整个就是一个节点

75
00:04:14,208 --> 00:04:17,536
像这样的一个节点要怎么设计呢

76
00:04:18,303 --> 00:04:19,071
这个

77
00:04:22,399 --> 00:04:26,751
List_node他有绿色的部分他有三个变量

78
00:04:28,031 --> 00:04:29,567
其中一场

79
00:04:29,823 --> 00:04:34,943
这个绿色的这些我们要放进去的语言数值

80
00:04:36,223 --> 00:04:42,111
可能是整数可能是浮点数可能是一颗石头和一个人就看你要放什么元素

81
00:04:43,135 --> 00:04:45,183
除了这一个跌倒之外

82
00:04:45,439 --> 00:04:50,047
另外要有向前指向后置的两根指针在这个地方

83
00:04:53,631 --> 00:04:54,143
注意

84
00:04:54,655 --> 00:04:55,935
这个指针

85
00:04:56,959 --> 00:04:58,495
是什么类型呢

86
00:04:58,751 --> 00:05:00,031
这个类型

87
00:05:00,543 --> 00:05:02,079
Worthpoint

88
00:05:02,335 --> 00:05:07,967
Worthpoint又是什么呢上银行他比方说boys winter

89
00:05:08,223 --> 00:05:08,735
就是

90
00:05:08,991 --> 00:05:10,527
His Voice

91
00:05:15,391 --> 00:05:17,695
你在学校如果这样写的话呢

92
00:05:19,487 --> 00:05:21,279
可能老师会给你扣一分

93
00:05:22,303 --> 00:05:22,815
这是

94
00:05:23,583 --> 00:05:25,887
可以运作那就不够好

95
00:05:26,911 --> 00:05:27,935
通常我们

96
00:05:28,703 --> 00:05:34,847
双向链表的链表指出去的东西应该是指向自己这种东西本身

97
00:05:35,871 --> 00:05:36,383
链表

98
00:05:36,639 --> 00:05:39,199
但是他现在却是

99
00:05:39,455 --> 00:05:43,039
两个指针指出去都是指向贸易

100
00:05:43,295 --> 00:05:47,903
可见在城市运作里面设计都还要再去转型

101
00:05:50,207 --> 00:05:50,975
那么

102
00:05:51,743 --> 00:05:54,303
学校的正规设计里面可能会认为这样

103
00:05:54,815 --> 00:05:55,839
不太理想

104
00:05:56,351 --> 00:05:58,911
可以运作只要你后面有正确转型

105
00:06:00,191 --> 00:06:00,959
怎么会

106
00:06:01,215 --> 00:06:05,823
难道标准库的这一些很棒的团队会写出这种代码吗

107
00:06:06,591 --> 00:06:10,431
确实是这样啊这是2.9 100他确实是这样

108
00:06:12,479 --> 00:06:17,599
当初在看这一部分的时候就我们就会有这个疑惑这样不是很理想

109
00:06:19,135 --> 00:06:21,951
后来在4.91板等下就会打出来给你看

110
00:06:22,207 --> 00:06:23,999
确实有改善

111
00:06:26,047 --> 00:06:27,839
好这是节点本身

112
00:06:29,887 --> 00:06:35,263
所以帮你放100万个元素进去的时候你不要想说

113
00:06:36,031 --> 00:06:40,127
我放个就是100万个元素本身我好用要这些

114
00:06:40,383 --> 00:06:40,895
内存

115
00:06:42,687 --> 00:06:47,039
在list里面还要每一个节点每一个元素

116
00:06:47,295 --> 00:06:49,599
还要再多好用两根支撑

117
00:06:50,879 --> 00:06:52,927
所以这个list

118
00:06:53,183 --> 00:06:59,327
跟他的分配器只要内存的时候一个一个一会一会你要是要这么一

119
00:07:00,351 --> 00:07:03,167
数据加两根支撑这种导向

120
00:07:03,935 --> 00:07:07,007
而不是只是要一个数据这样大小

121
00:07:08,031 --> 00:07:08,799
我们

122
00:07:09,311 --> 00:07:11,359
希望就是说在这个

123
00:07:11,615 --> 00:07:12,895
慢慢引导你

124
00:07:13,919 --> 00:07:18,015
所谓胸中自有龟和就是完全清楚

125
00:07:19,295 --> 00:07:22,111
你在使用标准库的时候

126
00:07:22,623 --> 00:07:24,927
到底他是明天的细节是什么

127
00:07:25,439 --> 00:07:29,535
比如像这样100万个元素其实是耗掉多少内存

128
00:07:29,791 --> 00:07:31,327
我要有个概念

129
00:07:36,191 --> 00:07:37,727
继续来谈这个电表

130
00:07:38,239 --> 00:07:44,127
所以每个节点多大这个已经知道了他用哪一个分配器知道了

131
00:07:44,895 --> 00:07:49,503
他自己本身多大就是这一个那叫绿色的

132
00:07:50,271 --> 00:07:54,879
Node这个变量它是一个指针大小时是这个也知道

133
00:07:57,183 --> 00:08:01,535
至于里头这边有点听点这个其实大的一大块

134
00:08:02,303 --> 00:08:03,327
里头要

135
00:08:03,583 --> 00:08:05,887
元素要加进去不去备课

136
00:08:06,143 --> 00:08:08,447
这样拿出来双向链表

137
00:08:08,703 --> 00:08:10,239
指着要怎么样的变化

138
00:08:10,751 --> 00:08:15,103
这个够跟你在学校所学的差不多是真拉来拉去这个

139
00:08:15,359 --> 00:08:18,687
不在我们的我所关注的范围内

140
00:08:19,967 --> 00:08:22,527
都是一些非常的正规的一些动作

141
00:08:25,855 --> 00:08:29,695
现在我们来看一看还有一个东西没有讲就是

142
00:08:31,487 --> 00:08:33,791
Iterative我把它画成这个小泡泡

143
00:08:36,607 --> 00:08:39,167
这个一只weather你可以

144
00:08:39,423 --> 00:08:41,983
你可以向这个list说

145
00:08:42,239 --> 00:08:43,007
请你给我

146
00:08:43,775 --> 00:08:45,311
7.1定

147
00:08:46,335 --> 00:08:47,615
或者给我终点

148
00:08:49,919 --> 00:08:51,967
说一个iterator

149
00:08:52,223 --> 00:08:56,575
刚刚说起点和终点其实就是用一个iterator来指出来

150
00:08:57,343 --> 00:09:01,183
效果是这样的话你看这个图我用这个泡泡指向这一个

151
00:09:01,439 --> 00:09:03,999
或者用这个泡泡指向这一个

152
00:09:04,255 --> 00:09:05,791
这就是一条微博

153
00:09:09,631 --> 00:09:12,959
那么这个链表它是一个非连续空间

154
00:09:14,751 --> 00:09:17,567
所以他这个iterator不能够是指正

155
00:09:18,847 --> 00:09:23,967
因为指针如果我们希望以此为它模拟指针的动作

156
00:09:24,735 --> 00:09:29,087
指针你去佳佳你看如果我现在用一个指针指着他

157
00:09:29,343 --> 00:09:31,903
把指针家家会指到哪里去呢

158
00:09:33,439 --> 00:09:34,207
不知道

159
00:09:34,975 --> 00:09:36,511
那一定是错误的

160
00:09:37,791 --> 00:09:41,375
这个iterator家家应该指向这里

161
00:09:41,887 --> 00:09:43,679
在家家应该是想说

162
00:09:43,935 --> 00:09:45,727
蔡佳佳是最最

163
00:09:47,519 --> 00:09:50,079
所以这个iterator本身要有一个

164
00:09:50,591 --> 00:09:51,103
足够

165
00:09:51,359 --> 00:09:52,383
聪明

166
00:09:53,919 --> 00:09:55,199
怎么样聪明呢

167
00:09:56,735 --> 00:09:59,039
我们来看这是一个双向的

168
00:09:59,295 --> 00:10:00,063
电表

169
00:10:00,575 --> 00:10:03,391
这一个iterator指向他

170
00:10:04,671 --> 00:10:10,815
当使用者把这个也忒的家家的时候意思是要走到下一个节点

171
00:10:12,095 --> 00:10:14,399
所以这个iterator

172
00:10:14,655 --> 00:10:19,775
就应该够聪明聪明到他要进去看

173
00:10:20,031 --> 00:10:21,567
Next这个指针

174
00:10:23,103 --> 00:10:23,871
然后

175
00:10:24,127 --> 00:10:27,199
经由next这个指针指到这里来

176
00:10:27,455 --> 00:10:30,527
才把这个自己一头为的本身

177
00:10:33,343 --> 00:10:37,695
他随够聪明就他要进去看这个next尺寸

178
00:10:38,975 --> 00:10:40,767
那我们来看看iterator怎么设计

179
00:10:45,887 --> 00:10:50,751
It在一个链表里头有一个差机会

180
00:10:52,031 --> 00:10:54,079
莼菜不叫iterator

181
00:10:55,615 --> 00:10:57,663
他是什么东西呢

182
00:10:57,919 --> 00:10:59,455
他是这一个class

183
00:11:02,015 --> 00:11:03,295
这个class

184
00:11:03,807 --> 00:11:05,343
定义在这里

185
00:11:07,391 --> 00:11:07,903
最

186
00:11:08,159 --> 00:11:14,303
Iterator是一个聪明的指称叫什么呢pointer它必须是个卡

187
00:11:14,559 --> 00:11:15,071
Class

188
00:11:16,095 --> 00:11:18,143
必须对所有的容器

189
00:11:18,655 --> 00:11:20,703
除了master之外

190
00:11:20,959 --> 00:11:22,239
等一下就会涨到呗

191
00:11:22,751 --> 00:11:25,567
除了bat之外还有除了锐之外

192
00:11:26,079 --> 00:11:27,871
所有的容器的iterator

193
00:11:28,127 --> 00:11:29,663
我必须说

194
00:11:30,431 --> 00:11:33,503
他才能够设计组聪明动作

195
00:11:34,015 --> 00:11:38,111
也就是说它才能够成为一个智能指针什么朋友

196
00:11:41,439 --> 00:11:42,975
所有的容器

197
00:11:43,743 --> 00:11:49,887
为了供应给使用者所谓的所有的容器都要有一个他的发

198
00:11:51,679 --> 00:11:53,215
名字叫iterator

199
00:11:54,495 --> 00:11:57,055
它必然代表某一个class

200
00:12:01,151 --> 00:12:04,991
现在我们来看看这一个叫做iterator的这个class

201
00:12:05,247 --> 00:12:09,599
是怎么设计他怎么能够有那个聪明的动作

202
00:12:10,367 --> 00:12:11,647
先看的用法

203
00:12:13,439 --> 00:12:17,791
我要先跳企业后面有一个使用的形式给你看

204
00:12:19,071 --> 00:12:19,839
好

205
00:12:20,351 --> 00:12:21,119
废液

206
00:12:22,911 --> 00:12:24,447
这一行的意思就是

207
00:12:24,703 --> 00:12:26,239
我现在呢

208
00:12:26,751 --> 00:12:32,895
选用了一个链表这个容器里头放的都是是这种元素

209
00:12:34,175 --> 00:12:36,479
在这一种类型这个容器

210
00:12:36,991 --> 00:12:38,015
我现在要去

211
00:12:38,271 --> 00:12:39,807
用他的iterator

212
00:12:40,831 --> 00:12:43,135
这样这么罪行一直到这里

213
00:12:44,671 --> 00:12:45,951
这是一个

214
00:12:46,207 --> 00:12:47,487
废弃

215
00:12:48,511 --> 00:12:52,607
根据这个类型我要做一个对象出来

216
00:12:54,399 --> 00:12:55,935
这一行

217
00:12:57,983 --> 00:13:00,031
看女人大码的时候飞行号

218
00:13:00,799 --> 00:13:04,127
从历史的里面取一个位置我们再回到刚刚那一页

219
00:13:07,967 --> 00:13:11,295
3DS的里面去

220
00:13:11,807 --> 00:13:12,575
Tap

221
00:13:12,831 --> 00:13:15,647
其实就是这一个太

222
00:13:18,207 --> 00:13:19,999
这个菜吧就是这个

223
00:13:21,023 --> 00:13:24,095
水现在要带你去看这一个Class的设计

224
00:13:26,911 --> 00:13:31,775
你现在可能会疑惑这个地方要传三个模板参数进去

225
00:13:32,287 --> 00:13:33,823
传进来以后

226
00:13:34,591 --> 00:13:37,151
三个传到这里来是这三个

227
00:13:40,735 --> 00:13:44,831
换了一个名称叫做三个名称这些到底是做什么

228
00:13:45,087 --> 00:13:46,879
有必要如此吗

229
00:13:47,903 --> 00:13:49,439
消费了他这件事情

230
00:13:55,583 --> 00:14:01,727
好这个iterator呢刚刚那个结点的手机那个Class我站在操一次

231
00:14:01,983 --> 00:14:03,263
这边来这一块

232
00:14:04,543 --> 00:14:10,431
这一个比较大的这个就是这个Class这个有点点点所以其实他很大

233
00:14:11,455 --> 00:14:12,991
我们挑出重点来讲

234
00:14:14,271 --> 00:14:15,039
首先

235
00:14:16,319 --> 00:14:19,391
Iterator里面会有大量的操作符重载

236
00:14:20,671 --> 00:14:22,719
Iterator要模拟尺寸

237
00:14:23,487 --> 00:14:25,791
指针会被怎么使用了

238
00:14:26,559 --> 00:14:28,863
会被作用用箭头符号

239
00:14:29,119 --> 00:14:32,191
用星号用加加减减

240
00:14:32,447 --> 00:14:34,751
甚至于加等于减等于

241
00:14:35,007 --> 00:14:36,031
这些操作

242
00:14:37,567 --> 00:14:39,615
这里体现出来

243
00:14:42,687 --> 00:14:44,991
打开微看到我这边64个

244
00:14:45,247 --> 00:14:47,039
点点点还有很多个

245
00:14:50,367 --> 00:14:51,135
另外

246
00:14:52,671 --> 00:14:58,815
几乎每一个容器的iterator我们现在开始链表的吗那后面还有一组一介绍各种容器

247
00:14:59,071 --> 00:15:01,375
他们也都有他们自己的一种类的

248
00:15:03,679 --> 00:15:05,215
自学iterator

249
00:15:05,471 --> 00:15:11,359
都一定要做个插的地方这里标准1234

250
00:15:16,223 --> 00:15:18,527
这五个餐厅饭做什么用呢

251
00:15:19,807 --> 00:15:20,831
后面再说

252
00:15:21,599 --> 00:15:27,743
所以现在就是让你认识当你认识所有的容器的一种raid 1

253
00:15:27,999 --> 00:15:31,583
一个要有一大堆的至少这五个产品方案

254
00:15:32,095 --> 00:15:35,423
第2个人会有一大组的方式

255
00:15:35,679 --> 00:15:37,215
做操作符重载

256
00:15:37,727 --> 00:15:39,007
都是长这个样子

257
00:15:43,359 --> 00:15:44,127
好

258
00:15:44,895 --> 00:15:51,039
现在我们来我就来举一个由于刚刚在这一张图里面我用

259
00:15:51,295 --> 00:15:53,343
Iterator加加

260
00:15:53,855 --> 00:15:59,999
我口语上为你叙述了这个家家他应该跑到里头去找出Nexus

261
00:16:00,255 --> 00:16:01,791
人一到下个位置去

262
00:16:03,327 --> 00:16:06,399
我们所以我们先来看看这件事情是怎么做的

263
00:16:08,447 --> 00:16:10,751
所以我应该去看这里的家家

264
00:16:13,311 --> 00:16:15,359
动作非常少

265
00:16:16,127 --> 00:16:18,431
只有两行结合起来两咖啡

266
00:16:19,711 --> 00:16:20,735
这里有两个家

267
00:16:20,991 --> 00:16:22,015
现在我把它放大

268
00:16:22,271 --> 00:16:23,039
下一页

269
00:16:24,575 --> 00:16:25,855
就是这两个家家

270
00:16:27,903 --> 00:16:28,927
一个有参数

271
00:16:29,183 --> 00:16:30,463
一个没参数

272
00:16:35,583 --> 00:16:37,119
佳佳比较特别

273
00:16:38,911 --> 00:16:39,935
可以加加爱

274
00:16:40,191 --> 00:16:41,215
也可以埃家家

275
00:16:41,983 --> 00:16:45,567
我们家postfix Christmas tree

276
00:16:46,079 --> 00:16:52,223
这两种我口语上就是习惯了加强制性的跟后制性的

277
00:16:55,295 --> 00:16:57,087
家家爱就是前置性

278
00:16:57,343 --> 00:16:59,647
埃加加90后日期

279
00:17:01,695 --> 00:17:04,767
前置行跟后执行的程式设计

280
00:17:06,047 --> 00:17:07,583
由于他们

281
00:17:08,095 --> 00:17:09,887
嗨家家和家家爱

282
00:17:10,399 --> 00:17:13,727
它的参数为1参数就是iPhone称自己

283
00:17:14,495 --> 00:17:16,031
是他的只有一个参数

284
00:17:18,079 --> 00:17:22,175
因此没有办法去区分到底是爱家家还是家家爱

285
00:17:23,711 --> 00:17:24,735
怎么办呢

286
00:17:25,503 --> 00:17:28,063
Cplusplus的语言规格说

287
00:17:28,319 --> 00:17:31,135
为了区分这一件事情

288
00:17:31,903 --> 00:17:34,463
钱佳佳

289
00:17:35,231 --> 00:17:39,839
刚不是说爱本身就是一个参数吗已经变成

290
00:17:40,095 --> 00:17:43,679
调用这个函数的after本身了

291
00:17:44,191 --> 00:17:47,775
如果如果你对这件事情就对于操作符重载

292
00:17:48,287 --> 00:17:50,335
我现在所讲的你没有非常的

293
00:17:50,591 --> 00:17:51,871
能体会里奥

294
00:17:52,127 --> 00:17:54,431
另外拨时间去把操作符重载的

295
00:17:54,687 --> 00:17:55,455
准备一下

296
00:17:57,759 --> 00:18:02,367
所以这两个菜操作符那就没有参数了

297
00:18:02,623 --> 00:18:05,951
但是为了区分它候家家有一个参数

298
00:18:06,207 --> 00:18:07,487
他是这个参数没意义

299
00:18:08,511 --> 00:18:10,559
执行是上下加上人体

300
00:18:11,839 --> 00:18:13,375
这样我们就把分出来了

301
00:18:14,399 --> 00:18:15,167
好

302
00:18:15,423 --> 00:18:20,031
现在我要带着你去看家的动作说他很聪明他是个智能指针

303
00:18:20,799 --> 00:18:23,359
好聪明怎么一个做法呢

304
00:18:24,127 --> 00:18:25,151
我看这里

305
00:18:25,663 --> 00:18:27,199
这个行

306
00:18:27,967 --> 00:18:30,271
飞行是为了劝服了

307
00:18:31,295 --> 00:18:34,623
紧凑所以写成一行其实他是

308
00:18:34,879 --> 00:18:37,439
两个动作这边一个分号

309
00:18:38,207 --> 00:18:40,511
觉得他的第1个动作这里

310
00:18:41,023 --> 00:18:42,047
然后再入菜

311
00:18:43,327 --> 00:18:44,607
我们来看这个动作

312
00:18:46,399 --> 00:18:49,983
这个绿色的node1就是这个

313
00:18:50,239 --> 00:18:51,519
Visit

314
00:18:52,543 --> 00:18:54,335
也就是前面

315
00:18:57,151 --> 00:18:59,967
这个iterator里面的这个东西

316
00:19:00,735 --> 00:19:02,783
我把它画在泡泡里面

317
00:19:04,575 --> 00:19:05,599
这个泡泡

318
00:19:05,855 --> 00:19:07,647
本身就是一条微博

319
00:19:08,159 --> 00:19:11,487
里头有一个指针

320
00:19:11,999 --> 00:19:14,047
命名叫做node1

321
00:19:15,327 --> 00:19:18,399
不要含节点整块的唇膏混掉

322
00:19:20,447 --> 00:19:21,727
我要这里来

323
00:19:22,239 --> 00:19:25,823
作家家是一个怎样的动作呢

324
00:19:26,847 --> 00:19:27,359
把

325
00:19:27,615 --> 00:19:29,663
Node1

326
00:19:30,431 --> 00:19:33,247
里头的这个next指针取出来

327
00:19:35,551 --> 00:19:36,831
彭城

328
00:19:37,087 --> 00:19:39,647
一个紫色的node1本身

329
00:19:39,903 --> 00:19:40,927
我们来看在这里

330
00:19:42,207 --> 00:19:46,047
所以这个城市的程式码的动作

331
00:19:47,071 --> 00:19:50,655
就是从这个node1这里面

332
00:19:51,167 --> 00:19:56,543
所指的去取出这个next这个值则把这一个词

333
00:19:56,799 --> 00:19:59,103
设闹note9续

334
00:20:00,383 --> 00:20:06,527
维持长mod1我不想让我的因为我担心你想象个子节点这一大块其实不

335
00:20:06,783 --> 00:20:10,367
是啊所以你现在看到了这一个菜吗

336
00:20:11,647 --> 00:20:13,695
就是把这个next

337
00:20:13,951 --> 00:20:20,095
紫色渐去赋值赋给它赋给它那不就等于这一

338
00:20:20,351 --> 00:20:26,495
会就此到这里来了吗因为这个类实现在知道这里了所以这一块就只到这里来

339
00:20:26,751 --> 00:20:29,311
这就以移动了这就加加了

340
00:20:32,639 --> 00:20:38,783
他前进到这个下一个节点这里这一前这在内存的什么地方能不知道

341
00:20:39,807 --> 00:20:42,879
但是反正有这一个指针指着他

342
00:20:46,975 --> 00:20:48,255
所以链表

343
00:20:49,535 --> 00:20:50,047
The

344
00:20:50,303 --> 00:20:51,071
佳佳

345
00:20:51,583 --> 00:20:57,215
前进一个节点所做的事情

346
00:20:58,751 --> 00:20:59,775
柬柬的

347
00:21:01,055 --> 00:21:02,335
这里没有列出代码

348
00:21:03,103 --> 00:21:04,127
你可以想象

349
00:21:04,383 --> 00:21:05,663
就是取出

350
00:21:05,919 --> 00:21:10,527
Node1所指的prev1next个指征

351
00:21:10,783 --> 00:21:13,087
再塞回给我的一本书

352
00:21:13,343 --> 00:21:14,367
那就是简洁

353
00:21:14,623 --> 00:21:17,184
前一个元素

354
00:21:18,720 --> 00:21:22,560
这就是佳佳的动作

355
00:21:26,656 --> 00:21:32,032
这张图片里面列出这个三种颜色123看起来非常复杂的讲什么事情

356
00:21:33,056 --> 00:21:34,592
我要躺着侯家家

357
00:21:35,616 --> 00:21:37,152
这里是前佳佳

358
00:21:38,176 --> 00:21:39,456
这时候家家

359
00:21:40,224 --> 00:21:46,368
侯佳佳的这些动作里面的乍看之下了你可能感受不出

360
00:21:46,624 --> 00:21:48,160
我怎么会

361
00:21:48,416 --> 00:21:54,048
你所看到的东西跟你想象东西你想象他的行为可能会不太一样

362
00:21:54,304 --> 00:21:55,328
为什么

363
00:21:56,352 --> 00:22:02,496
我这边要提醒你我不会花太多时间在这个细节上因为这个心理需要时间慢慢

364
00:22:02,752 --> 00:22:08,896
但是我要提醒你的是这里做的动作呢像这边有一个信号设备

365
00:22:09,152 --> 00:22:15,296
这里有一个一些符号那也许是已经被除

366
00:22:15,552 --> 00:22:16,320
红色光

367
00:22:17,088 --> 00:22:18,624
你不能用直观的

368
00:22:18,880 --> 00:22:23,232
以前对于这个操作符的认知去解释

369
00:22:24,000 --> 00:22:24,768
比如说

370
00:22:26,816 --> 00:22:28,864
把我们先先看这里的123

371
00:22:29,120 --> 00:22:32,960
然后再看这个比如说要讲的这个细节

372
00:22:34,240 --> 00:22:40,384
这个候家家的意思是要把原来的维系起来加完之后把原来的东西

373
00:22:40,640 --> 00:22:43,968
回去说我这边写了123

374
00:22:44,224 --> 00:22:46,528
先把原来的东西系起来

375
00:22:46,784 --> 00:22:47,808
一个动作

376
00:22:50,368 --> 00:22:52,160
然后进行操作

377
00:22:52,672 --> 00:22:56,512
这里的操作就是真的要加了真的要前进一个位置

378
00:22:57,024 --> 00:23:00,352
然后第3个动作了再把语言那就只穿回去

379
00:23:00,864 --> 00:23:01,888
侯家家

380
00:23:03,168 --> 00:23:04,704
123

381
00:23:04,960 --> 00:23:06,752
这里的1

382
00:23:08,032 --> 00:23:09,824
源代码是这样

383
00:23:12,640 --> 00:23:14,176
我们可能会以为

384
00:23:15,456 --> 00:23:17,504
这个历史

385
00:23:18,016 --> 00:23:20,064
有一个星号只用在他身上

386
00:23:20,832 --> 00:23:22,368
那信号

387
00:23:23,648 --> 00:23:24,928
不是也被重载了吗

388
00:23:26,464 --> 00:23:31,840
所以你要去分析这个源代码的时候你可能会想那我要去看星号这里面所做的事情

389
00:23:34,400 --> 00:23:37,472
其实不是为了帮你打了一个叉

390
00:23:37,984 --> 00:23:42,080
我们以为会调用此这一个数

391
00:23:42,592 --> 00:23:43,872
其实不是

392
00:23:44,640 --> 00:23:45,408
为什么呢

393
00:23:46,432 --> 00:23:49,760
因为在这一个信号动作之前

394
00:23:50,016 --> 00:23:53,344
兵器更少的遇到了不上这个东西

395
00:23:55,904 --> 00:23:58,976
所以他要先看也被重载了

396
00:24:00,256 --> 00:24:01,536
这个sign

397
00:24:02,304 --> 00:24:03,328
其实是一个

398
00:24:03,584 --> 00:24:05,120
拷贝复制

399
00:24:06,144 --> 00:24:07,424
拷贝构造

400
00:24:07,680 --> 00:24:10,240
拷贝构造上还不是拷贝复制

401
00:24:11,008 --> 00:24:12,288
因为实施纲要

402
00:24:13,056 --> 00:24:15,104
创建一个新的对象

403
00:24:15,360 --> 00:24:16,640
所以他是一个

404
00:24:16,896 --> 00:24:18,688
一个叫做好

405
00:24:19,968 --> 00:24:20,992
拷贝构造函数

406
00:24:22,272 --> 00:24:25,344
这件事情先做完之后才会有这个型号

407
00:24:25,600 --> 00:24:30,720
这是拷贝构造了寻找我这边划的10下来在这个地方

408
00:24:33,792 --> 00:24:34,560
所以

409
00:24:34,816 --> 00:24:38,144
这个等号的右手边这一个

410
00:24:38,656 --> 00:24:41,984
已经变成了这个拷贝

411
00:24:43,008 --> 00:24:44,288
构造函数

412
00:24:44,544 --> 00:24:45,824
参数

413
00:24:47,360 --> 00:24:49,408
这个1000变成他了这里有血

414
00:24:53,760 --> 00:24:55,040
所以

415
00:24:55,296 --> 00:24:56,832
请看打查了部分

416
00:24:57,600 --> 00:25:01,440
其实他不会调用这个型号

417
00:25:04,768 --> 00:25:06,304
这边有点琐碎

418
00:25:12,192 --> 00:25:12,960
依此类推

419
00:25:14,240 --> 00:25:15,776
这里的23

420
00:25:16,544 --> 00:25:22,688
所以我在这个地方只需要提醒各位当你很详细的想去看这一些动作的时候

421
00:25:23,456 --> 00:25:29,600
你要细细的去会说先做什么后做什么呢有哪些动作是

422
00:25:29,856 --> 00:25:34,720
准备重返了要去看重的部分哪些动作呢不是那个样子

423
00:25:39,072 --> 00:25:41,632
在刚刚的这一夜这个讲解里头呢

424
00:25:41,888 --> 00:25:44,704
这个钱夹家是比较容易理解的

425
00:25:44,960 --> 00:25:46,496
而后家家

426
00:25:46,752 --> 00:25:49,056
侯家家的这个这个动作

427
00:25:49,824 --> 00:25:51,872
用到的钱佳佳的部分

428
00:25:52,384 --> 00:25:54,176
调用请假

429
00:25:57,760 --> 00:26:00,064
曾是马这个源代码

430
00:26:00,576 --> 00:26:01,344
简短

431
00:26:01,856 --> 00:26:04,672
我是要去分析他的需要一些功夫

432
00:26:04,928 --> 00:26:05,952
时间

433
00:26:10,816 --> 00:26:12,608
我们还要注意一点

434
00:26:13,376 --> 00:26:15,168
这边的钱佳佳

435
00:26:15,424 --> 00:26:17,216
这个是前佳佳prefix

436
00:26:17,472 --> 00:26:19,520
这个是侯家家

437
00:26:21,312 --> 00:26:23,872
注意它的返回类型

438
00:26:26,432 --> 00:26:27,968
这个是大的reference

439
00:26:28,224 --> 00:26:29,760
这个是不带reference

440
00:26:31,552 --> 00:26:33,344
这边有什么事情可以说吗

441
00:26:35,904 --> 00:26:38,464
这里呀他是要像

442
00:26:40,256 --> 00:26:41,536
小偶像致敬

443
00:26:43,072 --> 00:26:47,680
什么意思呢我们现在看到很多电影说话我要向像偶像致敬

444
00:26:47,936 --> 00:26:49,984
模拟它模仿他们

445
00:26:50,752 --> 00:26:52,544
操作符的

446
00:26:52,800 --> 00:26:53,824
偶像是谁

447
00:26:55,104 --> 00:26:57,664
操作符要向谁看齐呢

448
00:26:58,176 --> 00:27:00,736
整数integer

449
00:27:01,760 --> 00:27:03,040
整数怎么做

450
00:27:03,808 --> 00:27:05,344
我们就那么做

451
00:27:06,624 --> 00:27:09,184
如果你设计出一个一个东西

452
00:27:11,488 --> 00:27:12,000
你

453
00:27:13,024 --> 00:27:15,840
你想你想赋予它某些功能

454
00:27:16,864 --> 00:27:19,680
这个东西是个是个类似数字这样的东西

455
00:27:20,704 --> 00:27:26,848
那你要希望有一个可以看起来对象你就想整数可以怎么做你就那么做整数

456
00:27:27,104 --> 00:27:29,408
不可以怎么做你就不要那么做

457
00:27:30,944 --> 00:27:31,968
拿了这个故事来

458
00:27:32,736 --> 00:27:34,016
我看总数

459
00:27:36,832 --> 00:27:40,672
你可以试着在你的城市里面就这样子这三场试试看啊

460
00:27:40,928 --> 00:27:43,744
我这边那有一个整数初值为6

461
00:27:44,768 --> 00:27:46,560
我把他家家家家

462
00:27:49,376 --> 00:27:51,424
这是钱家家连续四个家

463
00:27:52,704 --> 00:27:55,520
DLC好吗我把它后面四个家

464
00:27:56,800 --> 00:28:02,176
看起来都是在做两次的加价也就是说现在是rs6吗

465
00:28:02,688 --> 00:28:05,760
加下一次就变七再加加一次就变成了

466
00:28:06,016 --> 00:28:07,296
按理说

467
00:28:07,552 --> 00:28:08,832
我们想象

468
00:28:09,344 --> 00:28:11,392
这两行都会得到吧

469
00:28:12,928 --> 00:28:14,464
他是我这里打了一个叉

470
00:28:15,744 --> 00:28:19,840
新加坡允许你后加加加两次

471
00:28:21,376 --> 00:28:22,144
为什么

472
00:28:23,424 --> 00:28:24,960
也许有一些

473
00:28:25,984 --> 00:28:29,824
有些有一些原因不知道

474
00:28:30,080 --> 00:28:31,616
我也没有兴趣研究

475
00:28:32,640 --> 00:28:34,688
反反正事实是如此

476
00:28:34,944 --> 00:28:39,808
总数是不能够做这种动作的后面连续两次降价

477
00:28:42,368 --> 00:28:44,160
我们要向他看齐了

478
00:28:44,672 --> 00:28:46,976
所以这个iterator

479
00:28:49,280 --> 00:28:52,352
侯佳佳就是这个版本

480
00:28:54,144 --> 00:28:55,680
这时候家家不允许

481
00:28:56,192 --> 00:28:57,728
侯佳佳是这个版本

482
00:29:00,288 --> 00:29:04,896
在我们的宇宙为什么候家家为了去阻止他做两次加动作

483
00:29:05,152 --> 00:29:06,432
我们这里穿回来了

484
00:29:07,200 --> 00:29:08,480
不是人

485
00:29:10,784 --> 00:29:16,160
他又要模拟整数他的钱佳佳可以做两次动作

486
00:29:17,952 --> 00:29:20,768
所以这个地方全家加的版本

487
00:29:26,912 --> 00:29:33,056
曾一次就是这里的两个版本他的返回类型之所以一个市

488
00:29:33,312 --> 00:29:39,456
另外一个不是NFC是为了模拟整数的这个加加连续

489
00:29:39,712 --> 00:29:42,272
去两次动作有一个是可以一个是不可以的

490
00:29:45,344 --> 00:29:46,368
这个原因

491
00:29:55,328 --> 00:29:57,888
好我们就拿家家

492
00:29:58,144 --> 00:29:59,680
来作为代表

493
00:30:00,192 --> 00:30:06,336
历史有很多的历史的iterator迭代器有很多的操作符重载我们就拿家

494
00:30:06,592 --> 00:30:09,152
家家做代表儿家家他有

495
00:30:09,408 --> 00:30:11,200
钱佳佳康侯佳佳

496
00:30:16,320 --> 00:30:17,344
另外

497
00:30:18,112 --> 00:30:24,256
一个iterator还除了他一动加价钱钱都是在做移动除了移动之外它的另外一个

498
00:30:24,512 --> 00:30:26,048
重要的身份就是

499
00:30:26,560 --> 00:30:30,656
任务就是要去体内提取

500
00:30:32,704 --> 00:30:36,032
所以提取的动作就是信号灯箭头符号

501
00:30:37,824 --> 00:30:38,848
我们太行号

502
00:30:41,408 --> 00:30:44,480
面对这一个iterator

503
00:30:45,504 --> 00:30:51,648
你对他信号作用在他身上其实你的用意是什么你我作为一个屁

504
00:30:51,904 --> 00:30:54,976
美国仍是原我的用意是想取得这个资料data

505
00:30:57,024 --> 00:30:58,304
所以我就这么做啊

506
00:30:58,560 --> 00:31:04,192
这个型号我做了什么事情呢我就通过绿色这个nod1

507
00:31:04,704 --> 00:31:09,056
使得整个节点型号码取得整个节点

508
00:31:09,312 --> 00:31:14,944
整个节点它有三折再去盗取出其中的Beta

509
00:31:17,504 --> 00:31:18,784
有了飞行动作

510
00:31:19,808 --> 00:31:25,952
帮我对这个iterator坐星号我就是去取的这个地方这就是我

511
00:31:26,208 --> 00:31:28,768
我想象中所要的是行为

512
00:31:34,656 --> 00:31:36,192
箭头好差不多

513
00:31:36,960 --> 00:31:39,008
在部份就留给你去想象

514
00:31:41,824 --> 00:31:43,616
花些时间去思考

515
00:31:45,408 --> 00:31:46,688
右手边有

516
00:31:47,968 --> 00:31:48,736
一些说明

517
00:31:49,760 --> 00:31:52,832
这个讲义你可以获得所以可以你可以慢慢去理解它
